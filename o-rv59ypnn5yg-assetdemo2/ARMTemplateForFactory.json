{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "o-rv59ypnn5yg-assetdemo2"
		},
		"AcceleratorOutput_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AcceleratorOutput'"
		},
		"AcceleratorStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AcceleratorStorage'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/1-110-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-110-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-110-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-110-AlreadyExistName.csv for details",
										"errorCode": "1-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-110-NotExistingEquipmentComponentCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-110-NotExistingEquipmentComponentCustomDataNumber.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-110-NotExistingEquipmentComponentCustomDataNumber.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv not existing. See 1-110-NotExistingEquipmentComponentCustomDataNumber.csv for details",
										"errorCode": "1-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-110-NotExistingEquipmentComponentCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-110-NotExistingEquipmentComponentCustomDataString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-110-NotExistingEquipmentComponentCustomDataString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv not existing. See 1-110-NotExistingEquipmentComponentCustomDataString.csv for details",
										"errorCode": "1-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-110-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-110-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-110-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-110-NotUniqueName.csv for details",
										"errorCode": "1-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-111-MissColumnCustomDataCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-111-MissColumnCustomDataCustomDataNumber.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-111-MissColumnCustomDataCustomDataNumber.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns CustomData in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. Open 1-111-MissColumnCustomDataCustomDataNumber.csv for details",
										"errorCode": "1-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-111-MissColumnCustomDataCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-111-MissColumnCustomDataCustomDataString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-111-MissColumnCustomDataCustomDataString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns CustomData in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. Open 1-111-MissColumnCustomDataCustomDataString.csv for details",
										"errorCode": "1-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-111-MissColumnEquipmentComponentCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-111-MissColumnEquipmentComponentCustomDataNumber.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-111-MissColumnEquipmentComponentCustomDataNumber.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. Open 1-111-MissColumnEquipmentComponentCustomDataNumber.csv for details",
										"errorCode": "1-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-111-MissColumnEquipmentComponentCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-111-MissColumnEquipmentComponentCustomDataString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-111-MissColumnEquipmentComponentCustomDataString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. Open 1-111-MissColumnEquipmentComponentCustomDataString.csv for details",
										"errorCode": "1-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-111-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-111-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-111-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. Open 1-111-MissColumnName.csv for details",
										"errorCode": "1-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-111-MissColumnValueCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-111-MissColumnValueCustomDataNumber.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-111-MissColumnValueCustomDataNumber.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. Open 1-111-MissColumnValueCustomDataNumber.csv for details",
										"errorCode": "1-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-111-MissColumnValueCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-111-MissColumnValueCustomDataString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-111-MissColumnValueCustomDataString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. Open 1-111-MissColumnValueCustomDataString.csv for details",
										"errorCode": "1-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-CriticalityLevelFailureWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-CriticalityLevelFailureWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-CriticalityLevelFailureWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CriticalityLevelFailure in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-CriticalityLevelFailureWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-CriticalityLevelNetworkConstraintWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-CriticalityLevelNetworkConstraintWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-CriticalityLevelNetworkConstraintWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CriticalityLevelNetworkConstraint in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-CriticalityLevelNetworkConstraintWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-CustomDataNumberValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-CustomDataNumberValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-CustomDataNumberValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CustomDataNumberValue in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-CustomDataNumberValueWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-EnvironmentAgingRateWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-EnvironmentAgingRateWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-EnvironmentAgingRateWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for EnvironmentAgingRate in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-EnvironmentAgingRateWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-EnvironmentalConsequencesFactorWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-EnvironmentalConsequencesFactorWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-EnvironmentalConsequencesFactorWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for EnvironmentalConsequencesFactor in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-EnvironmentalConsequencesFactorWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-FinancialConsequencesFactorWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-FinancialConsequencesFactorWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-FinancialConsequencesFactorWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for FinancialConsequencesFactor in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-FinancialConsequencesFactorWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-HealthScoreWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-HealthScoreWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-HealthScoreWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for HealthScore in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-HealthScoreWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-InstallationYearWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-InstallationYearWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-InstallationYearWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for InstallationYear in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-InstallationYearWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-KnownApparentAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-KnownApparentAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-KnownApparentAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for KnownApparentAge in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-KnownApparentAgeWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-NetworkConsequencesFactorWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-NetworkConsequencesFactorWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-NetworkConsequencesFactorWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for NetworkConsequencesFactor in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-NetworkConsequencesFactorWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-QuantityWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-QuantityWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-QuantityWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Quantity in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-QuantityWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-112-SAIDI15minWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-112-SAIDI15minWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-112-SAIDI15minWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for SAIDI15min in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-112-SAIDI15minWrongType.csv for details",
										"errorCode": "1-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-113-HealthScoreInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-113-HealthScoreInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-113-HealthScoreInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for HealthScore in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-113-HealthScoreInvalidRange.csv for details",
										"errorCode": "1-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-113-KnownApparentAgeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-113-KnownApparentAgeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-113-KnownApparentAgeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for KnownApparentAge in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponents.csv. See 1-113-KnownApparentAgeInvalidRange.csv for details",
										"errorCode": "1-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-120-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-120-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-120-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-120-AlreadyExistName.csv for details",
										"errorCode": "1-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-120-NotExistingAgingFamilyFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-120-NotExistingAgingFamilyFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-120-NotExistingAgingFamilyFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv not existing. See 1-120-NotExistingAgingFamilyFamilyPairHillParameters.csv for details",
										"errorCode": "1-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-120-NotExistingAgingFamilyMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-120-NotExistingAgingFamilyMapReferenceCostOfFailure.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-120-NotExistingAgingFamilyMapReferenceCostOfFailure.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv not existing. See 1-120-NotExistingAgingFamilyMapReferenceCostOfFailure.csv for details",
										"errorCode": "1-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-120-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-120-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-120-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-120-NotUniqueName.csv for details",
										"errorCode": "1-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-121-MissColumnAgentAgingFamilyFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-121-MissColumnAgentAgingFamilyFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-121-MissColumnAgentAgingFamilyFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgentAgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. Open 1-121-MissColumnAgentAgingFamilyFamilyPairHillParameters.csv for details",
										"errorCode": "1-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-121-MissColumnAgingFamilyFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-121-MissColumnAgingFamilyFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-121-MissColumnAgingFamilyFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. Open 1-121-MissColumnAgingFamilyFamilyPairHillParameters.csv for details",
										"errorCode": "1-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-121-MissColumnAgingFamilyMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-121-MissColumnAgingFamilyMapReferenceCostOfFailure.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-121-MissColumnAgingFamilyMapReferenceCostOfFailure.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. Open 1-121-MissColumnAgingFamilyMapReferenceCostOfFailure.csv for details",
										"errorCode": "1-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-121-MissColumnHealthIndexMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-121-MissColumnHealthIndexMapReferenceCostOfFailure.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-121-MissColumnHealthIndexMapReferenceCostOfFailure.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns HealthIndex in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. Open 1-121-MissColumnHealthIndexMapReferenceCostOfFailure.csv for details",
										"errorCode": "1-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-121-MissColumnHillParametersFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-121-MissColumnHillParametersFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-121-MissColumnHillParametersFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns HillParameters in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. Open 1-121-MissColumnHillParametersFamilyPairHillParameters.csv for details",
										"errorCode": "1-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-121-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-121-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-121-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. Open 1-121-MissColumnName.csv for details",
										"errorCode": "1-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-121-MissColumnValueFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-121-MissColumnValueFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-121-MissColumnValueFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. Open 1-121-MissColumnValueFamilyPairHillParameters.csv for details",
										"errorCode": "1-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-121-MissColumnValueMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-121-MissColumnValueMapReferenceCostOfFailure.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-121-MissColumnValueMapReferenceCostOfFailure.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. Open 1-121-MissColumnValueMapReferenceCostOfFailure.csv for details",
										"errorCode": "1-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-AgingFailureDelayWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-AgingFailureDelayWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-AgingFailureDelayWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for AgingFailureDelay in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-AgingFailureDelayWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-AmplitudeHillWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-AmplitudeHillWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-AmplitudeHillWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for AmplitudeHill in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-AmplitudeHillWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-EnvironmentalCostOfFailureWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-EnvironmentalCostOfFailureWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-EnvironmentalCostOfFailureWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for EnvironmentalCostOfFailure in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-EnvironmentalCostOfFailureWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-ExpectedLifeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-ExpectedLifeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-ExpectedLifeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for ExpectedLife in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-ExpectedLifeWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-ExternalFailureRatePerYearWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-ExternalFailureRatePerYearWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-ExternalFailureRatePerYearWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for ExternalFailureRatePerYear in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-ExternalFailureRatePerYearWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-FailureRateAtMaximalAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-FailureRateAtMaximalAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-FailureRateAtMaximalAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for FailureRateAtMaximalAge in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-FailureRateAtMaximalAgeWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-FailureRateAtMinimalAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-FailureRateAtMinimalAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-FailureRateAtMinimalAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for FailureRateAtMinimalAge in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-FailureRateAtMinimalAgeWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-FinancialCostOfFailureWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-FinancialCostOfFailureWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-FinancialCostOfFailureWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for FinancialCostOfFailure in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-FinancialCostOfFailureWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-GFlagWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-GFlagWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-GFlagWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for GFlag in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-GFlagWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-IsAgingAfterDeathWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-IsAgingAfterDeathWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-IsAgingAfterDeathWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsAgingAfterDeath in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-IsAgingAfterDeathWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-IsCouplingActiveWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-IsCouplingActiveWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-IsCouplingActiveWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsCouplingActive in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-IsCouplingActiveWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-IsFailureTransmittedWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-IsFailureTransmittedWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-IsFailureTransmittedWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsFailureTransmitted in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-IsFailureTransmittedWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-IsQuantityDiscreteWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-IsQuantityDiscreteWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-IsQuantityDiscreteWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsQuantityDiscrete in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-IsQuantityDiscreteWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-MaintenanceIfOutOfOrderWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-MaintenanceIfOutOfOrderWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-MaintenanceIfOutOfOrderWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MaintenanceIfOutOfOrder in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-MaintenanceIfOutOfOrderWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-MapReferenceCostOfFailureValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-MapReferenceCostOfFailureValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-MapReferenceCostOfFailureValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MapReferenceCostOfFailureValue in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-MapReferenceCostOfFailureValueWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-MaximalAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-MaximalAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-MaximalAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MaximalAge in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-MaximalAgeWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-MinimalAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-MinimalAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-MinimalAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MinimalAge in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-MinimalAgeWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-NetworkCostOfFailureWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-NetworkCostOfFailureWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-NetworkCostOfFailureWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for NetworkCostOfFailure in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-NetworkCostOfFailureWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-OffsetHillWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-OffsetHillWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-OffsetHillWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for OffsetHill in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-OffsetHillWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-ScaleWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-ScaleWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-ScaleWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Scale in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-ScaleWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-ShapeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-ShapeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-ShapeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Shape in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-ShapeWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-122-SlopeHillWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-122-SlopeHillWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-122-SlopeHillWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for SlopeHill in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-122-SlopeHillWrongType.csv for details",
										"errorCode": "1-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-123-AgingMethodologyInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-123_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-123-AgingMethodologyInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_123",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-123_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-123_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-123_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-123_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_123",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-123-AgingMethodologyInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-123_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for AgingMethodology in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-123-AgingMethodologyInvalidRange.csv for details",
										"errorCode": "1-123"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_123')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-123-ExternalFailureRatePerYearInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-123_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-123-ExternalFailureRatePerYearInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_123",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-123_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-123_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-123_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-123_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_123",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-123-ExternalFailureRatePerYearInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-123_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for ExternalFailureRatePerYear in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-123-ExternalFailureRatePerYearInvalidRange.csv for details",
										"errorCode": "1-123"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_123')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-123-HillParametersFamilyPairHillParametersInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-123_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-123-HillParametersFamilyPairHillParametersInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_123",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-123_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-123_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-123_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-123_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_123",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-123-HillParametersFamilyPairHillParametersInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-123_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for HillParametersFamilyPairHillParameters in asset-integration-accelerator-input/AssetPortfolio/Create/AgingFamilies.csv. See 1-123-HillParametersFamilyPairHillParametersInvalidRange.csv for details",
										"errorCode": "1-123"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_123')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-210-AlreadyExistEquipmentComponent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-210-AlreadyExistEquipmentComponent.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-210-AlreadyExistEquipmentComponent.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "EquipmentComponent have already used value in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsAgingFamilies.csv. See 1-210-AlreadyExistEquipmentComponent.csv for details",
										"errorCode": "1-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-210-NotExistingAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-210-NotExistingAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-210-NotExistingAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsAgingFamilies.csv not existing. See 1-210-NotExistingAgingFamily.csv for details",
										"errorCode": "1-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-210-NotExistingEquipmentComponent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-210-NotExistingEquipmentComponent.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-210-NotExistingEquipmentComponent.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsAgingFamilies.csv not existing. See 1-210-NotExistingEquipmentComponent.csv for details",
										"errorCode": "1-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-211-MissColumnAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-211_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-211-MissColumnAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_211",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-211_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-211_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-211_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-211_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_211",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-211-MissColumnAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-211_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsAgingFamilies.csv. Open 1-211-MissColumnAgingFamily.csv for details",
										"errorCode": "1-211"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-211-MissColumnEquipmentComponent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-211_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-211-MissColumnEquipmentComponent.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_211",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-211_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-211_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-211_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-211_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_211",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-211-MissColumnEquipmentComponent.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-211_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsAgingFamilies.csv. Open 1-211-MissColumnEquipmentComponent.csv for details",
										"errorCode": "1-211"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-220-AlreadyExistEquipmentComponentSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-220-AlreadyExistEquipmentComponentSource.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-220-AlreadyExistEquipmentComponentSource.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "EquipmentComponentSource have already used value in asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsEquipmentComponents.csv. See 1-220-AlreadyExistEquipmentComponentSource.csv for details",
										"errorCode": "1-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-220-NotExistingEquipmentComponentSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-220-NotExistingEquipmentComponentSource.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-220-NotExistingEquipmentComponentSource.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponentSource in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsEquipmentComponents.csv not existing. See 1-220-NotExistingEquipmentComponentSource.csv for details",
										"errorCode": "1-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-220-NotExistingEquipmentComponentTarget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-220-NotExistingEquipmentComponentTarget.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-220-NotExistingEquipmentComponentTarget.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponentTarget in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsEquipmentComponents.csv not existing. See 1-220-NotExistingEquipmentComponentTarget.csv for details",
										"errorCode": "1-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-221-MissColumnEquipmentComponentSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-221_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-221-MissColumnEquipmentComponentSource.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_221",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-221_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-221_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-221_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-221_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_221",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-221-MissColumnEquipmentComponentSource.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-221_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponentSource in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsEquipmentComponents.csv. Open 1-221-MissColumnEquipmentComponentSource.csv for details",
										"errorCode": "1-221"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-221-MissColumnEquipmentComponentTarget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-221_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-221-MissColumnEquipmentComponentTarget.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_221",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-221_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-221_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-221_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-221_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_221",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-221-MissColumnEquipmentComponentTarget.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-221_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponentTarget in file asset-integration-accelerator-input/AssetPortfolio/Create/EquipmentComponentsEquipmentComponents.csv. Open 1-221-MissColumnEquipmentComponentTarget.csv for details",
										"errorCode": "1-221"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-310-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-310_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-310-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_310",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-310_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-310_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-310_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-310_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_310",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-310-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-310_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/AssetPortfolio/Delete/EquipmentComponents.csv not existing. See 1-310-NotExistingName.csv for details",
										"errorCode": "1-310"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_310')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-311-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-311_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-311-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_311",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-311_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-311_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-311_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-311_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_311",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-311-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-311_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolio/Delete/EquipmentComponents.csv. Open 1-311-MissColumnName.csv for details",
										"errorCode": "1-311"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-320-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-320_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-320-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_320",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-320_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-320_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-320_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-320_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_320",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-320-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-320_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/AssetPortfolio/Delete/AgingFamilies.csv not existing. See 1-320-NotExistingName.csv for details",
										"errorCode": "1-320"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_320')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-321-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-321_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-321-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_321",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-321_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-321_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-321_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-321_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_321",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-321-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-321_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolio/Delete/AgingFamilies.csv. Open 1-321-MissColumnName.csv for details",
										"errorCode": "1-321"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_321')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-410-NotExistingEquipmentComponent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-410_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-410-NotExistingEquipmentComponent.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_410",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-410_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-410_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-410_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-410_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_410",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-410-NotExistingEquipmentComponent.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-410_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Delete/EquipmentComponentsAgingFamilies.csv not existing. See 1-410-NotExistingEquipmentComponent.csv for details",
										"errorCode": "1-410"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_410')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-411-MissColumnAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-411_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-411-MissColumnAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_411",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-411_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-411_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-411_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-411_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_411",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-411-MissColumnAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-411_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Delete/EquipmentComponentsAgingFamilies.csv. Open 1-411-MissColumnAgingFamily.csv for details",
										"errorCode": "1-411"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_411')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-411-MissColumnEquipmentComponent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-411_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-411-MissColumnEquipmentComponent.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_411",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-411_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-411_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-411_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-411_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_411",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-411-MissColumnEquipmentComponent.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-411_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Delete/EquipmentComponentsAgingFamilies.csv. Open 1-411-MissColumnEquipmentComponent.csv for details",
										"errorCode": "1-411"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_411')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-420-NotExistingEquipmentComponentSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-420_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-420-NotExistingEquipmentComponentSource.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_420",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-420_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-420_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-420_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-420_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_420",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-420-NotExistingEquipmentComponentSource.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-420_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponentSource in file asset-integration-accelerator-input/AssetPortfolio/Delete/EquipmentComponentsEquipmentComponents.csv not existing. See 1-420-NotExistingEquipmentComponentSource.csv for details",
										"errorCode": "1-420"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_420')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-421-MissColumnEquipmentComponentSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-421_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-421-MissColumnEquipmentComponentSource.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_421",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-421_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-421_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-421_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-421_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_421",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-421-MissColumnEquipmentComponentSource.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-421_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponentSource in file asset-integration-accelerator-input/AssetPortfolio/Delete/EquipmentComponentsEquipmentComponents.csv. Open 1-421-MissColumnEquipmentComponentSource.csv for details",
										"errorCode": "1-421"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_421')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-421-MissColumnEquipmentComponentTarget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-421_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-421-MissColumnEquipmentComponentTarget.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_421",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-421_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-421_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-421_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-421_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_421",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-421-MissColumnEquipmentComponentTarget.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-421_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponentTarget in file asset-integration-accelerator-input/AssetPortfolio/Delete/EquipmentComponentsEquipmentComponents.csv. Open 1-421-MissColumnEquipmentComponentTarget.csv for details",
										"errorCode": "1-421"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_421')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-510-NotExistingEquipmentComponentCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-510-NotExistingEquipmentComponentCustomDataNumber.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-510-NotExistingEquipmentComponentCustomDataNumber.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv not existing. See 1-510-NotExistingEquipmentComponentCustomDataNumber.csv for details",
										"errorCode": "1-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-510-NotExistingEquipmentComponentCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-510-NotExistingEquipmentComponentCustomDataString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-510-NotExistingEquipmentComponentCustomDataString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv not existing. See 1-510-NotExistingEquipmentComponentCustomDataString.csv for details",
										"errorCode": "1-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-510-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-510-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-510-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv not existing. See 1-510-NotExistingName.csv for details",
										"errorCode": "1-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-511-MissColumnCustomDataCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-511-MissColumnCustomDataCustomDataNumber.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-511-MissColumnCustomDataCustomDataNumber.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns CustomData in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. Open 1-511-MissColumnCustomDataCustomDataNumber.csv for details",
										"errorCode": "1-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-511-MissColumnCustomDataCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-511-MissColumnCustomDataCustomDataString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-511-MissColumnCustomDataCustomDataString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns CustomData in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. Open 1-511-MissColumnCustomDataCustomDataString.csv for details",
										"errorCode": "1-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-511-MissColumnEquipmentComponentCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-511-MissColumnEquipmentComponentCustomDataNumber.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-511-MissColumnEquipmentComponentCustomDataNumber.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. Open 1-511-MissColumnEquipmentComponentCustomDataNumber.csv for details",
										"errorCode": "1-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-511-MissColumnEquipmentComponentCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-511-MissColumnEquipmentComponentCustomDataString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-511-MissColumnEquipmentComponentCustomDataString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. Open 1-511-MissColumnEquipmentComponentCustomDataString.csv for details",
										"errorCode": "1-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-511-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-511-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-511-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. Open 1-511-MissColumnName.csv for details",
										"errorCode": "1-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-511-MissColumnValueCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-511-MissColumnValueCustomDataNumber.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-511-MissColumnValueCustomDataNumber.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. Open 1-511-MissColumnValueCustomDataNumber.csv for details",
										"errorCode": "1-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-511-MissColumnValueCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-511-MissColumnValueCustomDataString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-511-MissColumnValueCustomDataString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. Open 1-511-MissColumnValueCustomDataString.csv for details",
										"errorCode": "1-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-CriticalityLevelFailureWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-CriticalityLevelFailureWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-CriticalityLevelFailureWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CriticalityLevelFailure in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-CriticalityLevelFailureWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-CriticalityLevelNetworkConstraintWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-CriticalityLevelNetworkConstraintWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-CriticalityLevelNetworkConstraintWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CriticalityLevelNetworkConstraint in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-CriticalityLevelNetworkConstraintWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-CustomDataNumberValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-CustomDataNumberValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-CustomDataNumberValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CustomDataNumberValue in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-CustomDataNumberValueWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-EnvironmentAgingRateWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-EnvironmentAgingRateWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-EnvironmentAgingRateWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for EnvironmentAgingRate in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-EnvironmentAgingRateWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-EnvironmentalConsequencesFactorWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-EnvironmentalConsequencesFactorWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-EnvironmentalConsequencesFactorWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for EnvironmentalConsequencesFactor in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-EnvironmentalConsequencesFactorWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-FinancialConsequencesFactorWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-FinancialConsequencesFactorWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-FinancialConsequencesFactorWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for FinancialConsequencesFactor in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-FinancialConsequencesFactorWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-HealthScoreWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-HealthScoreWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-HealthScoreWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for HealthScore in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-HealthScoreWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-InstallationYearWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-InstallationYearWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-InstallationYearWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for InstallationYear in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-InstallationYearWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-KnownApparentAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-KnownApparentAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-KnownApparentAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for KnownApparentAge in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-KnownApparentAgeWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-NetworkConsequencesFactorWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-NetworkConsequencesFactorWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-NetworkConsequencesFactorWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for NetworkConsequencesFactor in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-NetworkConsequencesFactorWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-QuantityWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-QuantityWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-QuantityWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Quantity in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-QuantityWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-512-SAIDI15minWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-512-SAIDI15minWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-512-SAIDI15minWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for SAIDI15min in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-512-SAIDI15minWrongType.csv for details",
										"errorCode": "1-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-513-HealthScoreInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-513-HealthScoreInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-513-HealthScoreInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for HealthScore in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-513-HealthScoreInvalidRange.csv for details",
										"errorCode": "1-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-513-KnownApparentAgeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-513-KnownApparentAgeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-513-KnownApparentAgeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for KnownApparentAge in asset-integration-accelerator-input/AssetPortfolio/Update/EquipmentComponents.csv. See 1-513-KnownApparentAgeInvalidRange.csv for details",
										"errorCode": "1-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-520-NotExistingAgingFamilyFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-520_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-520-NotExistingAgingFamilyFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_520",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-520_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-520_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-520_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-520_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_520",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-520-NotExistingAgingFamilyFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-520_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv not existing. See 1-520-NotExistingAgingFamilyFamilyPairHillParameters.csv for details",
										"errorCode": "1-520"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_520')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-520-NotExistingAgingFamilyMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-520_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-520-NotExistingAgingFamilyMapReferenceCostOfFailure.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_520",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-520_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-520_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-520_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-520_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_520",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-520-NotExistingAgingFamilyMapReferenceCostOfFailure.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-520_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv not existing. See 1-520-NotExistingAgingFamilyMapReferenceCostOfFailure.csv for details",
										"errorCode": "1-520"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_520')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-520-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-520_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-520-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_520",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-520_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-520_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-520_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-520_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_520",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-520-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-520_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv not existing. See 1-520-NotExistingName.csv for details",
										"errorCode": "1-520"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_520')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-521-MissColumnAgentAgingFamilyFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-521-MissColumnAgentAgingFamilyFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-521-MissColumnAgentAgingFamilyFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgentAgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. Open 1-521-MissColumnAgentAgingFamilyFamilyPairHillParameters.csv for details",
										"errorCode": "1-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-521-MissColumnAgingFamilyFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-521-MissColumnAgingFamilyFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-521-MissColumnAgingFamilyFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. Open 1-521-MissColumnAgingFamilyFamilyPairHillParameters.csv for details",
										"errorCode": "1-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-521-MissColumnAgingFamilyMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-521-MissColumnAgingFamilyMapReferenceCostOfFailure.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-521-MissColumnAgingFamilyMapReferenceCostOfFailure.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. Open 1-521-MissColumnAgingFamilyMapReferenceCostOfFailure.csv for details",
										"errorCode": "1-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-521-MissColumnHealthIndexMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-521-MissColumnHealthIndexMapReferenceCostOfFailure.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-521-MissColumnHealthIndexMapReferenceCostOfFailure.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns HealthIndex in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. Open 1-521-MissColumnHealthIndexMapReferenceCostOfFailure.csv for details",
										"errorCode": "1-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-521-MissColumnHillParametersFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-521-MissColumnHillParametersFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-521-MissColumnHillParametersFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns HillParameters in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. Open 1-521-MissColumnHillParametersFamilyPairHillParameters.csv for details",
										"errorCode": "1-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-521-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-521-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-521-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. Open 1-521-MissColumnName.csv for details",
										"errorCode": "1-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-521-MissColumnValueFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-521-MissColumnValueFamilyPairHillParameters.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-521-MissColumnValueFamilyPairHillParameters.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. Open 1-521-MissColumnValueFamilyPairHillParameters.csv for details",
										"errorCode": "1-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-521-MissColumnValueMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-521-MissColumnValueMapReferenceCostOfFailure.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-521-MissColumnValueMapReferenceCostOfFailure.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. Open 1-521-MissColumnValueMapReferenceCostOfFailure.csv for details",
										"errorCode": "1-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-AgingFailureDelayWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-AgingFailureDelayWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-AgingFailureDelayWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for AgingFailureDelay in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-AgingFailureDelayWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-AmplitudeHillWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-AmplitudeHillWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-AmplitudeHillWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for AmplitudeHill in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-AmplitudeHillWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-EnvironmentalCostOfFailureWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-EnvironmentalCostOfFailureWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-EnvironmentalCostOfFailureWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for EnvironmentalCostOfFailure in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-EnvironmentalCostOfFailureWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-ExpectedLifeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-ExpectedLifeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-ExpectedLifeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for ExpectedLife in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-ExpectedLifeWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-ExternalFailureRatePerYearWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-ExternalFailureRatePerYearWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-ExternalFailureRatePerYearWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for ExternalFailureRatePerYear in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-ExternalFailureRatePerYearWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-FailureRateAtMaximalAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-FailureRateAtMaximalAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-FailureRateAtMaximalAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for FailureRateAtMaximalAge in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-FailureRateAtMaximalAgeWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-FailureRateAtMinimalAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-FailureRateAtMinimalAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-FailureRateAtMinimalAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for FailureRateAtMinimalAge in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-FailureRateAtMinimalAgeWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-FinancialCostOfFailureWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-FinancialCostOfFailureWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-FinancialCostOfFailureWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for FinancialCostOfFailure in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-FinancialCostOfFailureWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-GFlagWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-GFlagWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-GFlagWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for GFlag in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-GFlagWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-IsAgingAfterDeathWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-IsAgingAfterDeathWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-IsAgingAfterDeathWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsAgingAfterDeath in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-IsAgingAfterDeathWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-IsCouplingActiveWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-IsCouplingActiveWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-IsCouplingActiveWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsCouplingActive in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-IsCouplingActiveWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-IsFailureTransmittedWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-IsFailureTransmittedWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-IsFailureTransmittedWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsFailureTransmitted in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-IsFailureTransmittedWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-IsQuantityDiscreteWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-IsQuantityDiscreteWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-IsQuantityDiscreteWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsQuantityDiscrete in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-IsQuantityDiscreteWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-MaintenanceIfOutOfOrderWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-MaintenanceIfOutOfOrderWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-MaintenanceIfOutOfOrderWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MaintenanceIfOutOfOrder in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-MaintenanceIfOutOfOrderWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-MapReferenceCostOfFailureValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-MapReferenceCostOfFailureValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-MapReferenceCostOfFailureValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MapReferenceCostOfFailureValue in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-MapReferenceCostOfFailureValueWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-MaximalAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-MaximalAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-MaximalAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MaximalAge in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-MaximalAgeWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-MinimalAgeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-MinimalAgeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-MinimalAgeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MinimalAge in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-MinimalAgeWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-NetworkCostOfFailureWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-NetworkCostOfFailureWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-NetworkCostOfFailureWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for NetworkCostOfFailure in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-NetworkCostOfFailureWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-OffsetHillWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-OffsetHillWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-OffsetHillWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for OffsetHill in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-OffsetHillWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-ScaleWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-ScaleWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-ScaleWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Scale in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-ScaleWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-ShapeWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-ShapeWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-ShapeWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Shape in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-ShapeWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-522-SlopeHillWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-522-SlopeHillWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-522-SlopeHillWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for SlopeHill in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-522-SlopeHillWrongType.csv for details",
										"errorCode": "1-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-523-AgingMethodologyInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-523_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-523-AgingMethodologyInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_523",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-523_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-523_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-523_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-523_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_523",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-523-AgingMethodologyInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-523_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for AgingMethodology in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-523-AgingMethodologyInvalidRange.csv for details",
										"errorCode": "1-523"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_523')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-523-ExternalFailureRatePerYearInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-523_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-523-ExternalFailureRatePerYearInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_523",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-523_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-523_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-523_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-523_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_523",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-523-ExternalFailureRatePerYearInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-523_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for ExternalFailureRatePerYear in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-523-ExternalFailureRatePerYearInvalidRange.csv for details",
										"errorCode": "1-523"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_523')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-523-HillParametersFamilyPairHillParametersInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1-523_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "1-523-HillParametersFamilyPairHillParametersInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "1_523",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "1-523_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "1-523_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('1-523_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "1-523_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "1_523",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "1-523-HillParametersFamilyPairHillParametersInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "1-523_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for HillParametersFamilyPairHillParameters in asset-integration-accelerator-input/AssetPortfolio/Update/AgingFamilies.csv. See 1-523-HillParametersFamilyPairHillParametersInvalidRange.csv for details",
										"errorCode": "1-523"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/1_523')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-110-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-110-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-110-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamilies.csv. See 11-110-AlreadyExistName.csv for details",
										"errorCode": "11-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-110-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-110-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-110-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamilies.csv. See 11-110-NotUniqueName.csv for details",
										"errorCode": "11-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-111-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-111-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-111-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamilies.csv. Open 11-111-MissColumnName.csv for details",
										"errorCode": "11-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-112-ImpactOnEquipmentWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-112-ImpactOnEquipmentWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-112-ImpactOnEquipmentWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for ImpactOnEquipment in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamilies.csv. See 11-112-ImpactOnEquipmentWrongType.csv for details",
										"errorCode": "11-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-113-ImpactModeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-113-ImpactModeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-113-ImpactModeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for ImpactMode in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamilies.csv. See 11-113-ImpactModeInvalidRange.csv for details",
										"errorCode": "11-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-113-ImpactOnEquipmentInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-113-ImpactOnEquipmentInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-113-ImpactOnEquipmentInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for ImpactOnEquipment in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamilies.csv. See 11-113-ImpactOnEquipmentInvalidRange.csv for details",
										"errorCode": "11-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-113-TypeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-113-TypeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-113-TypeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for Type in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamilies.csv. See 11-113-TypeInvalidRange.csv for details",
										"errorCode": "11-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-120-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-120-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-120-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. See 11-120-AlreadyExistName.csv for details",
										"errorCode": "11-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-120-NotExistingEquipmentGroupBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-120-NotExistingEquipmentGroupBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-120-NotExistingEquipmentGroupBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv not existing. See 11-120-NotExistingEquipmentGroupBudgetCategories.csv for details",
										"errorCode": "11-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-120-NotExistingEquipmentGroupHRCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-120-NotExistingEquipmentGroupHRCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-120-NotExistingEquipmentGroupHRCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv not existing. See 11-120-NotExistingEquipmentGroupHRCategories.csv for details",
										"errorCode": "11-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-120-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-120-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-120-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. See 11-120-NotUniqueName.csv for details",
										"errorCode": "11-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-121-MissColumnEquipmentGroupBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-121-MissColumnEquipmentGroupBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-121-MissColumnEquipmentGroupBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. Open 11-121-MissColumnEquipmentGroupBudgetCategories.csv for details",
										"errorCode": "11-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-121-MissColumnEquipmentGroupHRCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-121-MissColumnEquipmentGroupHRCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-121-MissColumnEquipmentGroupHRCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. Open 11-121-MissColumnEquipmentGroupHRCategories.csv for details",
										"errorCode": "11-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-121-MissColumnIndexBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-121-MissColumnIndexBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-121-MissColumnIndexBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. Open 11-121-MissColumnIndexBudgetCategories.csv for details",
										"errorCode": "11-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-121-MissColumnIndexHRCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-121-MissColumnIndexHRCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-121-MissColumnIndexHRCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. Open 11-121-MissColumnIndexHRCategories.csv for details",
										"errorCode": "11-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-121-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-121-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-121-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. Open 11-121-MissColumnName.csv for details",
										"errorCode": "11-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-121-MissColumnValueBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-121-MissColumnValueBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-121-MissColumnValueBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. Open 11-121-MissColumnValueBudgetCategories.csv for details",
										"errorCode": "11-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-121-MissColumnValueHRCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-121-MissColumnValueHRCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-121-MissColumnValueHRCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. Open 11-121-MissColumnValueHRCategories.csv for details",
										"errorCode": "11-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-122-QuantityWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-122-QuantityWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-122-QuantityWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Quantity in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroups.csv. See 11-122-QuantityWrongType.csv for details",
										"errorCode": "11-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-210-AlreadyExistActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-210-AlreadyExistActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-210-AlreadyExistActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "ActionFamily have already used value in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/ActionFamiliesSubActionFamilies.csv. See 11-210-AlreadyExistActionFamily.csv for details",
										"errorCode": "11-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-210-NotExistingActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-210-NotExistingActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-210-NotExistingActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/ActionFamiliesSubActionFamilies.csv not existing. See 11-210-NotExistingActionFamily.csv for details",
										"errorCode": "11-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-210-NotExistingSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-210-NotExistingSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-210-NotExistingSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/ActionFamiliesSubActionFamilies.csv not existing. See 11-210-NotExistingSubActionFamily.csv for details",
										"errorCode": "11-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-211-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-211_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-211-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_211",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-211_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-211_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-211_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-211_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_211",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-211-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-211_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/ActionFamiliesSubActionFamilies.csv. Open 11-211-MissColumnActionFamily.csv for details",
										"errorCode": "11-211"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-211-MissColumnSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-211_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-211-MissColumnSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_211",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-211_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-211_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-211_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-211_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_211",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-211-MissColumnSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-211_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/ActionFamiliesSubActionFamilies.csv. Open 11-211-MissColumnSubActionFamily.csv for details",
										"errorCode": "11-211"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-220-AlreadyExistSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-220-AlreadyExistSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-220-AlreadyExistSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "SubActionFamily have already used value in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamiliesAgingFamiliesApplication.csv. See 11-220-AlreadyExistSubActionFamily.csv for details",
										"errorCode": "11-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-220-NotExistingAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-220-NotExistingAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-220-NotExistingAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference AgingFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamiliesAgingFamiliesApplication.csv not existing. See 11-220-NotExistingAgingFamily.csv for details",
										"errorCode": "11-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-220-NotExistingSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-220-NotExistingSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-220-NotExistingSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamiliesAgingFamiliesApplication.csv not existing. See 11-220-NotExistingSubActionFamily.csv for details",
										"errorCode": "11-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-221-MissColumnAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-221_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-221-MissColumnAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_221",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-221_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-221_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-221_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-221_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_221",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-221-MissColumnAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-221_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamiliesAgingFamiliesApplication.csv. Open 11-221-MissColumnAgingFamily.csv for details",
										"errorCode": "11-221"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-221-MissColumnSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-221_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-221-MissColumnSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_221",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-221_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-221_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-221_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-221_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_221",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-221-MissColumnSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-221_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SubActionFamiliesAgingFamiliesApplication.csv. Open 11-221-MissColumnSubActionFamily.csv for details",
										"errorCode": "11-221"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-230-AlreadyExistSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-230_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-230-AlreadyExistSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_230",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-230_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-230_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-230_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-230_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_230",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-230-AlreadyExistSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-230_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "SubActionFamily have already used value in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SuBActionFamiliesAgingFamiliesReplacement.csv. See 11-230-AlreadyExistSubActionFamily.csv for details",
										"errorCode": "11-230"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_230')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-230-NotExistingAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-230_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-230-NotExistingAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_230",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-230_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-230_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-230_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-230_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_230",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-230-NotExistingAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-230_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference AgingFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SuBActionFamiliesAgingFamiliesReplacement.csv not existing. See 11-230-NotExistingAgingFamily.csv for details",
										"errorCode": "11-230"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_230')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-230-NotExistingSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-230_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-230-NotExistingSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_230",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-230_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-230_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-230_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-230_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_230",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-230-NotExistingSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-230_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SuBActionFamiliesAgingFamiliesReplacement.csv not existing. See 11-230-NotExistingSubActionFamily.csv for details",
										"errorCode": "11-230"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_230')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-231-MissColumnAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-231_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-231-MissColumnAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_231",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-231_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-231_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-231_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-231_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_231",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-231-MissColumnAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-231_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SuBActionFamiliesAgingFamiliesReplacement.csv. Open 11-231-MissColumnAgingFamily.csv for details",
										"errorCode": "11-231"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_231')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-231-MissColumnSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-231_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-231-MissColumnSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_231",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-231_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-231_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-231_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-231_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_231",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-231-MissColumnSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-231_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SuBActionFamiliesAgingFamiliesReplacement.csv. Open 11-231-MissColumnSubActionFamily.csv for details",
										"errorCode": "11-231"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_231')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-240-AlreadyExistEquipmentGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-240_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-240-AlreadyExistEquipmentGroup.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_240",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-240_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-240_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-240_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-240_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_240",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-240-AlreadyExistEquipmentGroup.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-240_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "EquipmentGroup have already used value in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroupsEquipmentComponents.csv. See 11-240-AlreadyExistEquipmentGroup.csv for details",
										"errorCode": "11-240"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_240')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-240-NotExistingEquipmentComponent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-240_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-240-NotExistingEquipmentComponent.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_240",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-240_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-240_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-240_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-240_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_240",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-240-NotExistingEquipmentComponent.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-240_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroupsEquipmentComponents.csv not existing. See 11-240-NotExistingEquipmentComponent.csv for details",
										"errorCode": "11-240"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_240')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-240-NotExistingEquipmentGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-240_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-240-NotExistingEquipmentGroup.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_240",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-240_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-240_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-240_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-240_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_240",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-240-NotExistingEquipmentGroup.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-240_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroupsEquipmentComponents.csv not existing. See 11-240-NotExistingEquipmentGroup.csv for details",
										"errorCode": "11-240"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_240')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-241-MissColumnEquipmentComponent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-241_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-241-MissColumnEquipmentComponent.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_241",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-241_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-241_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-241_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-241_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_241",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-241-MissColumnEquipmentComponent.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-241_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroupsEquipmentComponents.csv. Open 11-241-MissColumnEquipmentComponent.csv for details",
										"errorCode": "11-241"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_241')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-241-MissColumnEquipmentGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-241_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-241-MissColumnEquipmentGroup.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_241",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-241_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-241_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-241_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-241_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_241",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-241-MissColumnEquipmentGroup.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-241_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/EquipmentGroupsEquipmentComponents.csv. Open 11-241-MissColumnEquipmentGroup.csv for details",
										"errorCode": "11-241"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_241')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-250-AlreadyExistSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-250_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-250-AlreadyExistSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_250",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-250_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-250_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-250_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-250_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_250",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-250-AlreadyExistSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-250_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "SustainmentAction have already used value in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SustainmentActionsEquipmentGroups.csv. See 11-250-AlreadyExistSustainmentAction.csv for details",
										"errorCode": "11-250"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_250')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-250-NotExistingEquipmentGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-250_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-250-NotExistingEquipmentGroup.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_250",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-250_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-250_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-250_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-250_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_250",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-250-NotExistingEquipmentGroup.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-250_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SustainmentActionsEquipmentGroups.csv not existing. See 11-250-NotExistingEquipmentGroup.csv for details",
										"errorCode": "11-250"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_250')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-250-NotExistingSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-250_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-250-NotExistingSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_250",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-250_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-250_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-250_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-250_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_250",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-250-NotExistingSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-250_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SustainmentAction in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SustainmentActionsEquipmentGroups.csv not existing. See 11-250-NotExistingSustainmentAction.csv for details",
										"errorCode": "11-250"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_250')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-251-MissColumnEquipmentGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-251_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-251-MissColumnEquipmentGroup.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_251",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-251_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-251_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-251_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-251_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_251",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-251-MissColumnEquipmentGroup.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-251_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SustainmentActionsEquipmentGroups.csv. Open 11-251-MissColumnEquipmentGroup.csv for details",
										"errorCode": "11-251"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_251')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-251-MissColumnSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-251_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-251-MissColumnSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_251",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-251_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-251_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-251_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-251_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_251",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-251-MissColumnSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-251_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SustainmentAction in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Create/SustainmentActionsEquipmentGroups.csv. Open 11-251-MissColumnSustainmentAction.csv for details",
										"errorCode": "11-251"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_251')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-310-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-310_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-310-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_310",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-310_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-310_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-310_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-310_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_310",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-310-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-310_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SubActionFamilies.csv not existing. See 11-310-NotExistingName.csv for details",
										"errorCode": "11-310"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_310')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-311-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-311_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-311-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_311",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-311_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-311_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-311_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-311_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_311",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-311-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-311_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SubActionFamilies.csv. Open 11-311-MissColumnName.csv for details",
										"errorCode": "11-311"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-320-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-320_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-320-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_320",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-320_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-320_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-320_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-320_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_320",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-320-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-320_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/EquipmentGroups.csv not existing. See 11-320-NotExistingName.csv for details",
										"errorCode": "11-320"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_320')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-321-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-321_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-321-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_321",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-321_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-321_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-321_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-321_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_321",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-321-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-321_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/EquipmentGroups.csv. Open 11-321-MissColumnName.csv for details",
										"errorCode": "11-321"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_321')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-410-NotExistingActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-410_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-410-NotExistingActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_410",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-410_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-410_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-410_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-410_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_410",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-410-NotExistingActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-410_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/ActionFamiliesSubActionFamilies.csv not existing. See 11-410-NotExistingActionFamily.csv for details",
										"errorCode": "11-410"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_410')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-411-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-411_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-411-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_411",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-411_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-411_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-411_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-411_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_411",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-411-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-411_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/ActionFamiliesSubActionFamilies.csv. Open 11-411-MissColumnActionFamily.csv for details",
										"errorCode": "11-411"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_411')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-411-MissColumnSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-411_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-411-MissColumnSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_411",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-411_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-411_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-411_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-411_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_411",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-411-MissColumnSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-411_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/ActionFamiliesSubActionFamilies.csv. Open 11-411-MissColumnSubActionFamily.csv for details",
										"errorCode": "11-411"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_411')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-420-NotExistingSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-420_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-420-NotExistingSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_420",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-420_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-420_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-420_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-420_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_420",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-420-NotExistingSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-420_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SubActionFamiliesAgingFamiliesApplication.csv not existing. See 11-420-NotExistingSubActionFamily.csv for details",
										"errorCode": "11-420"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_420')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-421-MissColumnAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-421_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-421-MissColumnAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_421",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-421_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-421_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-421_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-421_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_421",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-421-MissColumnAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-421_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SubActionFamiliesAgingFamiliesApplication.csv. Open 11-421-MissColumnAgingFamily.csv for details",
										"errorCode": "11-421"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_421')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-421-MissColumnSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-421_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-421-MissColumnSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_421",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-421_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-421_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-421_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-421_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_421",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-421-MissColumnSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-421_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SubActionFamiliesAgingFamiliesApplication.csv. Open 11-421-MissColumnSubActionFamily.csv for details",
										"errorCode": "11-421"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_421')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-430-NotExistingSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-430_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-430-NotExistingSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_430",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-430_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-430_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-430_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-430_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_430",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-430-NotExistingSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-430_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SuBActionFamiliesAgingFamiliesReplacement.csv not existing. See 11-430-NotExistingSubActionFamily.csv for details",
										"errorCode": "11-430"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_430')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-431-MissColumnAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-431_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-431-MissColumnAgingFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_431",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-431_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-431_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-431_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-431_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_431",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-431-MissColumnAgingFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-431_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns AgingFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SuBActionFamiliesAgingFamiliesReplacement.csv. Open 11-431-MissColumnAgingFamily.csv for details",
										"errorCode": "11-431"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_431')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-431-MissColumnSubActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-431_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-431-MissColumnSubActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_431",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-431_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-431_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-431_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-431_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_431",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-431-MissColumnSubActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-431_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SubActionFamily in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SuBActionFamiliesAgingFamiliesReplacement.csv. Open 11-431-MissColumnSubActionFamily.csv for details",
										"errorCode": "11-431"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_431')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-440-NotExistingEquipmentGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-440_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-440-NotExistingEquipmentGroup.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_440",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-440_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-440_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-440_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-440_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_440",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-440-NotExistingEquipmentGroup.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-440_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/EquipmentGroupsEquipmentComponents.csv not existing. See 11-440-NotExistingEquipmentGroup.csv for details",
										"errorCode": "11-440"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_440')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-441-MissColumnEquipmentComponent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-441_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-441-MissColumnEquipmentComponent.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_441",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-441_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-441_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-441_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-441_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_441",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-441-MissColumnEquipmentComponent.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-441_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentComponent in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/EquipmentGroupsEquipmentComponents.csv. Open 11-441-MissColumnEquipmentComponent.csv for details",
										"errorCode": "11-441"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_441')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-441-MissColumnEquipmentGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-441_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-441-MissColumnEquipmentGroup.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_441",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-441_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-441_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-441_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-441_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_441",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-441-MissColumnEquipmentGroup.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-441_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/EquipmentGroupsEquipmentComponents.csv. Open 11-441-MissColumnEquipmentGroup.csv for details",
										"errorCode": "11-441"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_441')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-450-NotExistingSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-450_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-450-NotExistingSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_450",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-450_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-450_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-450_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-450_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_450",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-450-NotExistingSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-450_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SustainmentAction in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SustainmentActionsEquipmentGroups.csv not existing. See 11-450-NotExistingSustainmentAction.csv for details",
										"errorCode": "11-450"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_450')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-451-MissColumnEquipmentGroup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-451_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-451-MissColumnEquipmentGroup.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_451",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-451_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-451_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-451_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-451_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_451",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-451-MissColumnEquipmentGroup.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-451_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SustainmentActionsEquipmentGroups.csv. Open 11-451-MissColumnEquipmentGroup.csv for details",
										"errorCode": "11-451"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_451')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-451-MissColumnSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-451_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-451-MissColumnSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_451",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-451_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-451_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-451_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-451_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_451",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-451-MissColumnSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-451_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SustainmentAction in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Delete/SustainmentActionsEquipmentGroups.csv. Open 11-451-MissColumnSustainmentAction.csv for details",
										"errorCode": "11-451"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_451')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-510-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-510-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-510-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/SubActionFamilies.csv not existing. See 11-510-NotExistingName.csv for details",
										"errorCode": "11-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-511-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-511-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-511-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/SubActionFamilies.csv. Open 11-511-MissColumnName.csv for details",
										"errorCode": "11-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-512-ImpactOnEquipmentWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-512-ImpactOnEquipmentWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-512-ImpactOnEquipmentWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for ImpactOnEquipment in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/SubActionFamilies.csv. See 11-512-ImpactOnEquipmentWrongType.csv for details",
										"errorCode": "11-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-513-ImpactModeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-513-ImpactModeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-513-ImpactModeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for ImpactMode in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/SubActionFamilies.csv. See 11-513-ImpactModeInvalidRange.csv for details",
										"errorCode": "11-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-513-ImpactOnEquipmentInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-513-ImpactOnEquipmentInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-513-ImpactOnEquipmentInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for ImpactOnEquipment in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/SubActionFamilies.csv. See 11-513-ImpactOnEquipmentInvalidRange.csv for details",
										"errorCode": "11-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-513-TypeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-513-TypeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-513-TypeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for Type in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/SubActionFamilies.csv. See 11-513-TypeInvalidRange.csv for details",
										"errorCode": "11-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-520-NotExistingEquipmentGroupBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-520_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-520-NotExistingEquipmentGroupBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_520",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-520_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-520_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-520_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-520_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_520",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-520-NotExistingEquipmentGroupBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-520_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv not existing. See 11-520-NotExistingEquipmentGroupBudgetCategories.csv for details",
										"errorCode": "11-520"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_520')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-520-NotExistingEquipmentGroupHRCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-520_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-520-NotExistingEquipmentGroupHRCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_520",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-520_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-520_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-520_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-520_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_520",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-520-NotExistingEquipmentGroupHRCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-520_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv not existing. See 11-520-NotExistingEquipmentGroupHRCategories.csv for details",
										"errorCode": "11-520"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_520')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-520-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-520_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-520-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_520",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-520_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-520_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-520_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-520_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_520",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-520-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-520_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv not existing. See 11-520-NotExistingName.csv for details",
										"errorCode": "11-520"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_520')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-521-MissColumnEquipmentGroupBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-521-MissColumnEquipmentGroupBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-521-MissColumnEquipmentGroupBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv. Open 11-521-MissColumnEquipmentGroupBudgetCategories.csv for details",
										"errorCode": "11-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-521-MissColumnEquipmentGroupHRCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-521-MissColumnEquipmentGroupHRCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-521-MissColumnEquipmentGroupHRCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns EquipmentGroup in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv. Open 11-521-MissColumnEquipmentGroupHRCategories.csv for details",
										"errorCode": "11-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-521-MissColumnIndexBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-521-MissColumnIndexBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-521-MissColumnIndexBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv. Open 11-521-MissColumnIndexBudgetCategories.csv for details",
										"errorCode": "11-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-521-MissColumnIndexHRCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-521-MissColumnIndexHRCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-521-MissColumnIndexHRCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv. Open 11-521-MissColumnIndexHRCategories.csv for details",
										"errorCode": "11-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-521-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-521-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-521-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv. Open 11-521-MissColumnName.csv for details",
										"errorCode": "11-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-521-MissColumnValueBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-521-MissColumnValueBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-521-MissColumnValueBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv. Open 11-521-MissColumnValueBudgetCategories.csv for details",
										"errorCode": "11-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-521-MissColumnValueHRCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-521-MissColumnValueHRCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-521-MissColumnValueHRCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv. Open 11-521-MissColumnValueHRCategories.csv for details",
										"errorCode": "11-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-522-QuantityWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "11-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "11-522-QuantityWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "11_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "11-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "11-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('11-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "11-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "11_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "11-522-QuantityWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "11-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Quantity in asset-integration-accelerator-input/AssetPortfolioActivitiesManagement/Update/EquipmentGroups.csv. See 11-522-QuantityWrongType.csv for details",
										"errorCode": "11-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/11_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-110-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-110-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-110-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionTasks.csv. See 12-110-AlreadyExistName.csv for details",
										"errorCode": "12-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-110-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-110-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-110-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionTasks.csv. See 12-110-NotUniqueName.csv for details",
										"errorCode": "12-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-111-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-111-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-111-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionTasks.csv. Open 12-111-MissColumnName.csv for details",
										"errorCode": "12-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-112-ActionDurationPercentageWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-112-ActionDurationPercentageWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-112-ActionDurationPercentageWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for ActionDurationPercentage in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionTasks.csv. See 12-112-ActionDurationPercentageWrongType.csv for details",
										"errorCode": "12-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-112-WorkforceFTEWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-112-WorkforceFTEWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-112-WorkforceFTEWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for WorkforceFTE in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionTasks.csv. See 12-112-WorkforceFTEWrongType.csv for details",
										"errorCode": "12-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-113-ActionDurationPercentageInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-113-ActionDurationPercentageInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-113-ActionDurationPercentageInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for ActionDurationPercentage in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionTasks.csv. See 12-113-ActionDurationPercentageInvalidRange.csv for details",
										"errorCode": "12-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-113-WorkforceFTEInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-113-WorkforceFTEInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-113-WorkforceFTEInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for WorkforceFTE in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionTasks.csv. See 12-113-WorkforceFTEInvalidRange.csv for details",
										"errorCode": "12-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-210-AlreadyExistActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-210-AlreadyExistActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-210-AlreadyExistActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "ActionFamily have already used value in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionFamiliesActionTasks.csv. See 12-210-AlreadyExistActionFamily.csv for details",
										"errorCode": "12-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-210-NotExistingActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-210-NotExistingActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-210-NotExistingActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionFamiliesActionTasks.csv not existing. See 12-210-NotExistingActionFamily.csv for details",
										"errorCode": "12-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-210-NotExistingActionTask')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-210-NotExistingActionTask.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-210-NotExistingActionTask.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionTask in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionFamiliesActionTasks.csv not existing. See 12-210-NotExistingActionTask.csv for details",
										"errorCode": "12-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-211-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-211_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-211-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_211",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-211_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-211_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-211_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-211_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_211",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-211-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-211_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionFamiliesActionTasks.csv. Open 12-211-MissColumnActionFamily.csv for details",
										"errorCode": "12-211"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-211-MissColumnActionTask')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-211_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-211-MissColumnActionTask.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_211",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-211_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-211_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-211_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-211_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_211",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-211-MissColumnActionTask.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-211_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionTask in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Create/ActionFamiliesActionTasks.csv. Open 12-211-MissColumnActionTask.csv for details",
										"errorCode": "12-211"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-310-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-310_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-310-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_310",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-310_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-310_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-310_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-310_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_310",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-310-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-310_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Delete/ActionTasks.csv not existing. See 12-310-NotExistingName.csv for details",
										"errorCode": "12-310"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_310')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-311-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-311_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-311-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_311",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-311_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-311_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-311_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-311_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_311",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-311-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-311_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Delete/ActionTasks.csv. Open 12-311-MissColumnName.csv for details",
										"errorCode": "12-311"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-410-NotExistingActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-410_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-410-NotExistingActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_410",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-410_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-410_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-410_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-410_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_410",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-410-NotExistingActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-410_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Delete/ActionFamiliesActionTasks.csv not existing. See 12-410-NotExistingActionFamily.csv for details",
										"errorCode": "12-410"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_410')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-411-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-411_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-411-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_411",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-411_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-411_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-411_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-411_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_411",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-411-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-411_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Delete/ActionFamiliesActionTasks.csv. Open 12-411-MissColumnActionFamily.csv for details",
										"errorCode": "12-411"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_411')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-411-MissColumnActionTask')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-411_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-411-MissColumnActionTask.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_411",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-411_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-411_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-411_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-411_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_411",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-411-MissColumnActionTask.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-411_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionTask in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Delete/ActionFamiliesActionTasks.csv. Open 12-411-MissColumnActionTask.csv for details",
										"errorCode": "12-411"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_411')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-510-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-510-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-510-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Update/ActionTasks.csv not existing. See 12-510-NotExistingName.csv for details",
										"errorCode": "12-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-511-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-511-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-511-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagementHumanResources/Update/ActionTasks.csv. Open 12-511-MissColumnName.csv for details",
										"errorCode": "12-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-512-ActionDurationPercentageWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-512-ActionDurationPercentageWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-512-ActionDurationPercentageWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for ActionDurationPercentage in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Update/ActionTasks.csv. See 12-512-ActionDurationPercentageWrongType.csv for details",
										"errorCode": "12-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-512-WorkforceFTEWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-512-WorkforceFTEWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-512-WorkforceFTEWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for WorkforceFTE in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Update/ActionTasks.csv. See 12-512-WorkforceFTEWrongType.csv for details",
										"errorCode": "12-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-513-ActionDurationPercentageInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-513-ActionDurationPercentageInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-513-ActionDurationPercentageInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for ActionDurationPercentage in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Update/ActionTasks.csv. See 12-513-ActionDurationPercentageInvalidRange.csv for details",
										"errorCode": "12-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-513-WorkforceFTEInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "12-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "12-513-WorkforceFTEInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "12_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "12-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "12-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('12-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "12-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "12_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "12-513-WorkforceFTEInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "12-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for WorkforceFTE in asset-integration-accelerator-input/ActivitiesManagementHumanResources/Update/ActionTasks.csv. See 12-513-WorkforceFTEInvalidRange.csv for details",
										"errorCode": "12-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/12_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-110-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-110-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-110-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. See 2-110-AlreadyExistName.csv for details",
										"errorCode": "2-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-110-NotExistingActionFamilyBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-110-NotExistingActionFamilyBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-110-NotExistingActionFamilyBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv not existing. See 2-110-NotExistingActionFamilyBudgetCategories.csv for details",
										"errorCode": "2-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-110-NotExistingActionFamilyCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-110-NotExistingActionFamilyCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-110-NotExistingActionFamilyCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv not existing. See 2-110-NotExistingActionFamilyCostsByRatingLevel.csv for details",
										"errorCode": "2-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-110-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-110-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-110-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. See 2-110-NotUniqueName.csv for details",
										"errorCode": "2-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-111-MissColumnActionFamilyBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-111-MissColumnActionFamilyBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-111-MissColumnActionFamilyBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. Open 2-111-MissColumnActionFamilyBudgetCategories.csv for details",
										"errorCode": "2-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-111-MissColumnActionFamilyCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-111-MissColumnActionFamilyCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-111-MissColumnActionFamilyCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. Open 2-111-MissColumnActionFamilyCostsByRatingLevel.csv for details",
										"errorCode": "2-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-111-MissColumnIndexBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-111-MissColumnIndexBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-111-MissColumnIndexBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. Open 2-111-MissColumnIndexBudgetCategories.csv for details",
										"errorCode": "2-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-111-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-111-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-111-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. Open 2-111-MissColumnName.csv for details",
										"errorCode": "2-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-111-MissColumnRatingLevelCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-111-MissColumnRatingLevelCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-111-MissColumnRatingLevelCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns RatingLevel in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. Open 2-111-MissColumnRatingLevelCostsByRatingLevel.csv for details",
										"errorCode": "2-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-111-MissColumnUnitPropertyCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-111-MissColumnUnitPropertyCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-111-MissColumnUnitPropertyCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns UnitProperty in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. Open 2-111-MissColumnUnitPropertyCostsByRatingLevel.csv for details",
										"errorCode": "2-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-111-MissColumnValueBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-111-MissColumnValueBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-111-MissColumnValueBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. Open 2-111-MissColumnValueBudgetCategories.csv for details",
										"errorCode": "2-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-111-MissColumnValueCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-111-MissColumnValueCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-111-MissColumnValueCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. Open 2-111-MissColumnValueCostsByRatingLevel.csv for details",
										"errorCode": "2-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-112-CostsAreCapitalChargesWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-112-CostsAreCapitalChargesWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-112-CostsAreCapitalChargesWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CostsAreCapitalCharges in asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. See 2-112-CostsAreCapitalChargesWrongType.csv for details",
										"errorCode": "2-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-112-DurationWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-112-DurationWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-112-DurationWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Duration in asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. See 2-112-DurationWrongType.csv for details",
										"errorCode": "2-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-112-IsLocalActionWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-112-IsLocalActionWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-112-IsLocalActionWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsLocalAction in asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. See 2-112-IsLocalActionWrongType.csv for details",
										"errorCode": "2-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-112-NeedsOutageWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-112-NeedsOutageWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-112-NeedsOutageWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for NeedsOutage in asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. See 2-112-NeedsOutageWrongType.csv for details",
										"errorCode": "2-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-112-SupplierCostWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-112-SupplierCostWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-112-SupplierCostWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for SupplierCost in asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. See 2-112-SupplierCostWrongType.csv for details",
										"errorCode": "2-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-113-UnitPropertyCostsByRatingLevelInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-113-UnitPropertyCostsByRatingLevelInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-113-UnitPropertyCostsByRatingLevelInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for UnitPropertyCostsByRatingLevel in asset-integration-accelerator-input/ActivitiesManagement/Create/ActionFamilies.csv. See 2-113-UnitPropertyCostsByRatingLevelInvalidRange.csv for details",
										"errorCode": "2-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-120-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-120-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-120-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. See 2-120-AlreadyExistName.csv for details",
										"errorCode": "2-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-120-NotExistingCriterionTargetedAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-120-NotExistingCriterionTargetedAgingFamilies.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-120-NotExistingCriterionTargetedAgingFamilies.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv not existing. See 2-120-NotExistingCriterionTargetedAgingFamilies.csv for details",
										"errorCode": "2-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-120-NotExistingCriterionValueAsString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-120-NotExistingCriterionValueAsString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-120-NotExistingCriterionValueAsString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv not existing. See 2-120-NotExistingCriterionValueAsString.csv for details",
										"errorCode": "2-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-120-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-120_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-120-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_120",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-120_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-120_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-120_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-120_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_120",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-120-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-120_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. See 2-120-NotUniqueName.csv for details",
										"errorCode": "2-120"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_120')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-121-MissColumnCriterionTargetedAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-121-MissColumnCriterionTargetedAgingFamilies.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-121-MissColumnCriterionTargetedAgingFamilies.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. Open 2-121-MissColumnCriterionTargetedAgingFamilies.csv for details",
										"errorCode": "2-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-121-MissColumnCriterionValueAsString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-121-MissColumnCriterionValueAsString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-121-MissColumnCriterionValueAsString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. Open 2-121-MissColumnCriterionValueAsString.csv for details",
										"errorCode": "2-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-121-MissColumnIndexTargetedAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-121-MissColumnIndexTargetedAgingFamilies.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-121-MissColumnIndexTargetedAgingFamilies.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. Open 2-121-MissColumnIndexTargetedAgingFamilies.csv for details",
										"errorCode": "2-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-121-MissColumnIndexValueAsString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-121-MissColumnIndexValueAsString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-121-MissColumnIndexValueAsString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. Open 2-121-MissColumnIndexValueAsString.csv for details",
										"errorCode": "2-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-121-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-121-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-121-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. Open 2-121-MissColumnName.csv for details",
										"errorCode": "2-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-121-MissColumnValueTargetedAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-121-MissColumnValueTargetedAgingFamilies.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-121-MissColumnValueTargetedAgingFamilies.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. Open 2-121-MissColumnValueTargetedAgingFamilies.csv for details",
										"errorCode": "2-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-121-MissColumnValueValueAsString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-121_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-121-MissColumnValueValueAsString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-121_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-121_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-121_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-121_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_121",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-121-MissColumnValueValueAsString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-121_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. Open 2-121-MissColumnValueValueAsString.csv for details",
										"errorCode": "2-121"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_121')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-122-ThresholdWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-122-ThresholdWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-122-ThresholdWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Threshold in asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. See 2-122-ThresholdWrongType.csv for details",
										"errorCode": "2-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-122-ValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-122_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-122-ValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_122",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-122_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-122_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-122_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-122_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_122",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-122-ValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-122_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Value in asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. See 2-122-ValueWrongType.csv for details",
										"errorCode": "2-122"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-123-OperatorInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-123_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-123-OperatorInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_123",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-123_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-123_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-123_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-123_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_123",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-123-OperatorInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-123_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for Operator in asset-integration-accelerator-input/ActivitiesManagement/Create/Criteria.csv. See 2-123-OperatorInvalidRange.csv for details",
										"errorCode": "2-123"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_123')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-130-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-130_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-130-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_130",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-130_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-130_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-130_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-130_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_130",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-130-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-130_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActions.csv. See 2-130-AlreadyExistName.csv for details",
										"errorCode": "2-130"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_130')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-130-NotExistingSustainmentActionBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-130_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-130-NotExistingSustainmentActionBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_130",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-130_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-130_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-130_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-130_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_130",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-130-NotExistingSustainmentActionBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-130_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SustainmentAction in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActions.csv not existing. See 2-130-NotExistingSustainmentActionBudgetCategories.csv for details",
										"errorCode": "2-130"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_130')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-130-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-130_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-130-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_130",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-130_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-130_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-130_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-130_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_130",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-130-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-130_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActions.csv. See 2-130-NotUniqueName.csv for details",
										"errorCode": "2-130"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_130')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-131-MissColumnIndexBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-131_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-131-MissColumnIndexBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_131",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-131_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-131_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-131_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-131_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_131",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-131-MissColumnIndexBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-131_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActions.csv. Open 2-131-MissColumnIndexBudgetCategories.csv for details",
										"errorCode": "2-131"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_131')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-131-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-131_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-131-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_131",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-131_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-131_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-131_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-131_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_131",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-131-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-131_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActions.csv. Open 2-131-MissColumnName.csv for details",
										"errorCode": "2-131"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_131')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-131-MissColumnSustainmentActionBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-131_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-131-MissColumnSustainmentActionBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_131",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-131_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-131_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-131_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-131_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_131",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-131-MissColumnSustainmentActionBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-131_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SustainmentAction in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActions.csv. Open 2-131-MissColumnSustainmentActionBudgetCategories.csv for details",
										"errorCode": "2-131"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_131')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-131-MissColumnValueBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-131_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-131-MissColumnValueBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_131",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-131_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-131_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-131_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-131_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_131",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-131-MissColumnValueBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-131_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActions.csv. Open 2-131-MissColumnValueBudgetCategories.csv for details",
										"errorCode": "2-131"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_131')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-140-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-140_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-140-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_140",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-140_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-140_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-140_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-140_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_140",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-140-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-140_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-140-AlreadyExistName.csv for details",
										"errorCode": "2-140"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_140')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-140-NotExistingTechnicalPolicyBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-140_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-140-NotExistingTechnicalPolicyBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_140",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-140_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-140_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-140_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-140_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_140",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-140-NotExistingTechnicalPolicyBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-140_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv not existing. See 2-140-NotExistingTechnicalPolicyBudgetCategories.csv for details",
										"errorCode": "2-140"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_140')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-140-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-140_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-140-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_140",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-140_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-140_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-140_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-140_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_140",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-140-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-140_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-140-NotUniqueName.csv for details",
										"errorCode": "2-140"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_140')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-141-MissColumnIndexBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-141_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-141-MissColumnIndexBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_141",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-141_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-141_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-141_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-141_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_141",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-141-MissColumnIndexBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-141_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. Open 2-141-MissColumnIndexBudgetCategories.csv for details",
										"errorCode": "2-141"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_141')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-141-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-141_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-141-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_141",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-141_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-141_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-141_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-141_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_141",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-141-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-141_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. Open 2-141-MissColumnName.csv for details",
										"errorCode": "2-141"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_141')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-141-MissColumnTechnicalPolicyBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-141_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-141-MissColumnTechnicalPolicyBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_141",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-141_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-141_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-141_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-141_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_141",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-141-MissColumnTechnicalPolicyBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-141_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. Open 2-141-MissColumnTechnicalPolicyBudgetCategories.csv for details",
										"errorCode": "2-141"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_141')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-141-MissColumnValueBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-141_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-141-MissColumnValueBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_141",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-141_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-141_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-141_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-141_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_141",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-141-MissColumnValueBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-141_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. Open 2-141-MissColumnValueBudgetCategories.csv for details",
										"errorCode": "2-141"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_141')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-142-EnablePendingActionRemovalWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-142_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-142-EnablePendingActionRemovalWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-142_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-142_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-142_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-142_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_142",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-142-EnablePendingActionRemovalWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-142_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for EnablePendingActionRemoval in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-142-EnablePendingActionRemovalWrongType.csv for details",
										"errorCode": "2-142"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_142')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-142-IsInactiveWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-142_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-142-IsInactiveWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-142_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-142_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-142_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-142_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_142",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-142-IsInactiveWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-142_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsInactive in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-142-IsInactiveWrongType.csv for details",
										"errorCode": "2-142"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_142')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-142-NbRepAction1WrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-142_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-142-NbRepAction1WrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-142_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-142_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-142_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-142_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_142",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-142-NbRepAction1WrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-142_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for NbRepAction1 in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-142-NbRepAction1WrongType.csv for details",
										"errorCode": "2-142"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_142')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-142-YearEndWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-142_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-142-YearEndWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-142_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-142_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-142_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-142_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_142",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-142-YearEndWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-142_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for YearEnd in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-142-YearEndWrongType.csv for details",
										"errorCode": "2-142"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_142')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-142-YearStartWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-142_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-142-YearStartWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-142_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-142_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-142_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-142_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_142",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-142-YearStartWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-142_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for YearStart in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-142-YearStartWrongType.csv for details",
										"errorCode": "2-142"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_142')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-143-NbRepAction1InvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-143_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-143-NbRepAction1InvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_143",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-143_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-143_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-143_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-143_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_143",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-143-NbRepAction1InvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-143_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for NbRepAction1 in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-143-NbRepAction1InvalidRange.csv for details",
										"errorCode": "2-143"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_143')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-143-TypeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-143_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-143-TypeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_143",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-143_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-143_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-143_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-143_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_143",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-143-TypeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-143_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for Type in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPolicies.csv. See 2-143-TypeInvalidRange.csv for details",
										"errorCode": "2-143"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_143')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-210-AlreadyExistSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-210-AlreadyExistSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-210-AlreadyExistSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "SustainmentAction have already used value in asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActionsActionFamilies.csv. See 2-210-AlreadyExistSustainmentAction.csv for details",
										"errorCode": "2-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-210-NotExistingActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-210-NotExistingActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-210-NotExistingActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActionsActionFamilies.csv not existing. See 2-210-NotExistingActionFamily.csv for details",
										"errorCode": "2-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-210-NotExistingSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-210_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-210-NotExistingSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_210",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-210_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-210_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-210_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-210_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_210",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-210-NotExistingSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-210_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SustainmentAction in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActionsActionFamilies.csv not existing. See 2-210-NotExistingSustainmentAction.csv for details",
										"errorCode": "2-210"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_210')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-211-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-211_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-211-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_211",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-211_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-211_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-211_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-211_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_211",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-211-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-211_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActionsActionFamilies.csv. Open 2-211-MissColumnActionFamily.csv for details",
										"errorCode": "2-211"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-211-MissColumnSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-211_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-211-MissColumnSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_211",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-211_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-211_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-211_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-211_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_211",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-211-MissColumnSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-211_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SustainmentAction in file asset-integration-accelerator-input/ActivitiesManagement/Create/SustainmentActionsActionFamilies.csv. Open 2-211-MissColumnSustainmentAction.csv for details",
										"errorCode": "2-211"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-220-AlreadyExistTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-220-AlreadyExistTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-220-AlreadyExistTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "TechnicalPolicy have already used value in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesMainActionFamilies.csv. See 2-220-AlreadyExistTechnicalPolicy.csv for details",
										"errorCode": "2-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-220-NotExistingActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-220-NotExistingActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-220-NotExistingActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesMainActionFamilies.csv not existing. See 2-220-NotExistingActionFamily.csv for details",
										"errorCode": "2-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-220-NotExistingTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-220_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-220-NotExistingTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_220",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-220_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-220_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-220_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-220_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_220",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-220-NotExistingTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-220_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesMainActionFamilies.csv not existing. See 2-220-NotExistingTechnicalPolicy.csv for details",
										"errorCode": "2-220"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_220')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-221-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-221_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-221-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_221",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-221_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-221_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-221_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-221_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_221",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-221-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-221_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesMainActionFamilies.csv. Open 2-221-MissColumnActionFamily.csv for details",
										"errorCode": "2-221"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-221-MissColumnTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-221_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-221-MissColumnTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_221",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-221_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-221_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-221_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-221_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_221",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-221-MissColumnTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-221_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesMainActionFamilies.csv. Open 2-221-MissColumnTechnicalPolicy.csv for details",
										"errorCode": "2-221"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-230-AlreadyExistTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-230_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-230-AlreadyExistTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_230",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-230_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-230_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-230_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-230_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_230",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-230-AlreadyExistTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-230_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "TechnicalPolicy have already used value in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesSecondaryActionFamilies.csv. See 2-230-AlreadyExistTechnicalPolicy.csv for details",
										"errorCode": "2-230"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_230')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-230-NotExistingActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-230_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-230-NotExistingActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_230",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-230_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-230_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-230_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-230_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_230",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-230-NotExistingActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-230_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesSecondaryActionFamilies.csv not existing. See 2-230-NotExistingActionFamily.csv for details",
										"errorCode": "2-230"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_230')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-230-NotExistingTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-230_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-230-NotExistingTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_230",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-230_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-230_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-230_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-230_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_230",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-230-NotExistingTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-230_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesSecondaryActionFamilies.csv not existing. See 2-230-NotExistingTechnicalPolicy.csv for details",
										"errorCode": "2-230"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_230')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-231-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-231_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-231-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_231",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-231_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-231_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-231_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-231_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_231",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-231-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-231_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesSecondaryActionFamilies.csv. Open 2-231-MissColumnActionFamily.csv for details",
										"errorCode": "2-231"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_231')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-231-MissColumnTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-231_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-231-MissColumnTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_231",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-231_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-231_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-231_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-231_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_231",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-231-MissColumnTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-231_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesSecondaryActionFamilies.csv. Open 2-231-MissColumnTechnicalPolicy.csv for details",
										"errorCode": "2-231"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_231')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-240-AlreadyExistTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-240_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-240-AlreadyExistTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_240",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-240_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-240_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-240_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-240_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_240",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-240-AlreadyExistTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-240_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "TechnicalPolicy have already used value in asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesCriteria.csv. See 2-240-AlreadyExistTechnicalPolicy.csv for details",
										"errorCode": "2-240"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_240')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-240-NotExistingCriterion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-240_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-240-NotExistingCriterion.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_240",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-240_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-240_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-240_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-240_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_240",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-240-NotExistingCriterion.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-240_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesCriteria.csv not existing. See 2-240-NotExistingCriterion.csv for details",
										"errorCode": "2-240"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_240')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-240-NotExistingTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-240_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-240-NotExistingTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_240",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-240_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-240_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-240_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-240_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_240",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-240-NotExistingTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-240_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesCriteria.csv not existing. See 2-240-NotExistingTechnicalPolicy.csv for details",
										"errorCode": "2-240"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_240')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-241-MissColumnCriterion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-241_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-241-MissColumnCriterion.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_241",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-241_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-241_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-241_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-241_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_241",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-241-MissColumnCriterion.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-241_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesCriteria.csv. Open 2-241-MissColumnCriterion.csv for details",
										"errorCode": "2-241"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_241')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-241-MissColumnTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-241_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-241-MissColumnTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_241",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-241_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-241_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-241_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-241_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_241",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-241-MissColumnTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-241_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Create/TechnicalPoliciesCriteria.csv. Open 2-241-MissColumnTechnicalPolicy.csv for details",
										"errorCode": "2-241"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_241')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-310-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-310_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-310-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_310",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-310_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-310_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-310_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-310_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_310",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-310-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-310_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagement/Delete/ActionFamilies.csv not existing. See 2-310-NotExistingName.csv for details",
										"errorCode": "2-310"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_310')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-311-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-311_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-311-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_311",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-311_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-311_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-311_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-311_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_311",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-311-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-311_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Delete/ActionFamilies.csv. Open 2-311-MissColumnName.csv for details",
										"errorCode": "2-311"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-320-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-320_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-320-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_320",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-320_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-320_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-320_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-320_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_320",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-320-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-320_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagement/Delete/Criteria.csv not existing. See 2-320-NotExistingName.csv for details",
										"errorCode": "2-320"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_320')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-321-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-321_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-321-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_321",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-321_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-321_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-321_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-321_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_321",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-321-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-321_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Delete/Criteria.csv. Open 2-321-MissColumnName.csv for details",
										"errorCode": "2-321"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_321')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-330-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-330_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-330-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_330",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-330_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-330_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-330_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-330_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_330",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-330-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-330_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagement/Delete/SustainmentActions.csv not existing. See 2-330-NotExistingName.csv for details",
										"errorCode": "2-330"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_330')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-331-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-331_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-331-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_331",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-331_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-331_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-331_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-331_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_331",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-331-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-331_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Delete/SustainmentActions.csv. Open 2-331-MissColumnName.csv for details",
										"errorCode": "2-331"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_331')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-340-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-340_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-340-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_340",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-340_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-340_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-340_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-340_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_340",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-340-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-340_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPolicies.csv not existing. See 2-340-NotExistingName.csv for details",
										"errorCode": "2-340"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_340')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-341-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-341_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-341-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_341",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-341_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-341_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-341_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-341_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_341",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-341-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-341_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPolicies.csv. Open 2-341-MissColumnName.csv for details",
										"errorCode": "2-341"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_341')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-410-NotExistingSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-410_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-410-NotExistingSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_410",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-410_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-410_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-410_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-410_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_410",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-410-NotExistingSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-410_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SustainmentAction in file asset-integration-accelerator-input/ActivitiesManagement/Delete/SustainmentActionsActionFamilies.csv not existing. See 2-410-NotExistingSustainmentAction.csv for details",
										"errorCode": "2-410"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_410')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-411-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-411_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-411-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_411",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-411_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-411_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-411_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-411_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_411",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-411-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-411_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Delete/SustainmentActionsActionFamilies.csv. Open 2-411-MissColumnActionFamily.csv for details",
										"errorCode": "2-411"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_411')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-411-MissColumnSustainmentAction')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-411_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-411-MissColumnSustainmentAction.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_411",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-411_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-411_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-411_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-411_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_411",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-411-MissColumnSustainmentAction.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-411_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SustainmentAction in file asset-integration-accelerator-input/ActivitiesManagement/Delete/SustainmentActionsActionFamilies.csv. Open 2-411-MissColumnSustainmentAction.csv for details",
										"errorCode": "2-411"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_411')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-420-NotExistingTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-420_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-420-NotExistingTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_420",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-420_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-420_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-420_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-420_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_420",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-420-NotExistingTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-420_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesMainActionFamilies.csv not existing. See 2-420-NotExistingTechnicalPolicy.csv for details",
										"errorCode": "2-420"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_420')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-421-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-421_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-421-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_421",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-421_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-421_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-421_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-421_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_421",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-421-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-421_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesMainActionFamilies.csv. Open 2-421-MissColumnActionFamily.csv for details",
										"errorCode": "2-421"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_421')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-421-MissColumnTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-421_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-421-MissColumnTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_421",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-421_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-421_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-421_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-421_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_421",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-421-MissColumnTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-421_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesMainActionFamilies.csv. Open 2-421-MissColumnTechnicalPolicy.csv for details",
										"errorCode": "2-421"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_421')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-430-NotExistingTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-430_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-430-NotExistingTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_430",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-430_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-430_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-430_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-430_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_430",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-430-NotExistingTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-430_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesSecondaryActionFamilies.csv not existing. See 2-430-NotExistingTechnicalPolicy.csv for details",
										"errorCode": "2-430"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_430')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-431-MissColumnActionFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-431_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-431-MissColumnActionFamily.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_431",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-431_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-431_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-431_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-431_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_431",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-431-MissColumnActionFamily.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-431_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesSecondaryActionFamilies.csv. Open 2-431-MissColumnActionFamily.csv for details",
										"errorCode": "2-431"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_431')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-431-MissColumnTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-431_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-431-MissColumnTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_431",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-431_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-431_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-431_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-431_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_431",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-431-MissColumnTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-431_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesSecondaryActionFamilies.csv. Open 2-431-MissColumnTechnicalPolicy.csv for details",
										"errorCode": "2-431"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_431')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-440-NotExistingTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-440_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-440-NotExistingTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_440",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-440_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-440_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-440_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-440_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_440",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-440-NotExistingTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-440_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesCriteria.csv not existing. See 2-440-NotExistingTechnicalPolicy.csv for details",
										"errorCode": "2-440"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_440')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-441-MissColumnCriterion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-441_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-441-MissColumnCriterion.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_441",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-441_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-441_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-441_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-441_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_441",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-441-MissColumnCriterion.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-441_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesCriteria.csv. Open 2-441-MissColumnCriterion.csv for details",
										"errorCode": "2-441"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_441')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-441-MissColumnTechnicalPolicy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-441_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-441-MissColumnTechnicalPolicy.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_441",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-441_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-441_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-441_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-441_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_441",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-441-MissColumnTechnicalPolicy.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-441_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Delete/TechnicalPoliciesCriteria.csv. Open 2-441-MissColumnTechnicalPolicy.csv for details",
										"errorCode": "2-441"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_441')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-510-NotExistingActionFamilyBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-510-NotExistingActionFamilyBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-510-NotExistingActionFamilyBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv not existing. See 2-510-NotExistingActionFamilyBudgetCategories.csv for details",
										"errorCode": "2-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-510-NotExistingActionFamilyCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-510-NotExistingActionFamilyCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-510-NotExistingActionFamilyCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv not existing. See 2-510-NotExistingActionFamilyCostsByRatingLevel.csv for details",
										"errorCode": "2-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-510-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-510-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-510-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv not existing. See 2-510-NotExistingName.csv for details",
										"errorCode": "2-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-511-MissColumnActionFamilyBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-511-MissColumnActionFamilyBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-511-MissColumnActionFamilyBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. Open 2-511-MissColumnActionFamilyBudgetCategories.csv for details",
										"errorCode": "2-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-511-MissColumnActionFamilyCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-511-MissColumnActionFamilyCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-511-MissColumnActionFamilyCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns ActionFamily in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. Open 2-511-MissColumnActionFamilyCostsByRatingLevel.csv for details",
										"errorCode": "2-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-511-MissColumnIndexBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-511-MissColumnIndexBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-511-MissColumnIndexBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. Open 2-511-MissColumnIndexBudgetCategories.csv for details",
										"errorCode": "2-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-511-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-511-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-511-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. Open 2-511-MissColumnName.csv for details",
										"errorCode": "2-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-511-MissColumnRatingLevelCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-511-MissColumnRatingLevelCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-511-MissColumnRatingLevelCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns RatingLevel in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. Open 2-511-MissColumnRatingLevelCostsByRatingLevel.csv for details",
										"errorCode": "2-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-511-MissColumnUnitPropertyCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-511-MissColumnUnitPropertyCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-511-MissColumnUnitPropertyCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns UnitProperty in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. Open 2-511-MissColumnUnitPropertyCostsByRatingLevel.csv for details",
										"errorCode": "2-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-511-MissColumnValueBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-511-MissColumnValueBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-511-MissColumnValueBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. Open 2-511-MissColumnValueBudgetCategories.csv for details",
										"errorCode": "2-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-511-MissColumnValueCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-511-MissColumnValueCostsByRatingLevel.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-511-MissColumnValueCostsByRatingLevel.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. Open 2-511-MissColumnValueCostsByRatingLevel.csv for details",
										"errorCode": "2-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-512-CostsAreCapitalChargesWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-512-CostsAreCapitalChargesWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-512-CostsAreCapitalChargesWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CostsAreCapitalCharges in asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. See 2-512-CostsAreCapitalChargesWrongType.csv for details",
										"errorCode": "2-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-512-DurationWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-512-DurationWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-512-DurationWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Duration in asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. See 2-512-DurationWrongType.csv for details",
										"errorCode": "2-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-512-IsLocalActionWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-512-IsLocalActionWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-512-IsLocalActionWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsLocalAction in asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. See 2-512-IsLocalActionWrongType.csv for details",
										"errorCode": "2-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-512-NeedsOutageWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-512-NeedsOutageWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-512-NeedsOutageWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for NeedsOutage in asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. See 2-512-NeedsOutageWrongType.csv for details",
										"errorCode": "2-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-512-SupplierCostWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-512-SupplierCostWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-512-SupplierCostWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for SupplierCost in asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. See 2-512-SupplierCostWrongType.csv for details",
										"errorCode": "2-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-513-UnitPropertyCostsByRatingLevelInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-513-UnitPropertyCostsByRatingLevelInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-513-UnitPropertyCostsByRatingLevelInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for UnitPropertyCostsByRatingLevel in asset-integration-accelerator-input/ActivitiesManagement/Update/ActionFamilies.csv. See 2-513-UnitPropertyCostsByRatingLevelInvalidRange.csv for details",
										"errorCode": "2-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-520-NotExistingCriterionValueAsString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-520_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-520-NotExistingCriterionValueAsString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_520",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-520_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-520_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-520_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-520_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_520",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-520-NotExistingCriterionValueAsString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-520_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv not existing. See 2-520-NotExistingCriterionValueAsString.csv for details",
										"errorCode": "2-520"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_520')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-520-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-520_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-520-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_520",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-520_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-520_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-520_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-520_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_520",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-520-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-520_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv not existing. See 2-520-NotExistingName.csv for details",
										"errorCode": "2-520"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_520')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-521-MissColumnCriterionValueAsString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-521-MissColumnCriterionValueAsString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-521-MissColumnCriterionValueAsString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Criterion in file asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv. Open 2-521-MissColumnCriterionValueAsString.csv for details",
										"errorCode": "2-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-521-MissColumnIndexValueAsString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-521-MissColumnIndexValueAsString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-521-MissColumnIndexValueAsString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv. Open 2-521-MissColumnIndexValueAsString.csv for details",
										"errorCode": "2-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-521-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-521-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-521-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv. Open 2-521-MissColumnName.csv for details",
										"errorCode": "2-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-521-MissColumnValueValueAsString')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-521_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-521-MissColumnValueValueAsString.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_521",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-521_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-521_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-521_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-521_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_521",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-521-MissColumnValueValueAsString.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-521_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv. Open 2-521-MissColumnValueValueAsString.csv for details",
										"errorCode": "2-521"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_521')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-522-ThresholdWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-522-ThresholdWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-522-ThresholdWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Threshold in asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv. See 2-522-ThresholdWrongType.csv for details",
										"errorCode": "2-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-522-ValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-522_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-522-ValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_522",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-522_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-522_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-522_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-522_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_522",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-522-ValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-522_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Value in asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv. See 2-522-ValueWrongType.csv for details",
										"errorCode": "2-522"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-523-OperatorInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-523_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-523-OperatorInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_523",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-523_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-523_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-523_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-523_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_523",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-523-OperatorInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-523_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for Operator in asset-integration-accelerator-input/ActivitiesManagement/Update/Criteria.csv. See 2-523-OperatorInvalidRange.csv for details",
										"errorCode": "2-523"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_523')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-530-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-530_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-530-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_530",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-530_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-530_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-530_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-530_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_530",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-530-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-530_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagement/Update/SustainmentActions.csv not existing. See 2-530-NotExistingName.csv for details",
										"errorCode": "2-530"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_530')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-530-NotExistingSustainmentActionBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-530_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-530-NotExistingSustainmentActionBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_530",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-530_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-530_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-530_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-530_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_530",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-530-NotExistingSustainmentActionBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-530_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference SustainmentAction in file asset-integration-accelerator-input/ActivitiesManagement/Update/SustainmentActions.csv not existing. See 2-530-NotExistingSustainmentActionBudgetCategories.csv for details",
										"errorCode": "2-530"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_530')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-531-MissColumnIndexBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-531_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-531-MissColumnIndexBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_531",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-531_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-531_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-531_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-531_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_531",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-531-MissColumnIndexBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-531_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Update/SustainmentActions.csv. Open 2-531-MissColumnIndexBudgetCategories.csv for details",
										"errorCode": "2-531"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_531')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-531-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-531_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-531-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_531",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-531_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-531_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-531_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-531_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_531",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-531-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-531_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Update/SustainmentActions.csv. Open 2-531-MissColumnName.csv for details",
										"errorCode": "2-531"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_531')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-531-MissColumnSustainmentActionBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-531_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-531-MissColumnSustainmentActionBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_531",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-531_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-531_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-531_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-531_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_531",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-531-MissColumnSustainmentActionBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-531_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns SustainmentAction in file asset-integration-accelerator-input/ActivitiesManagement/Update/SustainmentActions.csv. Open 2-531-MissColumnSustainmentActionBudgetCategories.csv for details",
										"errorCode": "2-531"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_531')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-531-MissColumnValueBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-531_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-531-MissColumnValueBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_531",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-531_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-531_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-531_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-531_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_531",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-531-MissColumnValueBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-531_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Update/SustainmentActions.csv. Open 2-531-MissColumnValueBudgetCategories.csv for details",
										"errorCode": "2-531"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_531')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-540-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-540_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-540-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_540",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-540_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-540_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-540_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-540_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_540",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-540-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-540_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv not existing. See 2-540-NotExistingName.csv for details",
										"errorCode": "2-540"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_540')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-540-NotExistingTechnicalPolicyBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-540_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-540-NotExistingTechnicalPolicyBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_540",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-540_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-540_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-540_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-540_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_540",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-540-NotExistingTechnicalPolicyBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-540_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv not existing. See 2-540-NotExistingTechnicalPolicyBudgetCategories.csv for details",
										"errorCode": "2-540"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_540')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-541-MissColumnIndexBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-541_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-541-MissColumnIndexBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_541",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-541_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-541_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-541_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-541_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_541",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-541-MissColumnIndexBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-541_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. Open 2-541-MissColumnIndexBudgetCategories.csv for details",
										"errorCode": "2-541"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_541')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-541-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-541_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-541-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_541",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-541_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-541_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-541_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-541_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_541",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-541-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-541_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. Open 2-541-MissColumnName.csv for details",
										"errorCode": "2-541"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_541')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-541-MissColumnTechnicalPolicyBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-541_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-541-MissColumnTechnicalPolicyBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_541",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-541_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-541_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-541_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-541_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_541",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-541-MissColumnTechnicalPolicyBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-541_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns TechnicalPolicy in file asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. Open 2-541-MissColumnTechnicalPolicyBudgetCategories.csv for details",
										"errorCode": "2-541"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_541')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-541-MissColumnValueBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-541_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-541-MissColumnValueBudgetCategories.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_541",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-541_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-541_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-541_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-541_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_541",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-541-MissColumnValueBudgetCategories.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-541_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. Open 2-541-MissColumnValueBudgetCategories.csv for details",
										"errorCode": "2-541"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_541')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-542-EnablePendingActionRemovalWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-542_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-542-EnablePendingActionRemovalWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-542_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-542_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-542_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-542_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_542",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-542-EnablePendingActionRemovalWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-542_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for EnablePendingActionRemoval in asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. See 2-542-EnablePendingActionRemovalWrongType.csv for details",
										"errorCode": "2-542"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_542')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-542-IsInactiveWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-542_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-542-IsInactiveWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-542_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-542_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-542_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-542_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_542",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-542-IsInactiveWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-542_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for IsInactive in asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. See 2-542-IsInactiveWrongType.csv for details",
										"errorCode": "2-542"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_542')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-542-NbRepAction1WrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-542_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-542-NbRepAction1WrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-542_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-542_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-542_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-542_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_542",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-542-NbRepAction1WrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-542_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for NbRepAction1 in asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. See 2-542-NbRepAction1WrongType.csv for details",
										"errorCode": "2-542"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_542')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-542-YearEndWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-542_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-542-YearEndWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-542_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-542_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-542_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-542_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_542",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-542-YearEndWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-542_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for YearEnd in asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. See 2-542-YearEndWrongType.csv for details",
										"errorCode": "2-542"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_542')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-542-YearStartWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-542_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-542-YearStartWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-542_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-542_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-542_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-542_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_542",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-542-YearStartWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-542_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for YearStart in asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. See 2-542-YearStartWrongType.csv for details",
										"errorCode": "2-542"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_542')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-543-NbRepAction1InvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-543_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-543-NbRepAction1InvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_543",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-543_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-543_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-543_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-543_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_543",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-543-NbRepAction1InvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-543_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for NbRepAction1 in asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. See 2-543-NbRepAction1InvalidRange.csv for details",
										"errorCode": "2-543"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_543')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-543-TypeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "2-543_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "2-543-TypeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "2_543",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "2-543_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "2-543_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('2-543_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "2-543_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "2_543",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "2-543-TypeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "2-543_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for Type in asset-integration-accelerator-input/ActivitiesManagement/Update/TechnicalPolicies.csv. See 2-543-TypeInvalidRange.csv for details",
										"errorCode": "2-543"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/2_543')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-110-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-110-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-110-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/Budgets/Create/Budgets.csv. See 3-110-AlreadyExistName.csv for details",
										"errorCode": "3-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-110-NotExistingBudgetAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-110-NotExistingBudgetAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-110-NotExistingBudgetAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Budget in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv not existing. See 3-110-NotExistingBudgetAvailableQuantityByYear.csv for details",
										"errorCode": "3-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-110-NotExistingBudgetCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-110-NotExistingBudgetCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-110-NotExistingBudgetCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Budget in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv not existing. See 3-110-NotExistingBudgetCatKeyLabels.csv for details",
										"errorCode": "3-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-110-NotExistingBudgetMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-110-NotExistingBudgetMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-110-NotExistingBudgetMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Budget in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv not existing. See 3-110-NotExistingBudgetMinimalQuantityLevelByYear.csv for details",
										"errorCode": "3-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-110-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-110-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-110-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/Budgets/Create/Budgets.csv. See 3-110-NotUniqueName.csv for details",
										"errorCode": "3-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnBudgetAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnBudgetAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnBudgetAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Budget in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnBudgetAvailableQuantityByYear.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnBudgetCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnBudgetCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnBudgetCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Budget in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnBudgetCatKeyLabels.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnBudgetMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnBudgetMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnBudgetMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Budget in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnBudgetMinimalQuantityLevelByYear.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnIndexCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnIndexCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnIndexCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnIndexCatKeyLabels.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnName.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnValueAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnValueAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnValueAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnValueAvailableQuantityByYear.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnValueCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnValueCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnValueCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnValueCatKeyLabels.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnValueMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnValueMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnValueMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnValueMinimalQuantityLevelByYear.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnYearAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnYearAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnYearAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Year in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnYearAvailableQuantityByYear.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-111-MissColumnYearMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-111-MissColumnYearMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-111-MissColumnYearMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Year in file asset-integration-accelerator-input/Budgets/Create/Budgets.csv. Open 3-111-MissColumnYearMinimalQuantityLevelByYear.csv for details",
										"errorCode": "3-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-112-AvailableQuantityByYearValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-112-AvailableQuantityByYearValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-112-AvailableQuantityByYearValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for AvailableQuantityByYearValue in asset-integration-accelerator-input/Budgets/Create/Budgets.csv. See 3-112-AvailableQuantityByYearValueWrongType.csv for details",
										"errorCode": "3-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-112-ConstrainedWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-112-ConstrainedWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-112-ConstrainedWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Constrained in asset-integration-accelerator-input/Budgets/Create/Budgets.csv. See 3-112-ConstrainedWrongType.csv for details",
										"errorCode": "3-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-112-CostRateWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-112-CostRateWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-112-CostRateWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CostRate in asset-integration-accelerator-input/Budgets/Create/Budgets.csv. See 3-112-CostRateWrongType.csv for details",
										"errorCode": "3-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-112-MinimalQuantityLevelByYearValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-112-MinimalQuantityLevelByYearValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-112-MinimalQuantityLevelByYearValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MinimalQuantityLevelByYearValue in asset-integration-accelerator-input/Budgets/Create/Budgets.csv. See 3-112-MinimalQuantityLevelByYearValueWrongType.csv for details",
										"errorCode": "3-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-112-RankWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-112-RankWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-112-RankWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Rank in asset-integration-accelerator-input/Budgets/Create/Budgets.csv. See 3-112-RankWrongType.csv for details",
										"errorCode": "3-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-113-CostTypeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-113_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-113-CostTypeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_113",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-113_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-113_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-113_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-113_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_113",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-113-CostTypeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-113_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for CostType in asset-integration-accelerator-input/Budgets/Create/Budgets.csv. See 3-113-CostTypeInvalidRange.csv for details",
										"errorCode": "3-113"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-310-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-310_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-310-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_310",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-310_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-310_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-310_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-310_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_310",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-310-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-310_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/Budgets/Delete/Budgets.csv not existing. See 3-310-NotExistingName.csv for details",
										"errorCode": "3-310"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_310')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-311-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-311_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-311-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_311",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-311_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-311_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-311_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-311_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_311",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-311-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-311_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/Budgets/Delete/Budgets.csv. Open 3-311-MissColumnName.csv for details",
										"errorCode": "3-311"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-510-NotExistingBudgetAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-510-NotExistingBudgetAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-510-NotExistingBudgetAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Budget in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv not existing. See 3-510-NotExistingBudgetAvailableQuantityByYear.csv for details",
										"errorCode": "3-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-510-NotExistingBudgetCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-510-NotExistingBudgetCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-510-NotExistingBudgetCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Budget in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv not existing. See 3-510-NotExistingBudgetCatKeyLabels.csv for details",
										"errorCode": "3-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-510-NotExistingBudgetMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-510-NotExistingBudgetMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-510-NotExistingBudgetMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Budget in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv not existing. See 3-510-NotExistingBudgetMinimalQuantityLevelByYear.csv for details",
										"errorCode": "3-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-510-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-510-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-510-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv not existing. See 3-510-NotExistingName.csv for details",
										"errorCode": "3-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnBudgetAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnBudgetAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnBudgetAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Budget in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnBudgetAvailableQuantityByYear.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnBudgetCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnBudgetCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnBudgetCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Budget in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnBudgetCatKeyLabels.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnBudgetMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnBudgetMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnBudgetMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Budget in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnBudgetMinimalQuantityLevelByYear.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnIndexCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnIndexCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnIndexCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnIndexCatKeyLabels.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnName.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnValueAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnValueAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnValueAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnValueAvailableQuantityByYear.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnValueCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnValueCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnValueCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnValueCatKeyLabels.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnValueMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnValueMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnValueMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnValueMinimalQuantityLevelByYear.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnYearAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnYearAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnYearAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Year in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnYearAvailableQuantityByYear.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-511-MissColumnYearMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-511-MissColumnYearMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-511-MissColumnYearMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Year in file asset-integration-accelerator-input/Budgets/Update/Budgets.csv. Open 3-511-MissColumnYearMinimalQuantityLevelByYear.csv for details",
										"errorCode": "3-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-512-AvailableQuantityByYearValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-512-AvailableQuantityByYearValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-512-AvailableQuantityByYearValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for AvailableQuantityByYearValue in asset-integration-accelerator-input/Budgets/Update/Budgets.csv. See 3-512-AvailableQuantityByYearValueWrongType.csv for details",
										"errorCode": "3-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-512-ConstrainedWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-512-ConstrainedWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-512-ConstrainedWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Constrained in asset-integration-accelerator-input/Budgets/Update/Budgets.csv. See 3-512-ConstrainedWrongType.csv for details",
										"errorCode": "3-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-512-CostRateWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-512-CostRateWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-512-CostRateWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CostRate in asset-integration-accelerator-input/Budgets/Update/Budgets.csv. See 3-512-CostRateWrongType.csv for details",
										"errorCode": "3-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-512-MinimalQuantityLevelByYearValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-512-MinimalQuantityLevelByYearValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-512-MinimalQuantityLevelByYearValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MinimalQuantityLevelByYearValue in asset-integration-accelerator-input/Budgets/Update/Budgets.csv. See 3-512-MinimalQuantityLevelByYearValueWrongType.csv for details",
										"errorCode": "3-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-512-RankWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-512-RankWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-512-RankWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Rank in asset-integration-accelerator-input/Budgets/Update/Budgets.csv. See 3-512-RankWrongType.csv for details",
										"errorCode": "3-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-513-CostTypeInvalidRange')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "3-513_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "3-513-CostTypeInvalidRange.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "3_513",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "3-513_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "3-513_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('3-513_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "3-513_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "3_513",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "3-513-CostTypeInvalidRange.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "3-513_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect range for CostType in asset-integration-accelerator-input/Budgets/Update/Budgets.csv. See 3-513-CostTypeInvalidRange.csv for details",
										"errorCode": "3-513"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/3_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-110-AlreadyExistName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-110-AlreadyExistName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-110-AlreadyExistName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Name have already used value in asset-integration-accelerator-input/HumanResources/Create/Teams.csv. See 4-110-AlreadyExistName.csv for details",
										"errorCode": "4-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-110-NotExistingTeamAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-110-NotExistingTeamAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-110-NotExistingTeamAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Team in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv not existing. See 4-110-NotExistingTeamAvailableQuantityByYear.csv for details",
										"errorCode": "4-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-110-NotExistingTeamCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-110-NotExistingTeamCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-110-NotExistingTeamCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Team in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv not existing. See 4-110-NotExistingTeamCatKeyLabels.csv for details",
										"errorCode": "4-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-110-NotExistingTeamMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-110-NotExistingTeamMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-110-NotExistingTeamMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Team in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv not existing. See 4-110-NotExistingTeamMinimalQuantityLevelByYear.csv for details",
										"errorCode": "4-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-110-NotUniqueName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-110_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-110-NotUniqueName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-110_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-110_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-110_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-110_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_110",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-110-NotUniqueName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-110_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Similar values for Name are used in asset-integration-accelerator-input/HumanResources/Create/Teams.csv. See 4-110-NotUniqueName.csv for details",
										"errorCode": "4-110"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_110')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnIndexCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnIndexCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnIndexCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnIndexCatKeyLabels.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnName.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnTeamAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnTeamAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnTeamAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Team in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnTeamAvailableQuantityByYear.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnTeamCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnTeamCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnTeamCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Team in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnTeamCatKeyLabels.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnTeamMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnTeamMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnTeamMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Team in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnTeamMinimalQuantityLevelByYear.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnValueAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnValueAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnValueAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnValueAvailableQuantityByYear.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnValueCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnValueCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnValueCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnValueCatKeyLabels.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnValueMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnValueMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnValueMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnValueMinimalQuantityLevelByYear.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnYearAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnYearAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnYearAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Year in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnYearAvailableQuantityByYear.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-111-MissColumnYearMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-111_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-111-MissColumnYearMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-111_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-111_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-111_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-111_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_111",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-111-MissColumnYearMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-111_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Year in file asset-integration-accelerator-input/HumanResources/Create/Teams.csv. Open 4-111-MissColumnYearMinimalQuantityLevelByYear.csv for details",
										"errorCode": "4-111"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_111')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-112-AvailableQuantityByYearValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-112-AvailableQuantityByYearValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-112-AvailableQuantityByYearValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for AvailableQuantityByYearValue in asset-integration-accelerator-input/HumanResources/Create/Teams.csv. See 4-112-AvailableQuantityByYearValueWrongType.csv for details",
										"errorCode": "4-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-112-ConstrainedWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-112-ConstrainedWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-112-ConstrainedWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Constrained in asset-integration-accelerator-input/HumanResources/Create/Teams.csv. See 4-112-ConstrainedWrongType.csv for details",
										"errorCode": "4-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-112-CostRateWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-112-CostRateWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-112-CostRateWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CostRate in asset-integration-accelerator-input/HumanResources/Create/Teams.csv. See 4-112-CostRateWrongType.csv for details",
										"errorCode": "4-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-112-MinimalQuantityLevelByYearValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-112_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-112-MinimalQuantityLevelByYearValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_112",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-112_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-112_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-112_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-112_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_112",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-112-MinimalQuantityLevelByYearValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-112_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MinimalQuantityLevelByYearValue in asset-integration-accelerator-input/HumanResources/Create/Teams.csv. See 4-112-MinimalQuantityLevelByYearValueWrongType.csv for details",
										"errorCode": "4-112"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-310-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-310_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-310-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_310",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-310_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-310_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-310_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-310_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_310",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-310-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-310_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/HumanResources/Delete/Teams.csv not existing. See 4-310-NotExistingName.csv for details",
										"errorCode": "4-310"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_310')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-311-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-311_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-311-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_311",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-311_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-311_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-311_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-311_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_311",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-311-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-311_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/HumanResources/Delete/Teams.csv. Open 4-311-MissColumnName.csv for details",
										"errorCode": "4-311"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Delete/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-510-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-510-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-510-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv not existing. See 4-510-NotExistingName.csv for details",
										"errorCode": "4-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-510-NotExistingTeamAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-510-NotExistingTeamAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-510-NotExistingTeamAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Team in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv not existing. See 4-510-NotExistingTeamAvailableQuantityByYear.csv for details",
										"errorCode": "4-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-510-NotExistingTeamCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-510-NotExistingTeamCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-510-NotExistingTeamCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Team in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv not existing. See 4-510-NotExistingTeamCatKeyLabels.csv for details",
										"errorCode": "4-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-510-NotExistingTeamMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-510-NotExistingTeamMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-510-NotExistingTeamMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Team in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv not existing. See 4-510-NotExistingTeamMinimalQuantityLevelByYear.csv for details",
										"errorCode": "4-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnIndexCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnIndexCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnIndexCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Index in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnIndexCatKeyLabels.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnName.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnTeamAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnTeamAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnTeamAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Team in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnTeamAvailableQuantityByYear.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnTeamCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnTeamCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnTeamCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Team in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnTeamCatKeyLabels.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnTeamMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnTeamMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnTeamMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Team in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnTeamMinimalQuantityLevelByYear.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnValueAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnValueAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnValueAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnValueAvailableQuantityByYear.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnValueCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnValueCatKeyLabels.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnValueCatKeyLabels.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnValueCatKeyLabels.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnValueMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnValueMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnValueMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Value in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnValueMinimalQuantityLevelByYear.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnYearAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnYearAvailableQuantityByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnYearAvailableQuantityByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Year in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnYearAvailableQuantityByYear.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-511-MissColumnYearMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-511-MissColumnYearMinimalQuantityLevelByYear.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-511-MissColumnYearMinimalQuantityLevelByYear.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Year in file asset-integration-accelerator-input/HumanResources/Update/Teams.csv. Open 4-511-MissColumnYearMinimalQuantityLevelByYear.csv for details",
										"errorCode": "4-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-512-AvailableQuantityByYearValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-512-AvailableQuantityByYearValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-512-AvailableQuantityByYearValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for AvailableQuantityByYearValue in asset-integration-accelerator-input/HumanResources/Update/Teams.csv. See 4-512-AvailableQuantityByYearValueWrongType.csv for details",
										"errorCode": "4-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-512-ConstrainedWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-512-ConstrainedWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-512-ConstrainedWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for Constrained in asset-integration-accelerator-input/HumanResources/Update/Teams.csv. See 4-512-ConstrainedWrongType.csv for details",
										"errorCode": "4-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-512-CostRateWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-512-CostRateWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-512-CostRateWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for CostRate in asset-integration-accelerator-input/HumanResources/Update/Teams.csv. See 4-512-CostRateWrongType.csv for details",
										"errorCode": "4-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-512-MinimalQuantityLevelByYearValueWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "4-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "4-512-MinimalQuantityLevelByYearValueWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "4_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "4-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "4-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('4-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "4-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "4_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "4-512-MinimalQuantityLevelByYearValueWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "4-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for MinimalQuantityLevelByYearValue in asset-integration-accelerator-input/HumanResources/Update/Teams.csv. See 4-512-MinimalQuantityLevelByYearValueWrongType.csv for details",
										"errorCode": "4-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/4_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5-510-NotExistingName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "5-510_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "5-510-NotExistingName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "5_510",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "5-510_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "5-510_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('5-510_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "5-510_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "5_510",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "5-510-NotExistingName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "5-510_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Reference Name in file asset-integration-accelerator-input/Finance/Update/AgingFamilies.csv not existing. See 5-510-NotExistingName.csv for details",
										"errorCode": "5-510"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/5_510')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5-511-MissColumnName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "5-511_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "5-511-MissColumnName.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "5_511",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "5-511_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "5-511_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('5-511_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "5-511_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "5_511",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "5-511-MissColumnName.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "5-511_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Missing Mandatory Columns Name in file asset-integration-accelerator-input/Finance/Update/AgingFamilies.csv. Open 5-511-MissColumnName.csv for details",
										"errorCode": "5-511"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/5_511')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5-512-LifeSpanWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "5-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "5-512-LifeSpanWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "5_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "5-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "5-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('5-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "5-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "5_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "5-512-LifeSpanWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "5-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for LifeSpan in asset-integration-accelerator-input/Finance/Update/AgingFamilies.csv. See 5-512-LifeSpanWrongType.csv for details",
										"errorCode": "5-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/5_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5-512-RawInvestmentWrongType')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "5-512_LookUp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "5-512-RawInvestmentWrongType.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "5_512",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "5-512_ErrorManagement",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "5-512_LookUp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@contains(activity('5-512_LookUp').output, 'firstRow')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "5-512_Delete",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "5_512",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"wildcardFileName": "5-512-RawInvestmentWrongType.csv",
											"enablePartitionDiscovery": false
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "5-512_Fail",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "Incorrect type for RawInvestment in asset-integration-accelerator-input/Finance/Update/AgingFamilies.csv. See 5-512-RawInvestmentWrongType.csv for details",
										"errorCode": "5-512"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance/Update/ErrorDetectorPipelines"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/5_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResourcesInitialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TempInput_ActionFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "ActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_ActionFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_ActionTasksStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "ActionTasks_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyActionTasksStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_ActionTasksStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_ActionFamiliesActionTasksStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "ActionFamiliesActionTasks_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyActionFamiliesActionTasksStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_ActionFamiliesActionTasksStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesActionTasksStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResourcesInjection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyActivitiesManagementHumanResourcesDeleteRelationshi",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementHumanResourcesDeleteRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagementHumanResources_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivitiesManagementHumanResourcesDeleteEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementHumanResourcesDeleteRelationshi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementHumanResourcesDeleteEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagementHumanResources_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivitiesManagementHumanResourcesCreateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementHumanResourcesDeleteEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementHumanResourcesCreateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagementHumanResources_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivitiesManagementHumanResourcesCreateRelationshi",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementHumanResourcesCreateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementHumanResourcesCreateRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagementHumanResources_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivitiesManagementHumanResourcesUpdateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementHumanResourcesCreateRelationshi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementHumanResourcesUpdateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagementHumanResources_UpdateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CheckActivitiesManagementHumanResourcesExistence",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementHumanResourcesUpdateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ActivitiesManagementHumanResources_DeleteTempDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeletionIfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckActivitiesManagementHumanResourcesExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckActivitiesManagementHumanResourcesExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ActivitiesManagementHumanResourcesTempDatasetDeletion",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ActivitiesManagementHumanResources_DeleteTempDataset",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResources_DeleteInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResources_CreateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesUpdateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResources_UpdateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResources_DeleteTempDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResourcesStatusCleaner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTempInput_ActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_ActionTasksStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_ActionFamiliesActionTasksStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesActionTasksStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResources_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ActivitiesManagementHumanResourcesInitialization",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivitiesManagementHumanResourcesInitialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteActionFamiliesActionTasks",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivitiesManagementHumanResourcesInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteActionFamiliesActionTasks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteActionTasks",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteActionFamiliesActionTasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteActionTasks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateActionTasks",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteActionTasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateActionTasks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateActionFamiliesActionTasks",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateActionTasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateActionFamiliesActionTasks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateActionTasks",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateActionFamiliesActionTasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateActionTasks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ActivitiesManagementHumanResourcesInjection",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateActionTasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivitiesManagementHumanResourcesInjection",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ActivitiesManagementHumanResourcesStatusCleaner",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateActionTasks",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivitiesManagementHumanResourcesStatusCleaner",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ActivitiesManagementHumanResourcesInitialization')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteActionFamiliesActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateActionFamiliesActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/ActivitiesManagementHumanResourcesInjection')]",
				"[concat(variables('factoryId'), '/pipelines/ActivitiesManagementHumanResourcesStatusCleaner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementInitialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TempInput_ActionFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "ActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_ActionFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_CriteriaStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "Criteria_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyCriteriaStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_CriteriaStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SustainmentActionsStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SustainmentActions_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySustainmentActionsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SustainmentActionsStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SustainmentActionsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_TechnicalPoliciesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "TechnicalPolicies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyTechnicalPoliciesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_TechnicalPoliciesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TechnicalPoliciesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SustainmentActionsActionFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SustainmentActionsActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySustainmentActionsActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SustainmentActionsActionFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SustainmentActionsEquipmentGroupsStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SustainmentActionsEquipmentGroups_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySustainmentActionsEquipmentGroupsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SustainmentActionsEquipmentGroupsStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_TechnicalPoliciesMainActionFamiliesStatusDele",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "TechnicalPoliciesMainActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyTechnicalPoliciesMainActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_TechnicalPoliciesMainActionFamiliesStatusDele",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatu",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "TechnicalPoliciesSecondaryActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyTechnicalPoliciesSecondaryActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatu",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_TechnicalPoliciesCriteriaStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "TechnicalPoliciesCriteria_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyTechnicalPoliciesCriteriaStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_TechnicalPoliciesCriteriaStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_ActionFamiliesSubActionFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "ActionFamiliesSubActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyActionFamiliesSubActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_ActionFamiliesSubActionFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_ActionFamiliesActionTasksStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "ActionFamiliesActionTasks_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyActionFamiliesActionTasksStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_ActionFamiliesActionTasksStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesActionTasksStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementInjection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyActivitiesManagementDeleteRelationship_temp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagement_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivitiesManagementDeleteEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementDeleteRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementDeleteEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagement_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivitiesManagementCreateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementDeleteEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementCreateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagement_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivitiesManagementCreateRelationship_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementCreateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagement_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyActivitiesManagementUpdateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementCreateRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActivitiesManagementUpdateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActivitiesManagement_UpdateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CheckActivitiesManagementExistence",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyActivitiesManagementUpdateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ActivitiesManagement_DeleteTempDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeletionIfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckActivitiesManagementExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckActivitiesManagementExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ActivitiesManagementTempDatasetDeletion",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ActivitiesManagement_DeleteTempDataset",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagement_DeleteInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagement_CreateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementUpdateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagement_UpdateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagement_DeleteTempDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementStatusCleaner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTempInput_ActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_CriteriaStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SustainmentActionsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SustainmentActionsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_TechnicalPoliciesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TechnicalPoliciesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SustainmentActionsActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SustainmentActionsEquipmentGroupsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_TechnicalPoliciesMainActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_TechnicalPoliciesSecondaryActionFamiliesS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_TechnicalPoliciesCriteriaStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_ActionFamiliesSubActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_ActionFamiliesActionTasksStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActionFamiliesActionTasksStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesActionTasksStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagement_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ActivitiesManagementInitialization",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivitiesManagementInitialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteSustainmentActionsActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteSustainmentActionsActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteTechnicalPoliciesMainActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteTechnicalPoliciesMainActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteTechnicalPoliciesSecondaryActionFamili",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteTechnicalPoliciesSecondaryActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteTechnicalPoliciesCriteria",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteTechnicalPoliciesCriteria",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteSustainmentActionsActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesMainActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesSecondaryActionFamili",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteCriteria",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteSustainmentActionsActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesMainActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesSecondaryActionFamili",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteCriteria",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteSustainmentActions",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteSustainmentActionsActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesMainActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesSecondaryActionFamili",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteSustainmentActions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteTechnicalPolicies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteSustainmentActionsActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesMainActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesSecondaryActionFamili",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPoliciesCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteTechnicalPolicies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateSustainmentActionsActionFamiliesStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UpdateSustainmentActionsActionFamiliesStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateTechnicalPoliciesMainActionFamiliesStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UpdateTechnicalPoliciesMainActionFamiliesStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateTechnicalPoliciesSecondaryActionFamiliesStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UpdateTechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateTechnicalPoliciesCriteriaStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UpdateTechnicalPoliciesCriteriaStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActionsActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesMainActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesSecondaryActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesCriteriaStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateCriteria",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActionsActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesMainActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesSecondaryActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesCriteriaStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateCriteria",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateSustainmentActions",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActionsActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesMainActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesSecondaryActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesCriteriaStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateSustainmentActions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateTechnicalPolicies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActionsActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesMainActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesSecondaryActionFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateTechnicalPoliciesCriteriaStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateTechnicalPolicies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateSustainmentActionsActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateSustainmentActionsActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateTechnicalPoliciesMainActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateTechnicalPoliciesMainActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateTechnicalPoliciesSecondaryActionFamili",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateTechnicalPoliciesSecondaryActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateTechnicalPoliciesCriteria",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateTechnicalPoliciesCriteria",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSustainmentActionsActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesMainActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesSecondaryActionFamili",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateCriteria",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSustainmentActionsActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesMainActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesSecondaryActionFamili",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateCriteria",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateSustainmentActions",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSustainmentActionsActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesMainActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesSecondaryActionFamili",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateSustainmentActions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateTechnicalPolicies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSustainmentActionsActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesMainActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesSecondaryActionFamili",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateTechnicalPoliciesCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateTechnicalPolicies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ActivitiesManagementInjection",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivitiesManagementInjection",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ActivitiesManagementStatusCleaner",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateCriteria",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateSustainmentActions",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateTechnicalPolicies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivitiesManagementStatusCleaner",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ActivitiesManagementInitialization')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteSustainmentActionsActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteTechnicalPoliciesMainActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteTechnicalPoliciesSecondaryActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteTechnicalPoliciesCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteSustainmentActions')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateSustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateTechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateTechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateTechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateSustainmentActions')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateSustainmentActionsActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateTechnicalPoliciesMainActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateTechnicalPoliciesSecondaryActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateTechnicalPoliciesCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateSustainmentActions')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/pipelines/ActivitiesManagementInjection')]",
				"[concat(variables('factoryId'), '/pipelines/ActivitiesManagementStatusCleaner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetIntegrationMain')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AssetPortfolio",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivateIntegrationRuntime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AssetPortfolio_Main",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ActivitiesManagement",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivateIntegrationRuntime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivitiesManagement_Main",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Budgets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivateIntegrationRuntime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Budgets_Main",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HumanResources",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivateIntegrationRuntime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HumanResources_Main",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Finance",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolio",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ActivateIntegrationRuntime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Finance_Main",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AssetPortfolioActivitiesManagement",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolio",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ActivitiesManagement",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ActivateIntegrationRuntime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AssetPortfolioActivitiesManagement_Main",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ActivitiesManagementHumanResources",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivitiesManagement",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "HumanResources",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ActivateIntegrationRuntime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivitiesManagementHumanResources_Main",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CleanStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolio",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ActivitiesManagement",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Budgets",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "HumanResources",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Finance",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "AssetPortfolioActivitiesManagement",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ActivitiesManagementHumanResources",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "StatusCleaner",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ActivateIntegrationRuntime",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "IntegrationRuntimeActivation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/AssetPortfolio_Main')]",
				"[concat(variables('factoryId'), '/pipelines/ActivitiesManagement_Main')]",
				"[concat(variables('factoryId'), '/pipelines/Budgets_Main')]",
				"[concat(variables('factoryId'), '/pipelines/HumanResources_Main')]",
				"[concat(variables('factoryId'), '/pipelines/Finance_Main')]",
				"[concat(variables('factoryId'), '/pipelines/AssetPortfolioActivitiesManagement_Main')]",
				"[concat(variables('factoryId'), '/pipelines/ActivitiesManagementHumanResources_Main')]",
				"[concat(variables('factoryId'), '/pipelines/StatusCleaner')]",
				"[concat(variables('factoryId'), '/pipelines/IntegrationRuntimeActivation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagementInitialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TempInput_EquipmentComponentsStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "EquipmentComponents_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyEquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_EquipmentComponentsStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_AgingFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "AgingFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyAgingFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_AgingFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_ActionFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "ActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_ActionFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_EquipmentGroupsStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "EquipmentGroups_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyEquipmentGroupsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_EquipmentGroupsStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SustainmentActionsEquipmentGroupsStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SustainmentActionsEquipmentGroups_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySustainmentActionsEquipmentGroupsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SustainmentActionsEquipmentGroupsStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SubActionFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SubActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySubActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SubActionFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_ActionFamiliesSubActionFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "ActionFamiliesSubActionFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyActionFamiliesSubActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_ActionFamiliesSubActionFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SubActionFamiliesAgingFamiliesApplicationStat",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SubActionFamiliesAgingFamiliesApplication_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySubActionFamiliesAgingFamiliesApplicationStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SubActionFamiliesAgingFamiliesApplicationStat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SubActionFamiliesAgingFamiliesReplacementStat",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SubActionFamiliesAgingFamiliesReplacement_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySubActionFamiliesAgingFamiliesReplacementStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SubActionFamiliesAgingFamiliesReplacementStat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_EquipmentGroupsEquipmentComponentsStatusDelet",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "EquipmentGroupsEquipmentComponents_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyEquipmentGroupsEquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_EquipmentGroupsEquipmentComponentsStatusDelet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentGroupsEquipmentComponentsStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagementInjection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyAssetPortfolioActivitiesManagementDeleteRelationshi",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagement_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAssetPortfolioActivitiesManagementDeleteEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioActivitiesManagementDeleteRelationshi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagementDeleteEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagement_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAssetPortfolioActivitiesManagementCreateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioActivitiesManagementDeleteEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagementCreateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagement_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAssetPortfolioActivitiesManagementCreateRelationshi",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioActivitiesManagementCreateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagement_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAssetPortfolioActivitiesManagementUpdateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioActivitiesManagementCreateRelationshi",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagementUpdateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolioActivitiesManagement_UpdateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CheckAssetPortfolioActivitiesManagementExistence",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioActivitiesManagementUpdateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagement_DeleteTempDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeletionIfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckAssetPortfolioActivitiesManagementExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckAssetPortfolioActivitiesManagementExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "AssetPortfolioActivitiesManagementTempDatasetDeletion",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "AssetPortfolioActivitiesManagement_DeleteTempDataset",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagement_DeleteInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagement_CreateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementUpdateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagement_UpdateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagement_DeleteTempDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagementStatusCleaner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTempInput_EquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_AgingFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_ActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_EquipmentGroupsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SustainmentActionsEquipmentGroupsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SubActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_ActionFamiliesSubActionFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SubActionFamiliesAgingFamiliesApplication",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SubActionFamiliesAgingFamiliesReplacement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_EquipmentGroupsEquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentGroupsEquipmentComponentsStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagement_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AssetPortfolioActivitiesManagementInitialization",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AssetPortfolioActivitiesManagementInitialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteActionFamiliesSubActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolioActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteActionFamiliesSubActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteSubActionFamiliesAgingFamiliesApplicat",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolioActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteSubActionFamiliesAgingFamiliesApplication",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteSubActionFamiliesAgingFamiliesReplacem",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolioActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteSubActionFamiliesAgingFamiliesReplacement",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteEquipmentGroupsEquipmentComponents",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolioActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteEquipmentGroupsEquipmentComponents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteSustainmentActionsEquipmentGroups",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolioActivitiesManagementInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteSustainmentActionsEquipmentGroups",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteSubActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteActionFamiliesSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSubActionFamiliesAgingFamiliesApplicat",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSubActionFamiliesAgingFamiliesReplacem",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteEquipmentGroupsEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSustainmentActionsEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteSubActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteEquipmentGroups",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteActionFamiliesSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSubActionFamiliesAgingFamiliesApplicat",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSubActionFamiliesAgingFamiliesReplacem",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteEquipmentGroupsEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteSustainmentActionsEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteEquipmentGroups",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateSubActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateSubActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateEquipmentGroups",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateEquipmentGroups",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateActionFamiliesSubActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateActionFamiliesSubActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateSubActionFamiliesAgingFamiliesApplicat",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateSubActionFamiliesAgingFamiliesApplication",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateSubActionFamiliesAgingFamiliesReplacem",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateSubActionFamiliesAgingFamiliesReplacement",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateEquipmentGroupsEquipmentComponents",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateEquipmentGroupsEquipmentComponents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateSustainmentActionsEquipmentGroups",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateSustainmentActionsEquipmentGroups",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateSubActionFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateActionFamiliesSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSubActionFamiliesAgingFamiliesApplicat",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSubActionFamiliesAgingFamiliesReplacem",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentGroupsEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSustainmentActionsEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateSubActionFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateEquipmentGroups",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateActionFamiliesSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSubActionFamiliesAgingFamiliesApplicat",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSubActionFamiliesAgingFamiliesReplacem",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentGroupsEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateSustainmentActionsEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateEquipmentGroups",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AssetPortfolioActivitiesManagementInjection",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AssetPortfolioActivitiesManagementInjection",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AssetPortfolioActivitiesManagementStatusCleaner",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateSubActionFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateEquipmentGroups",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AssetPortfolioActivitiesManagementStatusCleaner",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/AssetPortfolioActivitiesManagementInitialization')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteActionFamiliesSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteSubActionFamiliesAgingFamiliesApplication')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteSubActionFamiliesAgingFamiliesReplacement')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteEquipmentGroupsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteSustainmentActionsEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateActionFamiliesSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateSubActionFamiliesAgingFamiliesApplication')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateSubActionFamiliesAgingFamiliesReplacement')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateEquipmentGroupsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateSustainmentActionsEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/AssetPortfolioActivitiesManagementInjection')]",
				"[concat(variables('factoryId'), '/pipelines/AssetPortfolioActivitiesManagementStatusCleaner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioInitialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TempInput_EquipmentComponentsStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "EquipmentComponents_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyEquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_EquipmentComponentsStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_AgingFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "AgingFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyAgingFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_AgingFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_EquipmentComponentsAgingFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "EquipmentComponentsAgingFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyEquipmentComponentsAgingFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_EquipmentComponentsAgingFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_EquipmentComponentsEquipmentComponentsStatusD",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "EquipmentComponentsEquipmentComponents_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyEquipmentComponentsEquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_EquipmentComponentsEquipmentComponentsStatusD",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SubActionFamiliesAgingFamiliesApplicationStat",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SubActionFamiliesAgingFamiliesApplication_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySubActionFamiliesAgingFamiliesApplicationStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SubActionFamiliesAgingFamiliesApplicationStat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_SubActionFamiliesAgingFamiliesReplacementStat",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "SubActionFamiliesAgingFamiliesReplacement_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopySubActionFamiliesAgingFamiliesReplacementStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_SubActionFamiliesAgingFamiliesReplacementStat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TempInput_EquipmentGroupsEquipmentComponentsStatusDelet",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "EquipmentGroupsEquipmentComponents_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyEquipmentGroupsEquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_EquipmentGroupsEquipmentComponentsStatusDelet",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentGroupsEquipmentComponentsStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioInjection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyAssetPortfolioDeleteRelationship_temp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioDeleteRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolio_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAssetPortfolioDeleteEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioDeleteRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioDeleteEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolio_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAssetPortfolioCreateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioDeleteEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioCreateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolio_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAssetPortfolioCreateRelationship_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioCreateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioCreateRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolio_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyAssetPortfolioUpdateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioCreateRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AssetPortfolioUpdateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AssetPortfolio_UpdateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CheckAssetPortfolioExistence",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyAssetPortfolioUpdateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "AssetPortfolio_DeleteTempDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeletionIfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckAssetPortfolioExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckAssetPortfolioExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "AssetPortfolioTempDatasetDeletion",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "AssetPortfolio_DeleteTempDataset",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolio_DeleteInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolio_CreateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioUpdateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolio_UpdateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolio_DeleteTempDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioStatusCleaner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTempInput_EquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_AgingFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_EquipmentComponentsAgingFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_EquipmentComponentsEquipmentComponentsSta",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SubActionFamiliesAgingFamiliesApplication",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_SubActionFamiliesAgingFamiliesReplacement",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyTempInput_EquipmentGroupsEquipmentComponentsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentGroupsEquipmentComponentsStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolio_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AssetPortfolioInitialization",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AssetPortfolioInitialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteEquipmentComponentsAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolioInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteEquipmentComponentsAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteEquipmentComponentsEquipmentComponents",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AssetPortfolioInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteEquipmentComponentsEquipmentComponents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteEquipmentComponents",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteEquipmentComponentsAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteEquipmentComponentsEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteEquipmentComponents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteEquipmentComponentsAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteEquipmentComponentsEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateEquipmentComponentsAgingFamiliesStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UpdateEquipmentComponentsAgingFamiliesStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateEquipmentComponentsEquipmentComponentsStatus",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalDeleteAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UpdateEquipmentComponentsEquipmentComponentsStatus",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateEquipmentComponents",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponentsAgingFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateEquipmentComponentsEquipmentComponentsStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateEquipmentComponents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponentsAgingFamiliesStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "UpdateEquipmentComponentsEquipmentComponentsStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateEquipmentComponentsAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateEquipmentComponentsAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateEquipmentComponentsEquipmentComponents",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateEquipmentComponentsEquipmentComponents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateEquipmentComponents",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateEquipmentComponentsAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentComponentsEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateEquipmentComponents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateEquipmentComponentsAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalCreateEquipmentComponentsEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AssetPortfolioInjection",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AssetPortfolioInjection",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AssetPortfolioStatusCleaner",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateEquipmentComponents",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ConditionalUpdateAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AssetPortfolioStatusCleaner",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/AssetPortfolioInitialization')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteEquipmentComponentsAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteEquipmentComponentsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateEquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateEquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateEquipmentComponentsAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateEquipmentComponentsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/AssetPortfolioInjection')]",
				"[concat(variables('factoryId'), '/pipelines/AssetPortfolioStatusCleaner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsInitialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TempInput_BudgetsStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_BudgetsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "Budgets_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyBudgetsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_BudgetsStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BudgetsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_BudgetsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_BudgetsStatus')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsInjection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyBudgetsDeleteRelationship_temp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BudgetsDeleteRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Budgets_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyBudgetsDeleteEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyBudgetsDeleteRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BudgetsDeleteEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Budgets_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyBudgetsCreateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyBudgetsDeleteEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BudgetsCreateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Budgets_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyBudgetsCreateRelationship_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyBudgetsCreateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BudgetsCreateRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Budgets_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyBudgetsUpdateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyBudgetsCreateRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "BudgetsUpdateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Budgets_UpdateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CheckBudgetsExistence",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyBudgetsUpdateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Budgets_DeleteTempDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeletionIfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckBudgetsExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckBudgetsExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "BudgetsTempDatasetDeletion",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Budgets_DeleteTempDataset",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/BudgetsDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/Budgets_DeleteInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/Budgets_CreateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsUpdateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/Budgets_UpdateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/Budgets_DeleteTempDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsStatusCleaner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTempInput_BudgetsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_BudgetsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BudgetsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_BudgetsStatus')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Budgets_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BudgetsInitialization",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BudgetsInitialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteBudgets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BudgetsInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteBudgets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateBudgets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteBudgets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateBudgets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateBudgets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateBudgets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateBudgets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BudgetsInjection",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateBudgets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BudgetsInjection",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BudgetsStatusCleaner",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateBudgets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BudgetsStatusCleaner",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/BudgetsInitialization')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteBudgets')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateBudgets')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateBudgets')]",
				"[concat(variables('factoryId'), '/pipelines/BudgetsInjection')]",
				"[concat(variables('factoryId'), '/pipelines/BudgetsStatusCleaner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateActionFamiliesActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateActionFamiliesActionTasks",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateActionFamiliesActionTasks_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateActionFamiliesActionTasks",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateActionFamiliesActionTasks",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamiliesActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/CreateActionFamiliesActionTasks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateActionFamiliesSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateActionFamiliesSubActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateActionFamiliesSubActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateActionFamiliesSubActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateActionFamiliesSubActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamiliesSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateActionFamiliesSubActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateActionTasks",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateActionTasks_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateActionTasks",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateActionTasks",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/CreateActionTasks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateAgingFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateAgingFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateAgingFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateAgingFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateAgingFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateBudgets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateBudgets",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateBudgets_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateBudgets",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateBudgets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateBudgets')]",
				"[concat(variables('factoryId'), '/pipelines/CreateBudgets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateCriteria",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateCriteria_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateCriteria",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateCriteria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/CreateCriteria')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateEquipmentComponents",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateEquipmentComponents_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateEquipmentComponents",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateEquipmentComponents",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/CreateEquipmentComponents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateEquipmentComponentsAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateEquipmentComponentsAgingFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateEquipmentComponentsAgingFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateEquipmentComponentsAgingFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateEquipmentComponentsAgingFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponentsAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateEquipmentComponentsAgingFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateEquipmentComponentsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateEquipmentComponentsEquipmentComponents",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateEquipmentComponentsEquipmentComponents_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateEquipmentComponentsEquipmentComponents",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateEquipmentComponentsEquipmentComponents",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponentsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/CreateEquipmentComponentsEquipmentComponents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateEquipmentGroups",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateEquipmentGroups_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateEquipmentGroups",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateEquipmentGroups",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/CreateEquipmentGroups')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateEquipmentGroupsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateEquipmentGroupsEquipmentComponents",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateEquipmentGroupsEquipmentComponents_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateEquipmentGroupsEquipmentComponents",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateEquipmentGroupsEquipmentComponents",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroupsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/CreateEquipmentGroupsEquipmentComponents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateSubActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateSubActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateSubActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateSubActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateSubActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateSubActionFamiliesAgingFamiliesApplication')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesApplication",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateSubActionFamiliesAgingFamiliesApplication_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateSubActionFamiliesAgingFamiliesApplication",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateSubActionFamiliesAgingFamiliesApplication",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamiliesAgingFamiliesApplication')]",
				"[concat(variables('factoryId'), '/pipelines/CreateSubActionFamiliesAgingFamiliesApplication')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateSubActionFamiliesAgingFamiliesReplacement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesReplacement",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateSubActionFamiliesAgingFamiliesReplacement_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateSubActionFamiliesAgingFamiliesReplacement",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateSubActionFamiliesAgingFamiliesReplacement",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamiliesAgingFamiliesReplacement')]",
				"[concat(variables('factoryId'), '/pipelines/CreateSubActionFamiliesAgingFamiliesReplacement')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateSustainmentActions",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateSustainmentActions_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateSustainmentActions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateSustainmentActions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActions')]",
				"[concat(variables('factoryId'), '/pipelines/CreateSustainmentActions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateSustainmentActionsActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateSustainmentActionsActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateSustainmentActionsActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateSustainmentActionsActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateSustainmentActionsActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActionsActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateSustainmentActionsActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateSustainmentActionsEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateSustainmentActionsEquipmentGroups",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateSustainmentActionsEquipmentGroups_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateSustainmentActionsEquipmentGroups",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateSustainmentActionsEquipmentGroups",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActionsEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/CreateSustainmentActionsEquipmentGroups')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateTeams')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateTeams",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateTeams_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateTeams",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateTeams",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTeams')]",
				"[concat(variables('factoryId'), '/pipelines/CreateTeams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateTechnicalPolicies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateTechnicalPolicies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateTechnicalPolicies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateTechnicalPolicies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateTechnicalPolicies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateTechnicalPoliciesCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesCriteria",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateTechnicalPoliciesCriteria_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateTechnicalPoliciesCriteria",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateTechnicalPoliciesCriteria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/CreateTechnicalPoliciesCriteria')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateTechnicalPoliciesMainActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesMainActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateTechnicalPoliciesMainActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateTechnicalPoliciesMainActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateTechnicalPoliciesMainActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesMainActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateTechnicalPoliciesMainActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalCreateTechnicalPoliciesSecondaryActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesSecondaryActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "CreateTechnicalPoliciesSecondaryActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteCreateTechnicalPoliciesSecondaryActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CreateTechnicalPoliciesSecondaryActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesSecondaryActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/CreateTechnicalPoliciesSecondaryActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteActionFamiliesActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteActionFamiliesActionTasks",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteActionFamiliesActionTasks_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteActionFamiliesActionTasks",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteActionFamiliesActionTasks",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamiliesActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteActionFamiliesActionTasks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteActionFamiliesSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteActionFamiliesSubActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteActionFamiliesSubActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteActionFamiliesSubActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteActionFamiliesSubActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamiliesSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteActionFamiliesSubActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteActionTasks",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteActionTasks_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteActionTasks",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteActionTasks",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteActionTasks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteAgingFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteAgingFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteAgingFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteAgingFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteAgingFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteBudgets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteBudgets",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteBudgets_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteBudgets",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteBudgets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteBudgets')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteBudgets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteCriteria",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteCriteria_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteCriteria",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteCriteria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteCriteria')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteEquipmentComponents",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteEquipmentComponents_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteEquipmentComponents",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteEquipmentComponents",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteEquipmentComponents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteEquipmentComponentsAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteEquipmentComponentsAgingFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteEquipmentComponentsAgingFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteEquipmentComponentsAgingFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteEquipmentComponentsAgingFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponentsAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteEquipmentComponentsAgingFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteEquipmentComponentsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteEquipmentComponentsEquipmentComponents",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteEquipmentComponentsEquipmentComponents_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteEquipmentComponentsEquipmentComponents",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteEquipmentComponentsEquipmentComponents",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponentsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteEquipmentComponentsEquipmentComponents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteEquipmentGroups",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteEquipmentGroups_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteEquipmentGroups",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteEquipmentGroups",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteEquipmentGroups')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteEquipmentGroupsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteEquipmentGroupsEquipmentComponents",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteEquipmentGroupsEquipmentComponents_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteEquipmentGroupsEquipmentComponents",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteEquipmentGroupsEquipmentComponents",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentGroupsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteEquipmentGroupsEquipmentComponents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteSubActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteSubActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteSubActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteSubActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteSubActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteSubActionFamiliesAgingFamiliesApplication')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesApplication",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteSubActionFamiliesAgingFamiliesApplication_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteSubActionFamiliesAgingFamiliesApplication",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteSubActionFamiliesAgingFamiliesApplication",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamiliesAgingFamiliesApplication')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteSubActionFamiliesAgingFamiliesApplication')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteSubActionFamiliesAgingFamiliesReplacement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesReplacement",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteSubActionFamiliesAgingFamiliesReplacement_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteSubActionFamiliesAgingFamiliesReplacement",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteSubActionFamiliesAgingFamiliesReplacement",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamiliesAgingFamiliesReplacement')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteSubActionFamiliesAgingFamiliesReplacement')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteSustainmentActions",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteSustainmentActions_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteSustainmentActions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteSustainmentActions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActions')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteSustainmentActions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteSustainmentActionsActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteSustainmentActionsActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteSustainmentActionsActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteSustainmentActionsActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteSustainmentActionsActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActionsActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteSustainmentActionsActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteSustainmentActionsEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteSustainmentActionsEquipmentGroups",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteSustainmentActionsEquipmentGroups_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteSustainmentActionsEquipmentGroups",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteSustainmentActionsEquipmentGroups",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActionsEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteSustainmentActionsEquipmentGroups')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteTeams')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteTeams",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteTeams_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteTeams",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteTeams",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTeams')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteTeams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteTechnicalPolicies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteTechnicalPolicies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteTechnicalPolicies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteTechnicalPolicies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteTechnicalPolicies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteTechnicalPoliciesCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesCriteria",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteTechnicalPoliciesCriteria_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteTechnicalPoliciesCriteria",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteTechnicalPoliciesCriteria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteTechnicalPoliciesCriteria')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteTechnicalPoliciesMainActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesMainActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteTechnicalPoliciesMainActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteTechnicalPoliciesMainActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteTechnicalPoliciesMainActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesMainActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteTechnicalPoliciesMainActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalDeleteTechnicalPoliciesSecondaryActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesSecondaryActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeleteTechnicalPoliciesSecondaryActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteDeleteTechnicalPoliciesSecondaryActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DeleteTechnicalPoliciesSecondaryActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesSecondaryActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/DeleteTechnicalPoliciesSecondaryActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateActionTasks",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateActionTasks_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateActionTasks",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateActionTasks",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateActionTasks')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateActionTasks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateAgingFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateAgingFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateAgingFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateAgingFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateAgingFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateAgingFamily",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateAgingFamily_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateAgingFamily",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateAgingFamily",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateAgingFamily')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateBudgets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateBudgets",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateBudgets_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateBudgets",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateBudgets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateBudgets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateCriteria",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateCriteria_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateCriteria",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateCriteria",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateCriteria')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateCriteria')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateEquipmentComponents",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateEquipmentComponents_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateEquipmentComponents",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateEquipmentComponents",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentComponents')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateEquipmentComponents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateEquipmentGroups",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateEquipmentGroups_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateEquipmentGroups",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateEquipmentGroups",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentGroups')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateEquipmentGroups')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateSubActionFamilies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateSubActionFamilies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateSubActionFamilies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateSubActionFamilies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateSubActionFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateSubActionFamilies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateSustainmentActions",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateSustainmentActions_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateSustainmentActions",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateSustainmentActions",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateSustainmentActions')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateSustainmentActions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateTeams')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateTeams",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateTeams_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateTeams",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateTeams",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateTeams')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateTeams')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ConditionalUpdateTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CheckFileExistence",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UpdateTechnicalPolicies",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "UpdateTechnicalPolicies_IfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFileExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFileExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "ExecuteUpdateTechnicalPolicies",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "UpdateTechnicalPolicies",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/pipelines/UpdateTechnicalPolicies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateActionFamilies": {},
									"ActionFamiliesStatus": {},
									"CreateActionFamiliesMapCostsByRatingLevel": {},
									"CreateActionFamiliesMapBudgetCategories": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteCostsAreCapitalChargesWrongTypeRows": {},
									"WriteMissingActionFamilyRowsCostsByRatingLevel": {},
									"WriteMissingRatingLevelRowsCostsByRatingLevel": {},
									"WriteMissingUnitPropertyRowsCostsByRatingLevel": {},
									"WriteMissingValueRowsCostsByRatingLevel": {},
									"WriteNotExistingActionFamilyRowsCostsByRatingLevel": {},
									"WriteUnitPropertyCostsByRatingLevelInvalidRangeRows": {},
									"WriteSupplierCostWrongTypeRows": {},
									"WriteDurationWrongTypeRows": {},
									"WriteIsLocalActionWrongTypeRows": {},
									"WriteNeedsOutageWrongTypeRows": {},
									"WriteMissingActionFamilyRowsBudgetCategories": {},
									"WriteMissingIndexRowsBudgetCategories": {},
									"WriteMissingValueRowsBudgetCategories": {},
									"WriteNotExistingActionFamilyRowsBudgetCategories": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-110-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-110-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-110-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-110-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-111-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-111-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-112-CostsAreCapitalChargesWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-112-CostsAreCapitalChargesWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-111-MissColumnActionFamilyCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-111-MissColumnActionFamilyCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-111-MissColumnRatingLevelCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-111-MissColumnRatingLevelCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-111-MissColumnUnitPropertyCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-111-MissColumnUnitPropertyCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-111-MissColumnValueCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-111-MissColumnValueCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-110-NotExistingActionFamilyCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-110-NotExistingActionFamilyCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-113-UnitPropertyCostsByRatingLevelInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-113-UnitPropertyCostsByRatingLevelInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-112-SupplierCostWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-112-SupplierCostWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-112-DurationWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-112-DurationWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-112-IsLocalActionWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-112-IsLocalActionWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-112-NeedsOutageWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-112-NeedsOutageWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-111-MissColumnActionFamilyBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-111-MissColumnActionFamilyBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-111-MissColumnIndexBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-111-MissColumnIndexBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-111-MissColumnValueBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-111-MissColumnValueBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-110-NotExistingActionFamilyBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-110-NotExistingActionFamilyBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-110-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-110-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-111-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-112-CostsAreCapitalChargesWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-111-MissColumnActionFamilyCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-111-MissColumnRatingLevelCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-111-MissColumnUnitPropertyCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-111-MissColumnValueCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-110-NotExistingActionFamilyCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-113-UnitPropertyCostsByRatingLevelInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-112-SupplierCostWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-112-DurationWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-112-IsLocalActionWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-112-NeedsOutageWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-111-MissColumnActionFamilyBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-111-MissColumnIndexBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-111-MissColumnValueBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-110-NotExistingActionFamilyBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateActionFamilies": {},
									"ReadMapCostsByRatingLevel": {},
									"ReadMapBudgetCategories": {},
									"ReadTempStatusActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/2-110-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/2-110-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/2-111-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/2-112-CostsAreCapitalChargesWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-111-MissColumnActionFamilyCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-111-MissColumnRatingLevelCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-111-MissColumnUnitPropertyCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-111-MissColumnValueCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-110-NotExistingActionFamilyCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-113-UnitPropertyCostsByRatingLevelInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/2-112-SupplierCostWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-112-DurationWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-112-IsLocalActionWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-112-NeedsOutageWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-111-MissColumnActionFamilyBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-111-MissColumnIndexBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-111-MissColumnValueBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-110-NotExistingActionFamilyBudgetCategories')]",
				"[concat(variables('factoryId'), '/dataflows/CreateActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamiliesActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateActionFamiliesActionTasks_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateActionFamiliesActionTasks_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateActionFamiliesActionTasks": {},
									"ActionFamiliesStatus": {},
									"ActionTasksStatus": {},
									"ActionFamiliesActionTasksStatus": {},
									"WriteNotExistingActionFamilyRows": {},
									"WriteNotExistingActionTaskRows": {},
									"WriteMissingActionFamilyRows": {},
									"WriteMissingActionTaskRows": {},
									"WriteAlreadyExistingActionFamilyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "12-210-NotExistingActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-210-NotExistingActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-210-NotExistingActionTask",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-210-NotExistingActionTask",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-211-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-211-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-211-MissColumnActionTask",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-211-MissColumnActionTask",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-210-AlreadyExistActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-210-AlreadyExistActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateActionFamiliesActionTasks_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "12-210-NotExistingActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-210-NotExistingActionTask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-211-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-211-MissColumnActionTask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-210-AlreadyExistActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateActionFamiliesActionTasks_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateActionFamiliesActionTasks": {},
									"ReadTempStatusActionFamiliesActionTasksStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateActionFamiliesActionTasks_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/12-ActivitiesManagementHumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/12-210-NotExistingActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/12-210-NotExistingActionTask')]",
				"[concat(variables('factoryId'), '/pipelines/12-211-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/12-211-MissColumnActionTask')]",
				"[concat(variables('factoryId'), '/pipelines/12-210-AlreadyExistActionFamily')]",
				"[concat(variables('factoryId'), '/dataflows/CreateActionFamiliesActionTasks_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamiliesSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateActionFamiliesSubActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateActionFamiliesSubActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateActionFamiliesSubActionFamilies": {},
									"ActionFamiliesStatus": {},
									"SubActionFamiliesStatus": {},
									"ActionFamiliesSubActionFamiliesStatus": {},
									"WriteNotExistingActionFamilyRows": {},
									"WriteNotExistingSubActionFamilyRows": {},
									"WriteMissingActionFamilyRows": {},
									"WriteMissingSubActionFamilyRows": {},
									"WriteAlreadyExistingActionFamilyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-210-NotExistingActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-210-NotExistingActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-210-NotExistingSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-210-NotExistingSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-211-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-211-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-211-MissColumnSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-211-MissColumnSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-210-AlreadyExistActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionFamiliesSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-210-AlreadyExistActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateActionFamiliesSubActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-210-NotExistingActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-210-NotExistingSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-211-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-211-MissColumnSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-210-AlreadyExistActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateActionFamiliesSubActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateActionFamiliesSubActionFamilies": {},
									"ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateActionFamiliesSubActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/11-210-NotExistingActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-210-NotExistingSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-211-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-211-MissColumnSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-210-AlreadyExistActionFamily')]",
				"[concat(variables('factoryId'), '/dataflows/CreateActionFamiliesSubActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateActionTasks_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateActionTasks_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateActionTasks": {},
									"ActionTasksStatus": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteActionDurationPercentageWrongTypeRows": {},
									"WriteActionDurationPercentageInvalidRangeRows": {},
									"WriteWorkforceFTEWrongTypeRows": {},
									"WriteWorkforceFTEInvalidRangeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "12-110-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-110-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-110-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-110-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-111-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-111-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-112-ActionDurationPercentageWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-112-ActionDurationPercentageWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-113-ActionDurationPercentageInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-113-ActionDurationPercentageInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-112-WorkforceFTEWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-112-WorkforceFTEWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-113-WorkforceFTEInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-113-WorkforceFTEInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateActionTasks_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "12-110-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-110-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-111-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-112-ActionDurationPercentageWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-113-ActionDurationPercentageInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-112-WorkforceFTEWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-113-WorkforceFTEInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateActionTasks_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateActionTasks": {},
									"ReadTempStatusActionTasksStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateActionTasksStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateActionTasks_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/12-ActivitiesManagementHumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/12-110-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/12-110-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/12-111-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/12-112-ActionDurationPercentageWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/12-113-ActionDurationPercentageInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/12-112-WorkforceFTEWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/12-113-WorkforceFTEInvalidRange')]",
				"[concat(variables('factoryId'), '/dataflows/CreateActionTasks_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateAgingFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateAgingFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateAgingFamilies": {},
									"AgingFamiliesStatus": {},
									"CreateAgingFamiliesMapFamilyPairHillParameters": {},
									"CreateAgingFamiliesMapMapReferenceCostOfFailure": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteAgingMethodologyInvalidRangeRows": {},
									"WriteMinimalAgeWrongTypeRows": {},
									"WriteMaximalAgeWrongTypeRows": {},
									"WriteFailureRateAtMinimalAgeWrongTypeRows": {},
									"WriteFailureRateAtMaximalAgeWrongTypeRows": {},
									"WriteExternalFailureRatePerYearWrongTypeRows": {},
									"WriteExternalFailureRatePerYearInvalidRangeRows": {},
									"WriteIsQuantityDiscreteWrongTypeRows": {},
									"WriteGFlagWrongTypeRows": {},
									"WriteAgingFailureDelayWrongTypeRows": {},
									"WriteMissingAgingFamilyRowsFamilyPairHillParameters": {},
									"WriteMissingAgentAgingFamilyRowsFamilyPairHillParameters": {},
									"WriteMissingHillParametersRowsFamilyPairHillParameters": {},
									"WriteMissingValueRowsFamilyPairHillParameters": {},
									"WriteNotExistingAgingFamilyRowsFamilyPairHillParameters": {},
									"WriteHillParametersFamilyPairHillParametersInvalidRangeRows": {},
									"WriteAmplitudeHillWrongTypeRows": {},
									"WriteOffsetHillWrongTypeRows": {},
									"WriteSlopeHillWrongTypeRows": {},
									"WriteIsFailureTransmittedWrongTypeRows": {},
									"WriteIsCouplingActiveWrongTypeRows": {},
									"WriteIsAgingAfterDeathWrongTypeRows": {},
									"WriteMaintenanceIfOutOfOrderWrongTypeRows": {},
									"WriteShapeWrongTypeRows": {},
									"WriteScaleWrongTypeRows": {},
									"WriteExpectedLifeWrongTypeRows": {},
									"WriteFinancialCostOfFailureWrongTypeRows": {},
									"WriteEnvironmentalCostOfFailureWrongTypeRows": {},
									"WriteNetworkCostOfFailureWrongTypeRows": {},
									"WriteMissingAgingFamilyRowsMapReferenceCostOfFailure": {},
									"WriteMissingHealthIndexRowsMapReferenceCostOfFailure": {},
									"WriteMissingValueRowsMapReferenceCostOfFailure": {},
									"WriteNotExistingAgingFamilyRowsMapReferenceCostOfFailure": {},
									"WriteMapReferenceCostOfFailureValueWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-120-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-120-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-120-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-120-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-121-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-121-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-123-AgingMethodologyInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-123-AgingMethodologyInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-MinimalAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-MinimalAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-MaximalAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-MaximalAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-FailureRateAtMinimalAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-FailureRateAtMinimalAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-FailureRateAtMaximalAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-FailureRateAtMaximalAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-ExternalFailureRatePerYearWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-ExternalFailureRatePerYearWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-123-ExternalFailureRatePerYearInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-123-ExternalFailureRatePerYearInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-IsQuantityDiscreteWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-IsQuantityDiscreteWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-GFlagWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-GFlagWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-AgingFailureDelayWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-AgingFailureDelayWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-121-MissColumnAgingFamilyFamilyPairHillParameters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-121-MissColumnAgingFamilyFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-121-MissColumnAgentAgingFamilyFamilyPairHillParameter",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-121-MissColumnAgentAgingFamilyFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-121-MissColumnHillParametersFamilyPairHillParameters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-121-MissColumnHillParametersFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-121-MissColumnValueFamilyPairHillParameters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-121-MissColumnValueFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-120-NotExistingAgingFamilyFamilyPairHillParameters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-120-NotExistingAgingFamilyFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-123-HillParametersFamilyPairHillParametersInvalidRang",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-123-HillParametersFamilyPairHillParametersInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-AmplitudeHillWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-AmplitudeHillWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-OffsetHillWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-OffsetHillWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-SlopeHillWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-SlopeHillWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-IsFailureTransmittedWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-IsFailureTransmittedWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-IsCouplingActiveWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-IsCouplingActiveWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-IsAgingAfterDeathWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-IsAgingAfterDeathWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-MaintenanceIfOutOfOrderWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-MaintenanceIfOutOfOrderWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-ShapeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-ShapeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-ScaleWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-ScaleWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-ExpectedLifeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-ExpectedLifeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-FinancialCostOfFailureWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-FinancialCostOfFailureWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-EnvironmentalCostOfFailureWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-EnvironmentalCostOfFailureWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-NetworkCostOfFailureWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-NetworkCostOfFailureWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-121-MissColumnAgingFamilyMapReferenceCostOfFailure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-121-MissColumnAgingFamilyMapReferenceCostOfFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-121-MissColumnHealthIndexMapReferenceCostOfFailure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-121-MissColumnHealthIndexMapReferenceCostOfFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-121-MissColumnValueMapReferenceCostOfFailure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-121-MissColumnValueMapReferenceCostOfFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-120-NotExistingAgingFamilyMapReferenceCostOfFailure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-120-NotExistingAgingFamilyMapReferenceCostOfFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-122-MapReferenceCostOfFailureValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-122-MapReferenceCostOfFailureValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateAgingFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-120-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-120-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-121-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-123-AgingMethodologyInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-MinimalAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-MaximalAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-FailureRateAtMinimalAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-FailureRateAtMaximalAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-ExternalFailureRatePerYearWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-123-ExternalFailureRatePerYearInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-IsQuantityDiscreteWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-GFlagWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-AgingFailureDelayWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-121-MissColumnAgingFamilyFamilyPairHillParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-121-MissColumnAgentAgingFamilyFamilyPairHillParameter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-121-MissColumnHillParametersFamilyPairHillParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-121-MissColumnValueFamilyPairHillParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-120-NotExistingAgingFamilyFamilyPairHillParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-123-HillParametersFamilyPairHillParametersInvalidRang",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-AmplitudeHillWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-OffsetHillWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-SlopeHillWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-IsFailureTransmittedWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-IsCouplingActiveWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-IsAgingAfterDeathWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-MaintenanceIfOutOfOrderWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-ShapeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-ScaleWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-ExpectedLifeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-FinancialCostOfFailureWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-EnvironmentalCostOfFailureWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-NetworkCostOfFailureWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-121-MissColumnAgingFamilyMapReferenceCostOfFailure",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-121-MissColumnHealthIndexMapReferenceCostOfFailure",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-121-MissColumnValueMapReferenceCostOfFailure",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-120-NotExistingAgingFamilyMapReferenceCostOfFailure",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-122-MapReferenceCostOfFailureValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateAgingFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateAgingFamilies": {},
									"ReadMapFamilyPairHillParameters": {},
									"ReadMapMapReferenceCostOfFailure": {},
									"ReadTempStatusAgingFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateAgingFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateAgingFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/1-120-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/1-120-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/1-121-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/1-123-AgingMethodologyInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-MinimalAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-MaximalAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-FailureRateAtMinimalAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-FailureRateAtMaximalAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-ExternalFailureRatePerYearWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-123-ExternalFailureRatePerYearInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-IsQuantityDiscreteWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-GFlagWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-AgingFailureDelayWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-121-MissColumnAgingFamilyFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-121-MissColumnAgentAgingFamilyFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-121-MissColumnHillParametersFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-121-MissColumnValueFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-120-NotExistingAgingFamilyFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-123-HillParametersFamilyPairHillParametersInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-AmplitudeHillWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-OffsetHillWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-SlopeHillWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-IsFailureTransmittedWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-IsCouplingActiveWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-IsAgingAfterDeathWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-MaintenanceIfOutOfOrderWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-ShapeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-ScaleWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-ExpectedLifeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-FinancialCostOfFailureWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-EnvironmentalCostOfFailureWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-NetworkCostOfFailureWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-121-MissColumnAgingFamilyMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/pipelines/1-121-MissColumnHealthIndexMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/pipelines/1-121-MissColumnValueMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/pipelines/1-120-NotExistingAgingFamilyMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/pipelines/1-122-MapReferenceCostOfFailureValueWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/CreateAgingFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateBudgets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateBudgets_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateBudgets_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateBudgets": {},
									"BudgetsStatus": {},
									"CreateBudgetsMapCatKeyLabels": {},
									"CreateBudgetsMapAvailableQuantityByYear": {},
									"CreateBudgetsMapMinimalQuantityLevelByYear": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteCostTypeInvalidRangeRows": {},
									"WriteConstrainedWrongTypeRows": {},
									"WriteMissingBudgetRowsCatKeyLabels": {},
									"WriteMissingIndexRowsCatKeyLabels": {},
									"WriteMissingValueRowsCatKeyLabels": {},
									"WriteNotExistingBudgetRowsCatKeyLabels": {},
									"WriteMissingBudgetRowsAvailableQuantityByYear": {},
									"WriteMissingYearRowsAvailableQuantityByYear": {},
									"WriteMissingValueRowsAvailableQuantityByYear": {},
									"WriteNotExistingBudgetRowsAvailableQuantityByYear": {},
									"WriteAvailableQuantityByYearValueWrongTypeRows": {},
									"WriteMissingBudgetRowsMinimalQuantityLevelByYear": {},
									"WriteMissingYearRowsMinimalQuantityLevelByYear": {},
									"WriteMissingValueRowsMinimalQuantityLevelByYear": {},
									"WriteNotExistingBudgetRowsMinimalQuantityLevelByYear": {},
									"WriteMinimalQuantityLevelByYearValueWrongTypeRows": {},
									"WriteCostRateWrongTypeRows": {},
									"WriteRankWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "3-Budgets-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "3-110-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-110-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-110-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-110-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-113-CostTypeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-113-CostTypeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-112-ConstrainedWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-112-ConstrainedWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnBudgetCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnBudgetCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnIndexCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnIndexCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnValueCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnValueCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-110-NotExistingBudgetCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-110-NotExistingBudgetCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnBudgetAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnBudgetAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnYearAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnYearAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnValueAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnValueAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-110-NotExistingBudgetAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-110-NotExistingBudgetAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-112-AvailableQuantityByYearValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-112-AvailableQuantityByYearValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnBudgetMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnBudgetMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnYearMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnYearMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-111-MissColumnValueMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-111-MissColumnValueMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-110-NotExistingBudgetMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-110-NotExistingBudgetMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-112-MinimalQuantityLevelByYearValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-112-MinimalQuantityLevelByYearValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-112-CostRateWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-112-CostRateWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-112-RankWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-112-RankWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateBudgets_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "3-110-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-110-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-113-CostTypeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-112-ConstrainedWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnBudgetCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnIndexCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnValueCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-110-NotExistingBudgetCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnBudgetAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnYearAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnValueAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-110-NotExistingBudgetAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-112-AvailableQuantityByYearValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnBudgetMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnYearMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-111-MissColumnValueMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-110-NotExistingBudgetMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-112-MinimalQuantityLevelByYearValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-112-CostRateWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-112-RankWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateBudgets_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateBudgets": {},
									"ReadMapCatKeyLabels": {},
									"ReadMapAvailableQuantityByYear": {},
									"ReadMapMinimalQuantityLevelByYear": {},
									"ReadTempStatusBudgetsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateBudgetsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "3-Budgets-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateBudgets_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/3-Budgets-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/3-110-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/3-110-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/3-113-CostTypeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/3-112-ConstrainedWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnBudgetCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnIndexCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnValueCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/3-110-NotExistingBudgetCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnBudgetAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnYearAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnValueAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-110-NotExistingBudgetAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-112-AvailableQuantityByYearValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnBudgetMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnYearMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-111-MissColumnValueMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-110-NotExistingBudgetMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-112-MinimalQuantityLevelByYearValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/3-112-CostRateWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/3-112-RankWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/CreateBudgets_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateCriteria_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateCriteria_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateCriteria": {},
									"CriteriaStatus": {},
									"CreateCriteriaMapTargetedAgingFamilies": {},
									"CreateCriteriaMapValueAsString": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteMissingCriterionRowsTargetedAgingFamilies": {},
									"WriteMissingIndexRowsTargetedAgingFamilies": {},
									"WriteMissingValueRowsTargetedAgingFamilies": {},
									"WriteNotExistingCriterionRowsTargetedAgingFamilies": {},
									"WriteOperatorInvalidRangeRows": {},
									"WriteThresholdWrongTypeRows": {},
									"WriteValueWrongTypeRows": {},
									"WriteMissingCriterionRowsValueAsString": {},
									"WriteMissingIndexRowsValueAsString": {},
									"WriteMissingValueRowsValueAsString": {},
									"WriteNotExistingCriterionRowsValueAsString": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-120-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-120-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-120-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-120-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-121-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-121-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-121-MissColumnCriterionTargetedAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-121-MissColumnCriterionTargetedAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-121-MissColumnIndexTargetedAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-121-MissColumnIndexTargetedAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-121-MissColumnValueTargetedAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-121-MissColumnValueTargetedAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-120-NotExistingCriterionTargetedAgingFamilies",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-120-NotExistingCriterionTargetedAgingFamilies",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-123-OperatorInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-123-OperatorInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-122-ThresholdWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-122-ThresholdWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-122-ValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-122-ValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-121-MissColumnCriterionValueAsString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-121-MissColumnCriterionValueAsString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-121-MissColumnIndexValueAsString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-121-MissColumnIndexValueAsString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-121-MissColumnValueValueAsString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-121-MissColumnValueValueAsString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-120-NotExistingCriterionValueAsString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-120-NotExistingCriterionValueAsString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateCriteria_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-120-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-120-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-121-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-121-MissColumnCriterionTargetedAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-121-MissColumnIndexTargetedAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-121-MissColumnValueTargetedAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-120-NotExistingCriterionTargetedAgingFamilies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-123-OperatorInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-122-ThresholdWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-122-ValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-121-MissColumnCriterionValueAsString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-121-MissColumnIndexValueAsString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-121-MissColumnValueValueAsString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-120-NotExistingCriterionValueAsString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateCriteria_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateCriteria": {},
									"ReadMapTargetedAgingFamilies": {},
									"ReadMapValueAsString": {},
									"ReadTempStatusCriteriaStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateCriteriaStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateCriteria_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/2-120-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/2-120-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/2-121-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/2-121-MissColumnCriterionTargetedAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/2-121-MissColumnIndexTargetedAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/2-121-MissColumnValueTargetedAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/2-120-NotExistingCriterionTargetedAgingFamilies')]",
				"[concat(variables('factoryId'), '/pipelines/2-123-OperatorInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/2-122-ThresholdWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-122-ValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-121-MissColumnCriterionValueAsString')]",
				"[concat(variables('factoryId'), '/pipelines/2-121-MissColumnIndexValueAsString')]",
				"[concat(variables('factoryId'), '/pipelines/2-121-MissColumnValueValueAsString')]",
				"[concat(variables('factoryId'), '/pipelines/2-120-NotExistingCriterionValueAsString')]",
				"[concat(variables('factoryId'), '/dataflows/CreateCriteria_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateEquipmentComponents_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentComponents_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentComponents": {},
									"EquipmentComponentsStatus": {},
									"CreateEquipmentComponentsMapCustomDataString": {},
									"CreateEquipmentComponentsMapCustomDataNumber": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteInstallationYearWrongTypeRows": {},
									"WriteEnvironmentAgingRateWrongTypeRows": {},
									"WriteQuantityWrongTypeRows": {},
									"WriteHealthScoreWrongTypeRows": {},
									"WriteHealthScoreInvalidRangeRows": {},
									"WriteFinancialConsequencesFactorWrongTypeRows": {},
									"WriteEnvironmentalConsequencesFactorWrongTypeRows": {},
									"WriteNetworkConsequencesFactorWrongTypeRows": {},
									"WriteKnownApparentAgeWrongTypeRows": {},
									"WriteKnownApparentAgeInvalidRangeRows": {},
									"WriteCriticalityLevelFailureWrongTypeRows": {},
									"WriteCriticalityLevelNetworkConstraintWrongTypeRows": {},
									"WriteMissingEquipmentComponentRowsCustomDataString": {},
									"WriteMissingCustomDataRowsCustomDataString": {},
									"WriteMissingValueRowsCustomDataString": {},
									"WriteNotExistingEquipmentComponentRowsCustomDataString": {},
									"WriteMissingEquipmentComponentRowsCustomDataNumber": {},
									"WriteMissingCustomDataRowsCustomDataNumber": {},
									"WriteMissingValueRowsCustomDataNumber": {},
									"WriteNotExistingEquipmentComponentRowsCustomDataNumber": {},
									"WriteCustomDataNumberValueWrongTypeRows": {},
									"WriteSAIDI15minWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-110-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-110-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-110-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-110-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-111-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-111-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-InstallationYearWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-InstallationYearWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-EnvironmentAgingRateWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-EnvironmentAgingRateWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-QuantityWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-QuantityWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-HealthScoreWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-HealthScoreWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-113-HealthScoreInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-113-HealthScoreInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-FinancialConsequencesFactorWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-FinancialConsequencesFactorWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-EnvironmentalConsequencesFactorWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-EnvironmentalConsequencesFactorWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-NetworkConsequencesFactorWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-NetworkConsequencesFactorWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-KnownApparentAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-KnownApparentAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-113-KnownApparentAgeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-113-KnownApparentAgeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-CriticalityLevelFailureWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-CriticalityLevelFailureWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-CriticalityLevelNetworkConstraintWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-CriticalityLevelNetworkConstraintWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-111-MissColumnEquipmentComponentCustomDataString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-111-MissColumnEquipmentComponentCustomDataString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-111-MissColumnCustomDataCustomDataString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-111-MissColumnCustomDataCustomDataString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-111-MissColumnValueCustomDataString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-111-MissColumnValueCustomDataString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-110-NotExistingEquipmentComponentCustomDataString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-110-NotExistingEquipmentComponentCustomDataString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-111-MissColumnEquipmentComponentCustomDataNumber",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-111-MissColumnEquipmentComponentCustomDataNumber",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-111-MissColumnCustomDataCustomDataNumber",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-111-MissColumnCustomDataCustomDataNumber",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-111-MissColumnValueCustomDataNumber",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-111-MissColumnValueCustomDataNumber",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-110-NotExistingEquipmentComponentCustomDataNumber",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-110-NotExistingEquipmentComponentCustomDataNumber",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-CustomDataNumberValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-CustomDataNumberValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-112-SAIDI15minWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-112-SAIDI15minWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateEquipmentComponents_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-110-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-110-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-111-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-InstallationYearWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-EnvironmentAgingRateWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-QuantityWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-HealthScoreWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-113-HealthScoreInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-FinancialConsequencesFactorWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-EnvironmentalConsequencesFactorWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-NetworkConsequencesFactorWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-KnownApparentAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-113-KnownApparentAgeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-CriticalityLevelFailureWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-CriticalityLevelNetworkConstraintWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-111-MissColumnEquipmentComponentCustomDataString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-111-MissColumnCustomDataCustomDataString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-111-MissColumnValueCustomDataString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-110-NotExistingEquipmentComponentCustomDataString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-111-MissColumnEquipmentComponentCustomDataNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-111-MissColumnCustomDataCustomDataNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-111-MissColumnValueCustomDataNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-110-NotExistingEquipmentComponentCustomDataNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-CustomDataNumberValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-112-SAIDI15minWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentComponents_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentComponents": {},
									"ReadMapCustomDataString": {},
									"ReadMapCustomDataNumber": {},
									"ReadTempStatusEquipmentComponentsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentComponentsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentComponents_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/1-110-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/1-110-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/1-111-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-InstallationYearWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-EnvironmentAgingRateWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-QuantityWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-HealthScoreWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-113-HealthScoreInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-FinancialConsequencesFactorWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-EnvironmentalConsequencesFactorWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-NetworkConsequencesFactorWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-KnownApparentAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-113-KnownApparentAgeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-CriticalityLevelFailureWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-CriticalityLevelNetworkConstraintWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-111-MissColumnEquipmentComponentCustomDataString')]",
				"[concat(variables('factoryId'), '/pipelines/1-111-MissColumnCustomDataCustomDataString')]",
				"[concat(variables('factoryId'), '/pipelines/1-111-MissColumnValueCustomDataString')]",
				"[concat(variables('factoryId'), '/pipelines/1-110-NotExistingEquipmentComponentCustomDataString')]",
				"[concat(variables('factoryId'), '/pipelines/1-111-MissColumnEquipmentComponentCustomDataNumber')]",
				"[concat(variables('factoryId'), '/pipelines/1-111-MissColumnCustomDataCustomDataNumber')]",
				"[concat(variables('factoryId'), '/pipelines/1-111-MissColumnValueCustomDataNumber')]",
				"[concat(variables('factoryId'), '/pipelines/1-110-NotExistingEquipmentComponentCustomDataNumber')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-CustomDataNumberValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-112-SAIDI15minWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentComponents_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponentsAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateEquipmentComponentsAgingFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentComponentsAgingFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentComponentsAgingFamilies": {},
									"EquipmentComponentsStatus": {},
									"AgingFamiliesStatus": {},
									"EquipmentComponentsAgingFamiliesStatus": {},
									"WriteNotExistingEquipmentComponentRows": {},
									"WriteNotExistingAgingFamilyRows": {},
									"WriteMissingEquipmentComponentRows": {},
									"WriteMissingAgingFamilyRows": {},
									"WriteAlreadyExistingEquipmentComponentRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-210-NotExistingEquipmentComponent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-210-NotExistingEquipmentComponent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-210-NotExistingAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-210-NotExistingAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-211-MissColumnEquipmentComponent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-211-MissColumnEquipmentComponent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-211-MissColumnAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-211-MissColumnAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-210-AlreadyExistEquipmentComponent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-210-AlreadyExistEquipmentComponent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateEquipmentComponentsAgingFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-210-NotExistingEquipmentComponent",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-210-NotExistingAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-211-MissColumnEquipmentComponent",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-211-MissColumnAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-210-AlreadyExistEquipmentComponent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentComponentsAgingFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentComponentsAgingFamilies": {},
									"ReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentComponentsAgingFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentComponentsAgingFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/1-210-NotExistingEquipmentComponent')]",
				"[concat(variables('factoryId'), '/pipelines/1-210-NotExistingAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/1-211-MissColumnEquipmentComponent')]",
				"[concat(variables('factoryId'), '/pipelines/1-211-MissColumnAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/1-210-AlreadyExistEquipmentComponent')]",
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentComponentsAgingFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponentsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateEquipmentComponentsEquipmentComponents_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentComponentsEquipmentComponents_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentComponentsEquipmentComponents": {},
									"EquipmentComponentsStatus": {},
									"EquipmentComponentsEquipmentComponentsStatus": {},
									"WriteNotExistingEquipmentComponentSourceRows": {},
									"WriteNotExistingEquipmentComponentTargetRows": {},
									"WriteMissingEquipmentComponentSourceRows": {},
									"WriteMissingEquipmentComponentTargetRows": {},
									"WriteAlreadyExistingEquipmentComponentSourceRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-220-NotExistingEquipmentComponentSource",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-220-NotExistingEquipmentComponentSource",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-220-NotExistingEquipmentComponentTarget",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-220-NotExistingEquipmentComponentTarget",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-221-MissColumnEquipmentComponentSource",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-221-MissColumnEquipmentComponentSource",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-221-MissColumnEquipmentComponentTarget",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-221-MissColumnEquipmentComponentTarget",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-220-AlreadyExistEquipmentComponentSource",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentComponentsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-220-AlreadyExistEquipmentComponentSource",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateEquipmentComponentsEquipmentComponents_TransformD",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-220-NotExistingEquipmentComponentSource",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-220-NotExistingEquipmentComponentTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-221-MissColumnEquipmentComponentSource",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-221-MissColumnEquipmentComponentTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-220-AlreadyExistEquipmentComponentSource",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentComponentsEquipmentComponents_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentComponentsEquipmentComponents": {},
									"ReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentComponentsEquipmentComponents_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/1-220-NotExistingEquipmentComponentSource')]",
				"[concat(variables('factoryId'), '/pipelines/1-220-NotExistingEquipmentComponentTarget')]",
				"[concat(variables('factoryId'), '/pipelines/1-221-MissColumnEquipmentComponentSource')]",
				"[concat(variables('factoryId'), '/pipelines/1-221-MissColumnEquipmentComponentTarget')]",
				"[concat(variables('factoryId'), '/pipelines/1-220-AlreadyExistEquipmentComponentSource')]",
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentComponentsEquipmentComponents_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateEquipmentGroups_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentGroups_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentGroups": {},
									"EquipmentGroupsStatus": {},
									"CreateEquipmentGroupsMapBudgetCategories": {},
									"CreateEquipmentGroupsMapHRCategories": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteQuantityWrongTypeRows": {},
									"WriteMissingEquipmentGroupRowsBudgetCategories": {},
									"WriteMissingIndexRowsBudgetCategories": {},
									"WriteMissingValueRowsBudgetCategories": {},
									"WriteNotExistingEquipmentGroupRowsBudgetCategories": {},
									"WriteMissingEquipmentGroupRowsHRCategories": {},
									"WriteMissingIndexRowsHRCategories": {},
									"WriteMissingValueRowsHRCategories": {},
									"WriteNotExistingEquipmentGroupRowsHRCategories": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-120-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-120-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-120-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-120-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-121-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-121-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-122-QuantityWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-122-QuantityWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-121-MissColumnEquipmentGroupBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-121-MissColumnEquipmentGroupBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-121-MissColumnIndexBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-121-MissColumnIndexBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-121-MissColumnValueBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-121-MissColumnValueBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-120-NotExistingEquipmentGroupBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-120-NotExistingEquipmentGroupBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-121-MissColumnEquipmentGroupHRCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-121-MissColumnEquipmentGroupHRCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-121-MissColumnIndexHRCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-121-MissColumnIndexHRCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-121-MissColumnValueHRCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-121-MissColumnValueHRCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-120-NotExistingEquipmentGroupHRCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-120-NotExistingEquipmentGroupHRCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateEquipmentGroups_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-120-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-120-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-121-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-122-QuantityWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-121-MissColumnEquipmentGroupBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-121-MissColumnIndexBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-121-MissColumnValueBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-120-NotExistingEquipmentGroupBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-121-MissColumnEquipmentGroupHRCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-121-MissColumnIndexHRCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-121-MissColumnValueHRCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-120-NotExistingEquipmentGroupHRCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentGroups_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentGroups": {},
									"ReadMapBudgetCategories": {},
									"ReadMapHRCategories": {},
									"ReadTempStatusEquipmentGroupsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentGroupsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentGroups_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/11-120-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/11-120-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/11-121-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/11-122-QuantityWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/11-121-MissColumnEquipmentGroupBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-121-MissColumnIndexBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-121-MissColumnValueBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-120-NotExistingEquipmentGroupBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-121-MissColumnEquipmentGroupHRCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-121-MissColumnIndexHRCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-121-MissColumnValueHRCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-120-NotExistingEquipmentGroupHRCategories')]",
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentGroups_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroupsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateEquipmentGroupsEquipmentComponents_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentGroupsEquipmentComponents_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentGroupsEquipmentComponents": {},
									"EquipmentGroupsStatus": {},
									"EquipmentComponentsStatus": {},
									"EquipmentGroupsEquipmentComponentsStatus": {},
									"WriteNotExistingEquipmentGroupRows": {},
									"WriteNotExistingEquipmentComponentRows": {},
									"WriteMissingEquipmentGroupRows": {},
									"WriteMissingEquipmentComponentRows": {},
									"WriteAlreadyExistingEquipmentGroupRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-240-NotExistingEquipmentGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroupsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-240-NotExistingEquipmentGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-240-NotExistingEquipmentComponent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroupsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-240-NotExistingEquipmentComponent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-241-MissColumnEquipmentGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroupsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-241-MissColumnEquipmentGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-241-MissColumnEquipmentComponent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroupsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-241-MissColumnEquipmentComponent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-240-AlreadyExistEquipmentGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateEquipmentGroupsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-240-AlreadyExistEquipmentGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateEquipmentGroupsEquipmentComponents_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-240-NotExistingEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-240-NotExistingEquipmentComponent",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-241-MissColumnEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-241-MissColumnEquipmentComponent",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-240-AlreadyExistEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateEquipmentGroupsEquipmentComponents_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateEquipmentGroupsEquipmentComponents": {},
									"ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentGroupsEquipmentComponents_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/pipelines/11-240-NotExistingEquipmentGroup')]",
				"[concat(variables('factoryId'), '/pipelines/11-240-NotExistingEquipmentComponent')]",
				"[concat(variables('factoryId'), '/pipelines/11-241-MissColumnEquipmentGroup')]",
				"[concat(variables('factoryId'), '/pipelines/11-241-MissColumnEquipmentComponent')]",
				"[concat(variables('factoryId'), '/pipelines/11-240-AlreadyExistEquipmentGroup')]",
				"[concat(variables('factoryId'), '/dataflows/CreateEquipmentGroupsEquipmentComponents_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateSubActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSubActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSubActionFamilies": {},
									"SubActionFamiliesStatus": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteTypeInvalidRangeRows": {},
									"WriteImpactModeInvalidRangeRows": {},
									"WriteImpactOnEquipmentWrongTypeRows": {},
									"WriteImpactOnEquipmentInvalidRangeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-110-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-110-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-110-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-110-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-111-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-111-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-113-TypeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-113-TypeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-113-ImpactModeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-113-ImpactModeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-112-ImpactOnEquipmentWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-112-ImpactOnEquipmentWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-113-ImpactOnEquipmentInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-113-ImpactOnEquipmentInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateSubActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-110-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-110-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-111-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-113-TypeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-113-ImpactModeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-112-ImpactOnEquipmentWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-113-ImpactOnEquipmentInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSubActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSubActionFamilies": {},
									"ReadTempStatusSubActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateSubActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/11-110-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/11-110-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/11-111-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/11-113-TypeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/11-113-ImpactModeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/11-112-ImpactOnEquipmentWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/11-113-ImpactOnEquipmentInvalidRange')]",
				"[concat(variables('factoryId'), '/dataflows/CreateSubActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamiliesAgingFamiliesApplication')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateSubActionFamiliesAgingFamiliesApplication_CheckDa",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesApplication_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSubActionFamiliesAgingFamiliesApplication": {},
									"SubActionFamiliesStatus": {},
									"AgingFamiliesStatus": {},
									"SubActionFamiliesAgingFamiliesApplicationStatus": {},
									"WriteNotExistingSubActionFamilyRows": {},
									"WriteNotExistingAgingFamilyRows": {},
									"WriteMissingSubActionFamilyRows": {},
									"WriteMissingAgingFamilyRows": {},
									"WriteAlreadyExistingSubActionFamilyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-220-NotExistingSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesApplication_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-220-NotExistingSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-220-NotExistingAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesApplication_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-220-NotExistingAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-221-MissColumnSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesApplication_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-221-MissColumnSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-221-MissColumnAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesApplication_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-221-MissColumnAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-220-AlreadyExistSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesApplication_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-220-AlreadyExistSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateSubActionFamiliesAgingFamiliesApplication_Transfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-220-NotExistingSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-220-NotExistingAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-221-MissColumnSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-221-MissColumnAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-220-AlreadyExistSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesApplication_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSubActionFamiliesAgingFamiliesApplication": {},
									"ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateSubActionFamiliesAgingFamiliesApplication_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/11-220-NotExistingSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-220-NotExistingAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-221-MissColumnSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-221-MissColumnAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-220-AlreadyExistSubActionFamily')]",
				"[concat(variables('factoryId'), '/dataflows/CreateSubActionFamiliesAgingFamiliesApplication_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamiliesAgingFamiliesReplacement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateSubActionFamiliesAgingFamiliesReplacement_CheckDa",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesReplacement_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSubActionFamiliesAgingFamiliesReplacement": {},
									"SubActionFamiliesStatus": {},
									"AgingFamiliesStatus": {},
									"SubActionFamiliesAgingFamiliesReplacementStatus": {},
									"WriteNotExistingSubActionFamilyRows": {},
									"WriteNotExistingAgingFamilyRows": {},
									"WriteMissingSubActionFamilyRows": {},
									"WriteMissingAgingFamilyRows": {},
									"WriteAlreadyExistingSubActionFamilyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-230-NotExistingSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesReplacement_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-230-NotExistingSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-230-NotExistingAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesReplacement_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-230-NotExistingAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-231-MissColumnSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesReplacement_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-231-MissColumnSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-231-MissColumnAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesReplacement_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-231-MissColumnAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-230-AlreadyExistSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSubActionFamiliesAgingFamiliesReplacement_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-230-AlreadyExistSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateSubActionFamiliesAgingFamiliesReplacement_Transfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-230-NotExistingSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-230-NotExistingAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-231-MissColumnSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-231-MissColumnAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-230-AlreadyExistSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesReplacement_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSubActionFamiliesAgingFamiliesReplacement": {},
									"ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateSubActionFamiliesAgingFamiliesReplacement_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/pipelines/11-230-NotExistingSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-230-NotExistingAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-231-MissColumnSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-231-MissColumnAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-230-AlreadyExistSubActionFamily')]",
				"[concat(variables('factoryId'), '/dataflows/CreateSubActionFamiliesAgingFamiliesReplacement_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateSustainmentActions_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSustainmentActions_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSustainmentActions": {},
									"SustainmentActionsStatus": {},
									"CreateSustainmentActionsMapBudgetCategories": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteMissingSustainmentActionRowsBudgetCategories": {},
									"WriteMissingIndexRowsBudgetCategories": {},
									"WriteMissingValueRowsBudgetCategories": {},
									"WriteNotExistingSustainmentActionRowsBudgetCategories": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-130-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-130-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-130-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-130-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-131-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-131-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-131-MissColumnSustainmentActionBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-131-MissColumnSustainmentActionBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-131-MissColumnIndexBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-131-MissColumnIndexBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-131-MissColumnValueBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-131-MissColumnValueBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-130-NotExistingSustainmentActionBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-130-NotExistingSustainmentActionBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateSustainmentActions_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-130-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-130-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-131-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-131-MissColumnSustainmentActionBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-131-MissColumnIndexBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-131-MissColumnValueBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-130-NotExistingSustainmentActionBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSustainmentActions_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSustainmentActions": {},
									"ReadMapBudgetCategories": {},
									"ReadTempStatusSustainmentActionsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSustainmentActionsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateSustainmentActions_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/pipelines/2-130-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/2-130-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/2-131-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/2-131-MissColumnSustainmentActionBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-131-MissColumnIndexBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-131-MissColumnValueBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-130-NotExistingSustainmentActionBudgetCategories')]",
				"[concat(variables('factoryId'), '/dataflows/CreateSustainmentActions_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActionsActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateSustainmentActionsActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSustainmentActionsActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSustainmentActionsActionFamilies": {},
									"SustainmentActionsStatus": {},
									"ActionFamiliesStatus": {},
									"SustainmentActionsActionFamiliesStatus": {},
									"WriteNotExistingSustainmentActionRows": {},
									"WriteNotExistingActionFamilyRows": {},
									"WriteMissingSustainmentActionRows": {},
									"WriteMissingActionFamilyRows": {},
									"WriteAlreadyExistingSustainmentActionRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-210-NotExistingSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-210-NotExistingSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-210-NotExistingActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-210-NotExistingActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-211-MissColumnSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-211-MissColumnSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-211-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-211-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-210-AlreadyExistSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-210-AlreadyExistSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateSustainmentActionsActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-210-NotExistingSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-210-NotExistingActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-211-MissColumnSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-211-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-210-AlreadyExistSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSustainmentActionsActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSustainmentActionsActionFamilies": {},
									"ReadTempStatusSustainmentActionsActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSustainmentActionsActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateSustainmentActionsActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/2-210-NotExistingSustainmentAction')]",
				"[concat(variables('factoryId'), '/pipelines/2-210-NotExistingActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-211-MissColumnSustainmentAction')]",
				"[concat(variables('factoryId'), '/pipelines/2-211-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-210-AlreadyExistSustainmentAction')]",
				"[concat(variables('factoryId'), '/dataflows/CreateSustainmentActionsActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActionsEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateSustainmentActionsEquipmentGroups_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSustainmentActionsEquipmentGroups_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSustainmentActionsEquipmentGroups": {},
									"SustainmentActionsStatus": {},
									"EquipmentGroupsStatus": {},
									"SustainmentActionsEquipmentGroupsStatus": {},
									"WriteNotExistingSustainmentActionRows": {},
									"WriteNotExistingEquipmentGroupRows": {},
									"WriteMissingSustainmentActionRows": {},
									"WriteMissingEquipmentGroupRows": {},
									"WriteAlreadyExistingSustainmentActionRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime5",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-250-NotExistingSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-250-NotExistingSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-250-NotExistingEquipmentGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-250-NotExistingEquipmentGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-251-MissColumnSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-251-MissColumnSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-251-MissColumnEquipmentGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-251-MissColumnEquipmentGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-250-AlreadyExistSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateSustainmentActionsEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-250-AlreadyExistSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateSustainmentActionsEquipmentGroups_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-250-NotExistingSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-250-NotExistingEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-251-MissColumnSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-251-MissColumnEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-250-AlreadyExistSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateSustainmentActionsEquipmentGroups_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateSustainmentActionsEquipmentGroups": {},
									"ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime5",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateSustainmentActionsEquipmentGroups_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime5')]",
				"[concat(variables('factoryId'), '/pipelines/11-250-NotExistingSustainmentAction')]",
				"[concat(variables('factoryId'), '/pipelines/11-250-NotExistingEquipmentGroup')]",
				"[concat(variables('factoryId'), '/pipelines/11-251-MissColumnSustainmentAction')]",
				"[concat(variables('factoryId'), '/pipelines/11-251-MissColumnEquipmentGroup')]",
				"[concat(variables('factoryId'), '/pipelines/11-250-AlreadyExistSustainmentAction')]",
				"[concat(variables('factoryId'), '/dataflows/CreateSustainmentActionsEquipmentGroups_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTeams')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateTeams_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTeams_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTeams": {},
									"TeamsStatus": {},
									"CreateTeamsMapCatKeyLabels": {},
									"CreateTeamsMapAvailableQuantityByYear": {},
									"CreateTeamsMapMinimalQuantityLevelByYear": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteConstrainedWrongTypeRows": {},
									"WriteMissingTeamRowsCatKeyLabels": {},
									"WriteMissingIndexRowsCatKeyLabels": {},
									"WriteMissingValueRowsCatKeyLabels": {},
									"WriteNotExistingTeamRowsCatKeyLabels": {},
									"WriteMissingTeamRowsAvailableQuantityByYear": {},
									"WriteMissingYearRowsAvailableQuantityByYear": {},
									"WriteMissingValueRowsAvailableQuantityByYear": {},
									"WriteNotExistingTeamRowsAvailableQuantityByYear": {},
									"WriteAvailableQuantityByYearValueWrongTypeRows": {},
									"WriteMissingTeamRowsMinimalQuantityLevelByYear": {},
									"WriteMissingYearRowsMinimalQuantityLevelByYear": {},
									"WriteMissingValueRowsMinimalQuantityLevelByYear": {},
									"WriteNotExistingTeamRowsMinimalQuantityLevelByYear": {},
									"WriteMinimalQuantityLevelByYearValueWrongTypeRows": {},
									"WriteCostRateWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "4-HumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "4-110-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-110-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-110-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-110-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-112-ConstrainedWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-112-ConstrainedWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnTeamCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnTeamCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnIndexCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnIndexCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnValueCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnValueCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-110-NotExistingTeamCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-110-NotExistingTeamCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnTeamAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnTeamAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnYearAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnYearAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnValueAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnValueAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-110-NotExistingTeamAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-110-NotExistingTeamAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-112-AvailableQuantityByYearValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-112-AvailableQuantityByYearValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnTeamMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnTeamMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnYearMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnYearMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-111-MissColumnValueMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-111-MissColumnValueMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-110-NotExistingTeamMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-110-NotExistingTeamMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-112-MinimalQuantityLevelByYearValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-112-MinimalQuantityLevelByYearValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-112-CostRateWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-112-CostRateWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateTeams_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "4-110-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-110-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-112-ConstrainedWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnTeamCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnIndexCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnValueCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-110-NotExistingTeamCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnTeamAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnYearAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnValueAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-110-NotExistingTeamAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-112-AvailableQuantityByYearValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnTeamMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnYearMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-111-MissColumnValueMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-110-NotExistingTeamMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-112-MinimalQuantityLevelByYearValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-112-CostRateWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTeams_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTeams": {},
									"ReadMapCatKeyLabels": {},
									"ReadMapAvailableQuantityByYear": {},
									"ReadMapMinimalQuantityLevelByYear": {},
									"ReadTempStatusTeamsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTeamsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "4-HumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateTeams_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/4-HumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/4-110-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/4-110-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/4-112-ConstrainedWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnTeamCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnIndexCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnValueCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/4-110-NotExistingTeamCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnTeamAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnYearAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnValueAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-110-NotExistingTeamAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-112-AvailableQuantityByYearValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnTeamMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnYearMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-111-MissColumnValueMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-110-NotExistingTeamMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-112-MinimalQuantityLevelByYearValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/4-112-CostRateWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/CreateTeams_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateTechnicalPolicies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTechnicalPolicies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTechnicalPolicies": {},
									"TechnicalPoliciesStatus": {},
									"CreateTechnicalPoliciesMapBudgetCategories": {},
									"WriteNotUniqueNameRows": {},
									"WriteAlreadyExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteEnablePendingActionRemovalWrongTypeRows": {},
									"WriteIsInactiveWrongTypeRows": {},
									"WriteTypeInvalidRangeRows": {},
									"WriteYearEndWrongTypeRows": {},
									"WriteYearStartWrongTypeRows": {},
									"WriteMissingTechnicalPolicyRowsBudgetCategories": {},
									"WriteMissingIndexRowsBudgetCategories": {},
									"WriteMissingValueRowsBudgetCategories": {},
									"WriteNotExistingTechnicalPolicyRowsBudgetCategories": {},
									"WriteNbRepAction1WrongTypeRows": {},
									"WriteNbRepAction1InvalidRangeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-140-NotUniqueName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-140-NotUniqueName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-140-AlreadyExistName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-140-AlreadyExistName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-141-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-141-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-142-EnablePendingActionRemovalWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-142-EnablePendingActionRemovalWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-142-IsInactiveWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-142-IsInactiveWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-143-TypeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-143-TypeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-142-YearEndWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-142-YearEndWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-142-YearStartWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-142-YearStartWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-141-MissColumnTechnicalPolicyBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-141-MissColumnTechnicalPolicyBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-141-MissColumnIndexBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-141-MissColumnIndexBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-141-MissColumnValueBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-141-MissColumnValueBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-140-NotExistingTechnicalPolicyBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-140-NotExistingTechnicalPolicyBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-142-NbRepAction1WrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-142-NbRepAction1WrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-143-NbRepAction1InvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-143-NbRepAction1InvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateTechnicalPolicies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-140-NotUniqueName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-140-AlreadyExistName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-141-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-142-EnablePendingActionRemovalWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-142-IsInactiveWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-143-TypeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-142-YearEndWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-142-YearStartWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-141-MissColumnTechnicalPolicyBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-141-MissColumnIndexBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-141-MissColumnValueBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-140-NotExistingTechnicalPolicyBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-142-NbRepAction1WrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-143-NbRepAction1InvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTechnicalPolicies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTechnicalPolicies": {},
									"ReadMapBudgetCategories": {},
									"ReadTempStatusTechnicalPoliciesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTechnicalPoliciesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateTechnicalPolicies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/pipelines/2-140-NotUniqueName')]",
				"[concat(variables('factoryId'), '/pipelines/2-140-AlreadyExistName')]",
				"[concat(variables('factoryId'), '/pipelines/2-141-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/2-142-EnablePendingActionRemovalWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-142-IsInactiveWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-143-TypeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/2-142-YearEndWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-142-YearStartWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-141-MissColumnTechnicalPolicyBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-141-MissColumnIndexBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-141-MissColumnValueBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-140-NotExistingTechnicalPolicyBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-142-NbRepAction1WrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-143-NbRepAction1InvalidRange')]",
				"[concat(variables('factoryId'), '/dataflows/CreateTechnicalPolicies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateTechnicalPoliciesCriteria_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTechnicalPoliciesCriteria_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTechnicalPoliciesCriteria": {},
									"TechnicalPoliciesStatus": {},
									"CriteriaStatus": {},
									"TechnicalPoliciesCriteriaStatus": {},
									"WriteNotExistingTechnicalPolicyRows": {},
									"WriteNotExistingCriterionRows": {},
									"WriteMissingTechnicalPolicyRows": {},
									"WriteMissingCriterionRows": {},
									"WriteAlreadyExistingTechnicalPolicyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-240-NotExistingTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-240-NotExistingTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-240-NotExistingCriterion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-240-NotExistingCriterion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-241-MissColumnTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-241-MissColumnTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-241-MissColumnCriterion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-241-MissColumnCriterion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-240-AlreadyExistTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-240-AlreadyExistTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateTechnicalPoliciesCriteria_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-240-NotExistingTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-240-NotExistingCriterion",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-241-MissColumnTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-241-MissColumnCriterion",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-240-AlreadyExistTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTechnicalPoliciesCriteria_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTechnicalPoliciesCriteria": {},
									"ReadTempStatusTechnicalPoliciesCriteriaStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTechnicalPoliciesCriteriaStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateTechnicalPoliciesCriteria_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/pipelines/2-240-NotExistingTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-240-NotExistingCriterion')]",
				"[concat(variables('factoryId'), '/pipelines/2-241-MissColumnTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-241-MissColumnCriterion')]",
				"[concat(variables('factoryId'), '/pipelines/2-240-AlreadyExistTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/dataflows/CreateTechnicalPoliciesCriteria_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesMainActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateTechnicalPoliciesMainActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTechnicalPoliciesMainActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTechnicalPoliciesMainActionFamilies": {},
									"TechnicalPoliciesStatus": {},
									"ActionFamiliesStatus": {},
									"TechnicalPoliciesMainActionFamiliesStatus": {},
									"WriteNotExistingTechnicalPolicyRows": {},
									"WriteNotExistingActionFamilyRows": {},
									"WriteMissingTechnicalPolicyRows": {},
									"WriteMissingActionFamilyRows": {},
									"WriteAlreadyExistingTechnicalPolicyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-220-NotExistingTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesMainActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-220-NotExistingTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-220-NotExistingActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesMainActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-220-NotExistingActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-221-MissColumnTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesMainActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-221-MissColumnTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-221-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesMainActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-221-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-220-AlreadyExistTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesMainActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-220-AlreadyExistTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateTechnicalPoliciesMainActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-220-NotExistingTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-220-NotExistingActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-221-MissColumnTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-221-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-220-AlreadyExistTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTechnicalPoliciesMainActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTechnicalPoliciesMainActionFamilies": {},
									"ReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateTechnicalPoliciesMainActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/2-220-NotExistingTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-220-NotExistingActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-221-MissColumnTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-221-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-220-AlreadyExistTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/dataflows/CreateTechnicalPoliciesMainActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesSecondaryActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CreateTechnicalPoliciesSecondaryActionFamilies_CheckDat",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTechnicalPoliciesSecondaryActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTechnicalPoliciesSecondaryActionFamilies": {},
									"TechnicalPoliciesStatus": {},
									"ActionFamiliesStatus": {},
									"TechnicalPoliciesSecondaryActionFamiliesStatus": {},
									"WriteNotExistingTechnicalPolicyRows": {},
									"WriteNotExistingActionFamilyRows": {},
									"WriteMissingTechnicalPolicyRows": {},
									"WriteMissingActionFamilyRows": {},
									"WriteAlreadyExistingTechnicalPolicyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-230-NotExistingTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesSecondaryActionFamilies_CheckDat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-230-NotExistingTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-230-NotExistingActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesSecondaryActionFamilies_CheckDat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-230-NotExistingActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-231-MissColumnTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesSecondaryActionFamilies_CheckDat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-231-MissColumnTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-231-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesSecondaryActionFamilies_CheckDat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-231-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-230-AlreadyExistTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CreateTechnicalPoliciesSecondaryActionFamilies_CheckDat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-230-AlreadyExistTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CreateTechnicalPoliciesSecondaryActionFamilies_Transfor",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-230-NotExistingTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-230-NotExistingActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-231-MissColumnTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-231-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-230-AlreadyExistTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreateTechnicalPoliciesSecondaryActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadCreateTechnicalPoliciesSecondaryActionFamilies": {},
									"ReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/CreateTechnicalPoliciesSecondaryActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/pipelines/2-230-NotExistingTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-230-NotExistingActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-231-MissColumnTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-231-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-230-AlreadyExistTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/dataflows/CreateTechnicalPoliciesSecondaryActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteActionFamilies": {},
									"ActionFamiliesStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-310-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-310-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-311-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-311-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-310-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-311-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteActionFamilies": {},
									"ReadTempStatusActionFamiliesStatusEditor": {},
									"ReadTempStatusActionFamilySustainmentActionsActionFamiliesStatusEditor": {},
									"ReadTempStatusActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor": {},
									"ReadTempStatusActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor": {},
									"ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor": {},
									"ReadTempStatusActionFamiliesActionTasksStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateActionFamilySustainmentActionsActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/2-310-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/2-311-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamiliesActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteActionFamiliesActionTasks_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteActionFamiliesActionTasks_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteActionFamiliesActionTasks": {},
									"ActionFamiliesActionTasksStatus": {},
									"WriteMissingActionFamilyRows": {},
									"WriteMissingActionTaskRows": {},
									"WriteNotExistingActionFamilyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "12-411-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionFamiliesActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-411-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-411-MissColumnActionTask",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionFamiliesActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-411-MissColumnActionTask",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-410-NotExistingActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionFamiliesActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-410-NotExistingActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteActionFamiliesActionTasks_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "12-411-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-411-MissColumnActionTask",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-410-NotExistingActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteActionFamiliesActionTasks_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteActionFamiliesActionTasks": {},
									"ReadTempStatusActionFamiliesActionTasksStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteActionFamiliesActionTasks_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/12-ActivitiesManagementHumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/12-411-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/12-411-MissColumnActionTask')]",
				"[concat(variables('factoryId'), '/pipelines/12-410-NotExistingActionFamily')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteActionFamiliesActionTasks_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamiliesSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteActionFamiliesSubActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteActionFamiliesSubActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteActionFamiliesSubActionFamilies": {},
									"ActionFamiliesSubActionFamiliesStatus": {},
									"WriteMissingActionFamilyRows": {},
									"WriteMissingSubActionFamilyRows": {},
									"WriteNotExistingActionFamilyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-411-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionFamiliesSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-411-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-411-MissColumnSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionFamiliesSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-411-MissColumnSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-410-NotExistingActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionFamiliesSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-410-NotExistingActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteActionFamiliesSubActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-411-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-411-MissColumnSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-410-NotExistingActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteActionFamiliesSubActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteActionFamiliesSubActionFamilies": {},
									"ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteActionFamiliesSubActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/11-411-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-411-MissColumnSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-410-NotExistingActionFamily')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteActionFamiliesSubActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteActionTasks_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteActionTasks_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteActionTasks": {},
									"ActionTasksStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "12-310-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-310-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-311-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-311-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteActionTasks_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "12-310-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-311-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteActionTasks_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteActionTasks": {},
									"ReadTempStatusActionTasksStatusEditor": {},
									"ReadTempStatusActionFamiliesActionTasksStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateActionTasksStatusEditor": {},
									"WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteActionTasks_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/12-ActivitiesManagementHumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/12-310-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/12-311-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteActionTasks_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteAgingFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteAgingFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteAgingFamilies": {},
									"AgingFamiliesStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-320-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-320-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-321-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-321-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteAgingFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-320-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-321-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteAgingFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteAgingFamilies": {},
									"ReadTempStatusAgingFamiliesStatusEditor": {},
									"ReadTempStatusAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor": {},
									"ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor": {},
									"ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateAgingFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteAgingFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/1-320-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/1-321-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteAgingFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteBudgets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteBudgets_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteBudgets_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteBudgets": {},
									"BudgetsStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "3-Budgets-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "3-310-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-310-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-311-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-311-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteBudgets_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "3-310-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-311-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteBudgets_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteBudgets": {},
									"ReadTempStatusBudgetsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateBudgetsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "3-Budgets-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteBudgets_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/3-Budgets-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/3-310-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/3-311-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteBudgets_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteCriteria_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteCriteria_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteCriteria": {},
									"CriteriaStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-320-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-320-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-321-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-321-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteCriteria_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-320-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-321-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteCriteria_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteCriteria": {},
									"ReadTempStatusCriteriaStatusEditor": {},
									"ReadTempStatusCriterionTechnicalPoliciesCriteriaStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateCriteriaStatusEditor": {},
									"WriteTempStatusStatusUpdateCriterionTechnicalPoliciesCriteriaStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteCriteria_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/2-320-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/2-321-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteCriteria_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteEquipmentComponents_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentComponents_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentComponents": {},
									"EquipmentComponentsStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-310-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-310-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-311-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-311-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteEquipmentComponents_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-310-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-311-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentComponents_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentComponents": {},
									"ReadTempStatusEquipmentComponentsStatusEditor": {},
									"ReadTempStatusEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor": {},
									"ReadTempStatusEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor": {},
									"ReadTempStatusEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor": {},
									"ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentComponentsStatusEditor": {},
									"WriteTempStatusStatusUpdateEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor": {},
									"WriteTempStatusStatusUpdateEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor": {},
									"WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentComponents_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/1-310-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/1-311-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentComponents_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponentsAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteEquipmentComponentsAgingFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentComponentsAgingFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentComponentsAgingFamilies": {},
									"EquipmentComponentsAgingFamiliesStatus": {},
									"WriteMissingEquipmentComponentRows": {},
									"WriteMissingAgingFamilyRows": {},
									"WriteNotExistingEquipmentComponentRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-411-MissColumnEquipmentComponent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentComponentsAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-411-MissColumnEquipmentComponent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-411-MissColumnAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentComponentsAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-411-MissColumnAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-410-NotExistingEquipmentComponent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentComponentsAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-410-NotExistingEquipmentComponent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteEquipmentComponentsAgingFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-411-MissColumnEquipmentComponent",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-411-MissColumnAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-410-NotExistingEquipmentComponent",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentComponentsAgingFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentComponentsAgingFamilies": {},
									"ReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentComponentsAgingFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentComponentsAgingFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/1-411-MissColumnEquipmentComponent')]",
				"[concat(variables('factoryId'), '/pipelines/1-411-MissColumnAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/1-410-NotExistingEquipmentComponent')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentComponentsAgingFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponentsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteEquipmentComponentsEquipmentComponents_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentComponentsEquipmentComponents_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentComponentsEquipmentComponents": {},
									"EquipmentComponentsEquipmentComponentsStatus": {},
									"WriteMissingEquipmentComponentSourceRows": {},
									"WriteMissingEquipmentComponentTargetRows": {},
									"WriteNotExistingEquipmentComponentSourceRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-421-MissColumnEquipmentComponentSource",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentComponentsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-421-MissColumnEquipmentComponentSource",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-421-MissColumnEquipmentComponentTarget",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentComponentsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-421-MissColumnEquipmentComponentTarget",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-420-NotExistingEquipmentComponentSource",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentComponentsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-420-NotExistingEquipmentComponentSource",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteEquipmentComponentsEquipmentComponents_TransformD",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-421-MissColumnEquipmentComponentSource",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-421-MissColumnEquipmentComponentTarget",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-420-NotExistingEquipmentComponentSource",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentComponentsEquipmentComponents_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentComponentsEquipmentComponents": {},
									"ReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentComponentsEquipmentComponents_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/1-421-MissColumnEquipmentComponentSource')]",
				"[concat(variables('factoryId'), '/pipelines/1-421-MissColumnEquipmentComponentTarget')]",
				"[concat(variables('factoryId'), '/pipelines/1-420-NotExistingEquipmentComponentSource')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentComponentsEquipmentComponents_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteEquipmentGroups_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentGroups_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentGroups": {},
									"EquipmentGroupsStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-320-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-320-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-321-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-321-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteEquipmentGroups_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-320-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-321-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentGroups_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentGroups": {},
									"ReadTempStatusEquipmentGroupsStatusEditor": {},
									"ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor": {},
									"ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentGroupsStatusEditor": {},
									"WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor": {},
									"WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentGroups_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/11-320-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/11-321-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentGroups_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentGroupsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteEquipmentGroupsEquipmentComponents_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentGroupsEquipmentComponents_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentGroupsEquipmentComponents": {},
									"EquipmentGroupsEquipmentComponentsStatus": {},
									"WriteMissingEquipmentGroupRows": {},
									"WriteMissingEquipmentComponentRows": {},
									"WriteNotExistingEquipmentGroupRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-441-MissColumnEquipmentGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentGroupsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-441-MissColumnEquipmentGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-441-MissColumnEquipmentComponent",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentGroupsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-441-MissColumnEquipmentComponent",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-440-NotExistingEquipmentGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteEquipmentGroupsEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-440-NotExistingEquipmentGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteEquipmentGroupsEquipmentComponents_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-441-MissColumnEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-441-MissColumnEquipmentComponent",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-440-NotExistingEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteEquipmentGroupsEquipmentComponents_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteEquipmentGroupsEquipmentComponents": {},
									"ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentGroupsEquipmentComponents_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/pipelines/11-441-MissColumnEquipmentGroup')]",
				"[concat(variables('factoryId'), '/pipelines/11-441-MissColumnEquipmentComponent')]",
				"[concat(variables('factoryId'), '/pipelines/11-440-NotExistingEquipmentGroup')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteEquipmentGroupsEquipmentComponents_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteSubActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSubActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSubActionFamilies": {},
									"SubActionFamiliesStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-310-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-310-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-311-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-311-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteSubActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-310-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-311-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSubActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSubActionFamilies": {},
									"ReadTempStatusSubActionFamiliesStatusEditor": {},
									"ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor": {},
									"ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor": {},
									"ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteSubActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/11-310-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/11-311-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteSubActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamiliesAgingFamiliesApplication')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteSubActionFamiliesAgingFamiliesApplication_CheckDa",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesApplication_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSubActionFamiliesAgingFamiliesApplication": {},
									"SubActionFamiliesAgingFamiliesApplicationStatus": {},
									"WriteMissingSubActionFamilyRows": {},
									"WriteMissingAgingFamilyRows": {},
									"WriteNotExistingSubActionFamilyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-421-MissColumnSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSubActionFamiliesAgingFamiliesApplication_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-421-MissColumnSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-421-MissColumnAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSubActionFamiliesAgingFamiliesApplication_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-421-MissColumnAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-420-NotExistingSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSubActionFamiliesAgingFamiliesApplication_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-420-NotExistingSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteSubActionFamiliesAgingFamiliesApplication_Transfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-421-MissColumnSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-421-MissColumnAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-420-NotExistingSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesApplication_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSubActionFamiliesAgingFamiliesApplication": {},
									"ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteSubActionFamiliesAgingFamiliesApplication_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/11-421-MissColumnSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-421-MissColumnAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-420-NotExistingSubActionFamily')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteSubActionFamiliesAgingFamiliesApplication_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamiliesAgingFamiliesReplacement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteSubActionFamiliesAgingFamiliesReplacement_CheckDa",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesReplacement_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSubActionFamiliesAgingFamiliesReplacement": {},
									"SubActionFamiliesAgingFamiliesReplacementStatus": {},
									"WriteMissingSubActionFamilyRows": {},
									"WriteMissingAgingFamilyRows": {},
									"WriteNotExistingSubActionFamilyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-431-MissColumnSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSubActionFamiliesAgingFamiliesReplacement_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-431-MissColumnSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-431-MissColumnAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSubActionFamiliesAgingFamiliesReplacement_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-431-MissColumnAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-430-NotExistingSubActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSubActionFamiliesAgingFamiliesReplacement_CheckDa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-430-NotExistingSubActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteSubActionFamiliesAgingFamiliesReplacement_Transfo",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-431-MissColumnSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-431-MissColumnAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-430-NotExistingSubActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesReplacement_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSubActionFamiliesAgingFamiliesReplacement": {},
									"ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteSubActionFamiliesAgingFamiliesReplacement_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/pipelines/11-431-MissColumnSubActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-431-MissColumnAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/11-430-NotExistingSubActionFamily')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteSubActionFamiliesAgingFamiliesReplacement_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteSustainmentActions_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSustainmentActions_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSustainmentActions": {},
									"SustainmentActionsStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-330-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-330-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-331-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-331-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteSustainmentActions_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-330-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-331-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSustainmentActions_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSustainmentActions": {},
									"ReadTempStatusSustainmentActionsStatusEditor": {},
									"ReadTempStatusSustainmentActionSustainmentActionsActionFamiliesStatusEditor": {},
									"ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSustainmentActionsStatusEditor": {},
									"WriteTempStatusStatusUpdateSustainmentActionSustainmentActionsActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteSustainmentActions_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/pipelines/2-330-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/2-331-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteSustainmentActions_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActionsActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteSustainmentActionsActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSustainmentActionsActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSustainmentActionsActionFamilies": {},
									"SustainmentActionsActionFamiliesStatus": {},
									"WriteMissingSustainmentActionRows": {},
									"WriteMissingActionFamilyRows": {},
									"WriteNotExistingSustainmentActionRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-411-MissColumnSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSustainmentActionsActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-411-MissColumnSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-411-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSustainmentActionsActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-411-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-410-NotExistingSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSustainmentActionsActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-410-NotExistingSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteSustainmentActionsActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-411-MissColumnSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-411-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-410-NotExistingSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSustainmentActionsActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSustainmentActionsActionFamilies": {},
									"ReadTempStatusSustainmentActionsActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSustainmentActionsActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteSustainmentActionsActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/2-411-MissColumnSustainmentAction')]",
				"[concat(variables('factoryId'), '/pipelines/2-411-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-410-NotExistingSustainmentAction')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteSustainmentActionsActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActionsEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteSustainmentActionsEquipmentGroups_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSustainmentActionsEquipmentGroups_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSustainmentActionsEquipmentGroups": {},
									"SustainmentActionsEquipmentGroupsStatus": {},
									"WriteMissingSustainmentActionRows": {},
									"WriteMissingEquipmentGroupRows": {},
									"WriteNotExistingSustainmentActionRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime5",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-451-MissColumnSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSustainmentActionsEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-451-MissColumnSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-451-MissColumnEquipmentGroup",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSustainmentActionsEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-451-MissColumnEquipmentGroup",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-450-NotExistingSustainmentAction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteSustainmentActionsEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-450-NotExistingSustainmentAction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteSustainmentActionsEquipmentGroups_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-451-MissColumnSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-451-MissColumnEquipmentGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-450-NotExistingSustainmentAction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteSustainmentActionsEquipmentGroups_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteSustainmentActionsEquipmentGroups": {},
									"ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime5",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteSustainmentActionsEquipmentGroups_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime5')]",
				"[concat(variables('factoryId'), '/pipelines/11-451-MissColumnSustainmentAction')]",
				"[concat(variables('factoryId'), '/pipelines/11-451-MissColumnEquipmentGroup')]",
				"[concat(variables('factoryId'), '/pipelines/11-450-NotExistingSustainmentAction')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteSustainmentActionsEquipmentGroups_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTeams')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteTeams_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTeams_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTeams": {},
									"TeamsStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "4-HumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "4-310-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-310-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-311-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-311-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteTeams_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "4-310-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-311-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTeams_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTeams": {},
									"ReadTempStatusTeamsStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTeamsStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "4-HumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteTeams_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/4-HumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/4-310-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/4-311-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteTeams_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteTechnicalPolicies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTechnicalPolicies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTechnicalPolicies": {},
									"TechnicalPoliciesStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-340-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-340-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-341-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-341-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteTechnicalPolicies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-340-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-341-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTechnicalPolicies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTechnicalPolicies": {},
									"ReadTempStatusTechnicalPoliciesStatusEditor": {},
									"ReadTempStatusTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor": {},
									"ReadTempStatusTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor": {},
									"ReadTempStatusTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTechnicalPoliciesStatusEditor": {},
									"WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor": {},
									"WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteTechnicalPolicies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/pipelines/2-340-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/2-341-MissColumnName')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteTechnicalPolicies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteTechnicalPoliciesCriteria_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTechnicalPoliciesCriteria_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTechnicalPoliciesCriteria": {},
									"TechnicalPoliciesCriteriaStatus": {},
									"WriteMissingTechnicalPolicyRows": {},
									"WriteMissingCriterionRows": {},
									"WriteNotExistingTechnicalPolicyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-441-MissColumnTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-441-MissColumnTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-441-MissColumnCriterion",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-441-MissColumnCriterion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-440-NotExistingTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-440-NotExistingTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteTechnicalPoliciesCriteria_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-441-MissColumnTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-441-MissColumnCriterion",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-440-NotExistingTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTechnicalPoliciesCriteria_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTechnicalPoliciesCriteria": {},
									"ReadTempStatusTechnicalPoliciesCriteriaStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTechnicalPoliciesCriteriaStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteTechnicalPoliciesCriteria_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/pipelines/2-441-MissColumnTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-441-MissColumnCriterion')]",
				"[concat(variables('factoryId'), '/pipelines/2-440-NotExistingTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteTechnicalPoliciesCriteria_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesMainActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteTechnicalPoliciesMainActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTechnicalPoliciesMainActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTechnicalPoliciesMainActionFamilies": {},
									"TechnicalPoliciesMainActionFamiliesStatus": {},
									"WriteMissingTechnicalPolicyRows": {},
									"WriteMissingActionFamilyRows": {},
									"WriteNotExistingTechnicalPolicyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-421-MissColumnTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesMainActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-421-MissColumnTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-421-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesMainActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-421-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-420-NotExistingTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesMainActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-420-NotExistingTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteTechnicalPoliciesMainActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-421-MissColumnTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-421-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-420-NotExistingTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTechnicalPoliciesMainActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTechnicalPoliciesMainActionFamilies": {},
									"ReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteTechnicalPoliciesMainActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/2-421-MissColumnTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-421-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-420-NotExistingTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteTechnicalPoliciesMainActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesSecondaryActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteTechnicalPoliciesSecondaryActionFamilies_CheckDat",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTechnicalPoliciesSecondaryActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTechnicalPoliciesSecondaryActionFamilies": {},
									"TechnicalPoliciesSecondaryActionFamiliesStatus": {},
									"WriteMissingTechnicalPolicyRows": {},
									"WriteMissingActionFamilyRows": {},
									"WriteNotExistingTechnicalPolicyRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-431-MissColumnTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesSecondaryActionFamilies_CheckDat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-431-MissColumnTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-431-MissColumnActionFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesSecondaryActionFamilies_CheckDat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-431-MissColumnActionFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-430-NotExistingTechnicalPolicy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DeleteTechnicalPoliciesSecondaryActionFamilies_CheckDat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-430-NotExistingTechnicalPolicy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteTechnicalPoliciesSecondaryActionFamilies_Transfor",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-431-MissColumnTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-431-MissColumnActionFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-430-NotExistingTechnicalPolicy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DeleteTechnicalPoliciesSecondaryActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadDeleteTechnicalPoliciesSecondaryActionFamilies": {},
									"ReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor": {},
									"WriteToTempRepo": {},
									"WriteTempStatusStatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DeleteTechnicalPoliciesSecondaryActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/pipelines/2-431-MissColumnTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/pipelines/2-431-MissColumnActionFamily')]",
				"[concat(variables('factoryId'), '/pipelines/2-430-NotExistingTechnicalPolicy')]",
				"[concat(variables('factoryId'), '/dataflows/DeleteTechnicalPoliciesSecondaryActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinanceInitialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TempInput_AgingFamiliesStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "AgingFamilies_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyAgingFamiliesStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_AgingFamiliesStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AgingFamiliesStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinanceInjection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFinanceDeleteRelationship_temp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FinanceDeleteRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Finance_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyFinanceDeleteEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyFinanceDeleteRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FinanceDeleteEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Finance_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyFinanceCreateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyFinanceDeleteEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FinanceCreateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Finance_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyFinanceCreateRelationship_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyFinanceCreateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FinanceCreateRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Finance_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyFinanceUpdateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyFinanceCreateRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FinanceUpdateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Finance_UpdateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CheckFinanceExistence",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyFinanceUpdateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Finance_DeleteTempDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeletionIfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckFinanceExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckFinanceExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "FinanceTempDatasetDeletion",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "Finance_DeleteTempDataset",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FinanceDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/Finance_DeleteInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/FinanceDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/FinanceCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/Finance_CreateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/FinanceCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/FinanceUpdateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/Finance_UpdateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/Finance_DeleteTempDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinanceStatusCleaner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTempInput_AgingFamiliesStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AgingFamiliesStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AgingFamiliesStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Finance_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FinanceInitialization",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FinanceInitialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateAgingFamily",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FinanceInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateAgingFamily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FinanceInjection",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FinanceInjection",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FinanceStatusCleaner",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateAgingFamily",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FinanceStatusCleaner",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FinanceInitialization')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateAgingFamily')]",
				"[concat(variables('factoryId'), '/pipelines/FinanceInjection')]",
				"[concat(variables('factoryId'), '/pipelines/FinanceStatusCleaner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResourcesInitialization')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TempInput_TeamsStatusDelete",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_TeamsStatus",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "Teams_status.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "CopyTeamsStatus",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "TempInput_TeamsStatusDelete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TeamsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TempInput_TeamsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_TeamsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TeamsStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResourcesInjection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyHumanResourcesDeleteRelationship_temp",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HumanResourcesDeleteRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HumanResources_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyHumanResourcesDeleteEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyHumanResourcesDeleteRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HumanResourcesDeleteEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HumanResources_DeleteInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyHumanResourcesCreateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyHumanResourcesDeleteEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HumanResourcesCreateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HumanResources_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyHumanResourcesCreateRelationship_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyHumanResourcesCreateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HumanResourcesCreateRelationship_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HumanResources_CreateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyHumanResourcesUpdateEntity_temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyHumanResourcesCreateRelationship_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HumanResourcesUpdateEntity_temp",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HumanResources_UpdateInjectorDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CheckHumanResourcesExistence",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "CopyHumanResourcesUpdateEntity_temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HumanResources_DeleteTempDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "DeletionIfCheck",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "CheckHumanResourcesExistence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('CheckHumanResourcesExistence').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "HumanResourcesTempDatasetDeletion",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "HumanResources_DeleteTempDataset",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HumanResourcesDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/HumanResources_DeleteInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/HumanResourcesDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/HumanResourcesCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/HumanResources_CreateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/HumanResourcesCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/HumanResourcesUpdateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/HumanResources_UpdateInjectorDataset')]",
				"[concat(variables('factoryId'), '/datasets/HumanResources_DeleteTempDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResourcesStatusCleaner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTempInput_TeamsStatus",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TempInput_TeamsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TeamsStatus",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_TeamsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TeamsStatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResources_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HumanResourcesInitialization",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HumanResourcesInitialization",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalDeleteTeams",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "HumanResourcesInitialization",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalDeleteTeams",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalCreateTeams",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalDeleteTeams",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalCreateTeams",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "ConditionalUpdateTeams",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalCreateTeams",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ConditionalUpdateTeams",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HumanResourcesInjection",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateTeams",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HumanResourcesInjection",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "HumanResourcesStatusCleaner",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ConditionalUpdateTeams",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "HumanResourcesStatusCleaner",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/HumanResourcesInitialization')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalDeleteTeams')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalCreateTeams')]",
				"[concat(variables('factoryId'), '/pipelines/ConditionalUpdateTeams')]",
				"[concat(variables('factoryId'), '/pipelines/HumanResourcesInjection')]",
				"[concat(variables('factoryId'), '/pipelines/HumanResourcesStatusCleaner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IntegrationRuntimeActivation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Activate1-AssetPortfolio-Runtime1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-1-AssetPortfolio-Runtime1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate1-AssetPortfolio-Runtime2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-1-AssetPortfolio-Runtime2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate2-ActivitiesManagement-Runtime1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-2-ActivitiesManagement-Runtime1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate2-ActivitiesManagement-Runtime2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-2-ActivitiesManagement-Runtime2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate2-ActivitiesManagement-Runtime3",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-2-ActivitiesManagement-Runtime3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate2-ActivitiesManagement-Runtime4",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-2-ActivitiesManagement-Runtime4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate3-Budgets-Runtime1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-3-Budgets-Runtime1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "3-Budgets-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate4-HumanResources-Runtime1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-4-HumanResources-Runtime1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "4-HumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate5-Finance-Runtime1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-5-Finance-Runtime1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "5-Finance-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate11-AssetPortfolioActivitiesManagement-Runtime1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate11-AssetPortfolioActivitiesManagement-Runtime2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate11-AssetPortfolioActivitiesManagement-Runtime3",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-11-AssetPortfolioActivitiesManagement-Runtime3",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate11-AssetPortfolioActivitiesManagement-Runtime4",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-11-AssetPortfolioActivitiesManagement-Runtime4",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate11-AssetPortfolioActivitiesManagement-Runtime5",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-11-AssetPortfolioActivitiesManagement-Runtime5",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime5",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Activate12-ActivitiesManagementHumanResources-Runtime1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Activate-12-ActivitiesManagementHumanResources-Runtime1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadActivationDataset": {},
									"WriteActivationFile": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Activate-1-AssetPortfolio-Runtime1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime1')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-1-AssetPortfolio-Runtime2')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime2')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-2-ActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-2-ActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-2-ActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-2-ActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-3-Budgets-Runtime1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/3-Budgets-Runtime1')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-4-HumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/4-HumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-5-Finance-Runtime1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/5-Finance-Runtime1')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-11-AssetPortfolioActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-11-AssetPortfolioActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-11-AssetPortfolioActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-11-AssetPortfolioActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-11-AssetPortfolioActivitiesManagement-Runtime5')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime5')]",
				"[concat(variables('factoryId'), '/dataflows/Activate-12-ActivitiesManagementHumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/12-ActivitiesManagementHumanResources-Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StatusCleaner')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DeleteTemporaryStatus",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "TempInput_Global",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_Global')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateActionFamilies": {},
									"ActionFamiliesStatus": {},
									"UpdateActionFamiliesMapCostsByRatingLevel": {},
									"UpdateActionFamiliesMapBudgetCategories": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteCostsAreCapitalChargesWrongTypeRows": {},
									"WriteMissingActionFamilyRowsCostsByRatingLevel": {},
									"WriteMissingRatingLevelRowsCostsByRatingLevel": {},
									"WriteMissingUnitPropertyRowsCostsByRatingLevel": {},
									"WriteMissingValueRowsCostsByRatingLevel": {},
									"WriteNotExistingActionFamilyRowsCostsByRatingLevel": {},
									"WriteUnitPropertyCostsByRatingLevelInvalidRangeRows": {},
									"WriteSupplierCostWrongTypeRows": {},
									"WriteDurationWrongTypeRows": {},
									"WriteIsLocalActionWrongTypeRows": {},
									"WriteNeedsOutageWrongTypeRows": {},
									"WriteMissingActionFamilyRowsBudgetCategories": {},
									"WriteMissingIndexRowsBudgetCategories": {},
									"WriteMissingValueRowsBudgetCategories": {},
									"WriteNotExistingActionFamilyRowsBudgetCategories": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-510-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-510-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-511-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-511-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-512-CostsAreCapitalChargesWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-512-CostsAreCapitalChargesWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-511-MissColumnActionFamilyCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-511-MissColumnActionFamilyCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-511-MissColumnRatingLevelCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-511-MissColumnRatingLevelCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-511-MissColumnUnitPropertyCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-511-MissColumnUnitPropertyCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-511-MissColumnValueCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-511-MissColumnValueCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-510-NotExistingActionFamilyCostsByRatingLevel",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-510-NotExistingActionFamilyCostsByRatingLevel",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-513-UnitPropertyCostsByRatingLevelInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-513-UnitPropertyCostsByRatingLevelInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-512-SupplierCostWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-512-SupplierCostWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-512-DurationWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-512-DurationWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-512-IsLocalActionWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-512-IsLocalActionWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-512-NeedsOutageWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-512-NeedsOutageWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-511-MissColumnActionFamilyBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-511-MissColumnActionFamilyBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-511-MissColumnIndexBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-511-MissColumnIndexBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-511-MissColumnValueBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-511-MissColumnValueBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-510-NotExistingActionFamilyBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-510-NotExistingActionFamilyBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-510-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-511-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-512-CostsAreCapitalChargesWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-511-MissColumnActionFamilyCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-511-MissColumnRatingLevelCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-511-MissColumnUnitPropertyCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-511-MissColumnValueCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-510-NotExistingActionFamilyCostsByRatingLevel",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-513-UnitPropertyCostsByRatingLevelInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-512-SupplierCostWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-512-DurationWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-512-IsLocalActionWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-512-NeedsOutageWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-511-MissColumnActionFamilyBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-511-MissColumnIndexBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-511-MissColumnValueBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-510-NotExistingActionFamilyBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateActionFamilies": {},
									"ReadMapCostsByRatingLevel": {},
									"ReadMapBudgetCategories": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/2-510-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/2-511-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/2-512-CostsAreCapitalChargesWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-511-MissColumnActionFamilyCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-511-MissColumnRatingLevelCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-511-MissColumnUnitPropertyCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-511-MissColumnValueCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-510-NotExistingActionFamilyCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/pipelines/2-513-UnitPropertyCostsByRatingLevelInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/2-512-SupplierCostWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-512-DurationWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-512-IsLocalActionWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-512-NeedsOutageWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-511-MissColumnActionFamilyBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-511-MissColumnIndexBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-511-MissColumnValueBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-510-NotExistingActionFamilyBudgetCategories')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionTasks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateActionTasks_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateActionTasks_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateActionTasks": {},
									"ActionTasksStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteActionDurationPercentageWrongTypeRows": {},
									"WriteActionDurationPercentageInvalidRangeRows": {},
									"WriteWorkforceFTEWrongTypeRows": {},
									"WriteWorkforceFTEInvalidRangeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "12-510-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-510-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-511-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-511-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-512-ActionDurationPercentageWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-512-ActionDurationPercentageWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-513-ActionDurationPercentageInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-513-ActionDurationPercentageInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-512-WorkforceFTEWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-512-WorkforceFTEWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "12-513-WorkforceFTEInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateActionTasks_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "12-513-WorkforceFTEInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateActionTasks_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "12-510-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-511-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-512-ActionDurationPercentageWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-513-ActionDurationPercentageInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-512-WorkforceFTEWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "12-513-WorkforceFTEInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateActionTasks_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateActionTasks": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "12-ActivitiesManagementHumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateActionTasks_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/12-ActivitiesManagementHumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/12-510-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/12-511-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/12-512-ActionDurationPercentageWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/12-513-ActionDurationPercentageInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/12-512-WorkforceFTEWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/12-513-WorkforceFTEInvalidRange')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateActionTasks_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateAgingFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateAgingFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateAgingFamilies": {},
									"AgingFamiliesStatus": {},
									"UpdateAgingFamiliesMapFamilyPairHillParameters": {},
									"UpdateAgingFamiliesMapMapReferenceCostOfFailure": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteAgingMethodologyInvalidRangeRows": {},
									"WriteMinimalAgeWrongTypeRows": {},
									"WriteMaximalAgeWrongTypeRows": {},
									"WriteFailureRateAtMinimalAgeWrongTypeRows": {},
									"WriteFailureRateAtMaximalAgeWrongTypeRows": {},
									"WriteExternalFailureRatePerYearWrongTypeRows": {},
									"WriteExternalFailureRatePerYearInvalidRangeRows": {},
									"WriteIsQuantityDiscreteWrongTypeRows": {},
									"WriteGFlagWrongTypeRows": {},
									"WriteAgingFailureDelayWrongTypeRows": {},
									"WriteMissingAgingFamilyRowsFamilyPairHillParameters": {},
									"WriteMissingAgentAgingFamilyRowsFamilyPairHillParameters": {},
									"WriteMissingHillParametersRowsFamilyPairHillParameters": {},
									"WriteMissingValueRowsFamilyPairHillParameters": {},
									"WriteNotExistingAgingFamilyRowsFamilyPairHillParameters": {},
									"WriteHillParametersFamilyPairHillParametersInvalidRangeRows": {},
									"WriteAmplitudeHillWrongTypeRows": {},
									"WriteOffsetHillWrongTypeRows": {},
									"WriteSlopeHillWrongTypeRows": {},
									"WriteIsFailureTransmittedWrongTypeRows": {},
									"WriteIsCouplingActiveWrongTypeRows": {},
									"WriteIsAgingAfterDeathWrongTypeRows": {},
									"WriteMaintenanceIfOutOfOrderWrongTypeRows": {},
									"WriteShapeWrongTypeRows": {},
									"WriteScaleWrongTypeRows": {},
									"WriteExpectedLifeWrongTypeRows": {},
									"WriteFinancialCostOfFailureWrongTypeRows": {},
									"WriteEnvironmentalCostOfFailureWrongTypeRows": {},
									"WriteNetworkCostOfFailureWrongTypeRows": {},
									"WriteMissingAgingFamilyRowsMapReferenceCostOfFailure": {},
									"WriteMissingHealthIndexRowsMapReferenceCostOfFailure": {},
									"WriteMissingValueRowsMapReferenceCostOfFailure": {},
									"WriteNotExistingAgingFamilyRowsMapReferenceCostOfFailure": {},
									"WriteMapReferenceCostOfFailureValueWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-520-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-520-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-521-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-521-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-523-AgingMethodologyInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-523-AgingMethodologyInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-MinimalAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-MinimalAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-MaximalAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-MaximalAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-FailureRateAtMinimalAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-FailureRateAtMinimalAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-FailureRateAtMaximalAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-FailureRateAtMaximalAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-ExternalFailureRatePerYearWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-ExternalFailureRatePerYearWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-523-ExternalFailureRatePerYearInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-523-ExternalFailureRatePerYearInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-IsQuantityDiscreteWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-IsQuantityDiscreteWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-GFlagWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-GFlagWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-AgingFailureDelayWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-AgingFailureDelayWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-521-MissColumnAgingFamilyFamilyPairHillParameters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-521-MissColumnAgingFamilyFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-521-MissColumnAgentAgingFamilyFamilyPairHillParameter",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-521-MissColumnAgentAgingFamilyFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-521-MissColumnHillParametersFamilyPairHillParameters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-521-MissColumnHillParametersFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-521-MissColumnValueFamilyPairHillParameters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-521-MissColumnValueFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-520-NotExistingAgingFamilyFamilyPairHillParameters",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-520-NotExistingAgingFamilyFamilyPairHillParameters",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-523-HillParametersFamilyPairHillParametersInvalidRang",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-523-HillParametersFamilyPairHillParametersInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-AmplitudeHillWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-AmplitudeHillWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-OffsetHillWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-OffsetHillWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-SlopeHillWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-SlopeHillWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-IsFailureTransmittedWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-IsFailureTransmittedWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-IsCouplingActiveWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-IsCouplingActiveWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-IsAgingAfterDeathWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-IsAgingAfterDeathWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-MaintenanceIfOutOfOrderWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-MaintenanceIfOutOfOrderWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-ShapeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-ShapeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-ScaleWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-ScaleWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-ExpectedLifeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-ExpectedLifeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-FinancialCostOfFailureWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-FinancialCostOfFailureWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-EnvironmentalCostOfFailureWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-EnvironmentalCostOfFailureWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-NetworkCostOfFailureWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-NetworkCostOfFailureWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-521-MissColumnAgingFamilyMapReferenceCostOfFailure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-521-MissColumnAgingFamilyMapReferenceCostOfFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-521-MissColumnHealthIndexMapReferenceCostOfFailure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-521-MissColumnHealthIndexMapReferenceCostOfFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-521-MissColumnValueMapReferenceCostOfFailure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-521-MissColumnValueMapReferenceCostOfFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-520-NotExistingAgingFamilyMapReferenceCostOfFailure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-520-NotExistingAgingFamilyMapReferenceCostOfFailure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-522-MapReferenceCostOfFailureValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-522-MapReferenceCostOfFailureValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateAgingFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-520-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-521-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-523-AgingMethodologyInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-MinimalAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-MaximalAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-FailureRateAtMinimalAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-FailureRateAtMaximalAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-ExternalFailureRatePerYearWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-523-ExternalFailureRatePerYearInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-IsQuantityDiscreteWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-GFlagWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-AgingFailureDelayWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-521-MissColumnAgingFamilyFamilyPairHillParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-521-MissColumnAgentAgingFamilyFamilyPairHillParameter",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-521-MissColumnHillParametersFamilyPairHillParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-521-MissColumnValueFamilyPairHillParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-520-NotExistingAgingFamilyFamilyPairHillParameters",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-523-HillParametersFamilyPairHillParametersInvalidRang",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-AmplitudeHillWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-OffsetHillWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-SlopeHillWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-IsFailureTransmittedWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-IsCouplingActiveWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-IsAgingAfterDeathWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-MaintenanceIfOutOfOrderWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-ShapeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-ScaleWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-ExpectedLifeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-FinancialCostOfFailureWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-EnvironmentalCostOfFailureWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-NetworkCostOfFailureWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-521-MissColumnAgingFamilyMapReferenceCostOfFailure",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-521-MissColumnHealthIndexMapReferenceCostOfFailure",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-521-MissColumnValueMapReferenceCostOfFailure",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-520-NotExistingAgingFamilyMapReferenceCostOfFailure",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-522-MapReferenceCostOfFailureValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateAgingFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateAgingFamilies": {},
									"ReadMapFamilyPairHillParameters": {},
									"ReadMapMapReferenceCostOfFailure": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateAgingFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/1-520-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/1-521-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/1-523-AgingMethodologyInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-MinimalAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-MaximalAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-FailureRateAtMinimalAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-FailureRateAtMaximalAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-ExternalFailureRatePerYearWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-523-ExternalFailureRatePerYearInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-IsQuantityDiscreteWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-GFlagWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-AgingFailureDelayWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-521-MissColumnAgingFamilyFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-521-MissColumnAgentAgingFamilyFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-521-MissColumnHillParametersFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-521-MissColumnValueFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-520-NotExistingAgingFamilyFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/pipelines/1-523-HillParametersFamilyPairHillParametersInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-AmplitudeHillWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-OffsetHillWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-SlopeHillWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-IsFailureTransmittedWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-IsCouplingActiveWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-IsAgingAfterDeathWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-MaintenanceIfOutOfOrderWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-ShapeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-ScaleWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-ExpectedLifeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-FinancialCostOfFailureWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-EnvironmentalCostOfFailureWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-NetworkCostOfFailureWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-521-MissColumnAgingFamilyMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/pipelines/1-521-MissColumnHealthIndexMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/pipelines/1-521-MissColumnValueMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/pipelines/1-520-NotExistingAgingFamilyMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/pipelines/1-522-MapReferenceCostOfFailureValueWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateAgingFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateAgingFamily_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateAgingFamily_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateAgingFamily": {},
									"AgingFamiliesStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteRawInvestmentWrongTypeRows": {},
									"WriteLifeSpanWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "5-Finance-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "5-510-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamily_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "5-510-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "5-511-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamily_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "5-511-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "5-512-RawInvestmentWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamily_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "5-512-RawInvestmentWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "5-512-LifeSpanWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateAgingFamily_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "5-512-LifeSpanWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateAgingFamily_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "5-510-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "5-511-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "5-512-RawInvestmentWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "5-512-LifeSpanWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateAgingFamily_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateAgingFamily": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "5-Finance-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "5-Finance/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateAgingFamily_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/5-Finance-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/5-510-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/5-511-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/5-512-RawInvestmentWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/5-512-LifeSpanWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateAgingFamily_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateBudgets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateBudgets_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateBudgets_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateBudgets": {},
									"BudgetsStatus": {},
									"UpdateBudgetsMapCatKeyLabels": {},
									"UpdateBudgetsMapAvailableQuantityByYear": {},
									"UpdateBudgetsMapMinimalQuantityLevelByYear": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteCostTypeInvalidRangeRows": {},
									"WriteConstrainedWrongTypeRows": {},
									"WriteMissingBudgetRowsCatKeyLabels": {},
									"WriteMissingIndexRowsCatKeyLabels": {},
									"WriteMissingValueRowsCatKeyLabels": {},
									"WriteNotExistingBudgetRowsCatKeyLabels": {},
									"WriteMissingBudgetRowsAvailableQuantityByYear": {},
									"WriteMissingYearRowsAvailableQuantityByYear": {},
									"WriteMissingValueRowsAvailableQuantityByYear": {},
									"WriteNotExistingBudgetRowsAvailableQuantityByYear": {},
									"WriteAvailableQuantityByYearValueWrongTypeRows": {},
									"WriteMissingBudgetRowsMinimalQuantityLevelByYear": {},
									"WriteMissingYearRowsMinimalQuantityLevelByYear": {},
									"WriteMissingValueRowsMinimalQuantityLevelByYear": {},
									"WriteNotExistingBudgetRowsMinimalQuantityLevelByYear": {},
									"WriteMinimalQuantityLevelByYearValueWrongTypeRows": {},
									"WriteCostRateWrongTypeRows": {},
									"WriteRankWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "3-Budgets-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "3-510-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-510-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-513-CostTypeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-513-CostTypeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-512-ConstrainedWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-512-ConstrainedWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnBudgetCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnBudgetCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnIndexCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnIndexCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnValueCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnValueCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-510-NotExistingBudgetCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-510-NotExistingBudgetCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnBudgetAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnBudgetAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnYearAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnYearAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnValueAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnValueAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-510-NotExistingBudgetAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-510-NotExistingBudgetAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-512-AvailableQuantityByYearValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-512-AvailableQuantityByYearValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnBudgetMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnBudgetMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnYearMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnYearMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-511-MissColumnValueMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-511-MissColumnValueMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-510-NotExistingBudgetMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-510-NotExistingBudgetMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-512-MinimalQuantityLevelByYearValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-512-MinimalQuantityLevelByYearValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-512-CostRateWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-512-CostRateWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "3-512-RankWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateBudgets_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3-512-RankWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateBudgets_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "3-510-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-513-CostTypeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-512-ConstrainedWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnBudgetCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnIndexCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnValueCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-510-NotExistingBudgetCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnBudgetAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnYearAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnValueAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-510-NotExistingBudgetAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-512-AvailableQuantityByYearValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnBudgetMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnYearMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-511-MissColumnValueMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-510-NotExistingBudgetMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-512-MinimalQuantityLevelByYearValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-512-CostRateWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3-512-RankWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateBudgets_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateBudgets": {},
									"ReadMapCatKeyLabels": {},
									"ReadMapAvailableQuantityByYear": {},
									"ReadMapMinimalQuantityLevelByYear": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "3-Budgets-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "3-Budgets/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateBudgets_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/3-Budgets-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/3-510-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/3-513-CostTypeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/3-512-ConstrainedWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnBudgetCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnIndexCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnValueCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/3-510-NotExistingBudgetCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnBudgetAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnYearAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnValueAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-510-NotExistingBudgetAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-512-AvailableQuantityByYearValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnBudgetMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnYearMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-511-MissColumnValueMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-510-NotExistingBudgetMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/3-512-MinimalQuantityLevelByYearValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/3-512-CostRateWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/3-512-RankWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateBudgets_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateCriteria')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateCriteria_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateCriteria_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateCriteria": {},
									"CriteriaStatus": {},
									"UpdateCriteriaMapValueAsString": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteOperatorInvalidRangeRows": {},
									"WriteThresholdWrongTypeRows": {},
									"WriteValueWrongTypeRows": {},
									"WriteMissingCriterionRowsValueAsString": {},
									"WriteMissingIndexRowsValueAsString": {},
									"WriteMissingValueRowsValueAsString": {},
									"WriteNotExistingCriterionRowsValueAsString": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-520-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-520-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-521-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-521-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-523-OperatorInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-523-OperatorInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-522-ThresholdWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-522-ThresholdWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-522-ValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-522-ValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-521-MissColumnCriterionValueAsString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-521-MissColumnCriterionValueAsString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-521-MissColumnIndexValueAsString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-521-MissColumnIndexValueAsString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-521-MissColumnValueValueAsString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-521-MissColumnValueValueAsString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-520-NotExistingCriterionValueAsString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateCriteria_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-520-NotExistingCriterionValueAsString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateCriteria_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-520-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-521-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-523-OperatorInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-522-ThresholdWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-522-ValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-521-MissColumnCriterionValueAsString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-521-MissColumnIndexValueAsString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-521-MissColumnValueValueAsString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-520-NotExistingCriterionValueAsString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateCriteria_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateCriteria": {},
									"ReadMapValueAsString": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateCriteria_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/2-520-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/2-521-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/2-523-OperatorInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/2-522-ThresholdWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-522-ValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-521-MissColumnCriterionValueAsString')]",
				"[concat(variables('factoryId'), '/pipelines/2-521-MissColumnIndexValueAsString')]",
				"[concat(variables('factoryId'), '/pipelines/2-521-MissColumnValueValueAsString')]",
				"[concat(variables('factoryId'), '/pipelines/2-520-NotExistingCriterionValueAsString')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateCriteria_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateEquipmentComponents_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateEquipmentComponents_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateEquipmentComponents": {},
									"EquipmentComponentsStatus": {},
									"UpdateEquipmentComponentsMapCustomDataString": {},
									"UpdateEquipmentComponentsMapCustomDataNumber": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteInstallationYearWrongTypeRows": {},
									"WriteEnvironmentAgingRateWrongTypeRows": {},
									"WriteQuantityWrongTypeRows": {},
									"WriteHealthScoreWrongTypeRows": {},
									"WriteHealthScoreInvalidRangeRows": {},
									"WriteFinancialConsequencesFactorWrongTypeRows": {},
									"WriteEnvironmentalConsequencesFactorWrongTypeRows": {},
									"WriteNetworkConsequencesFactorWrongTypeRows": {},
									"WriteKnownApparentAgeWrongTypeRows": {},
									"WriteKnownApparentAgeInvalidRangeRows": {},
									"WriteCriticalityLevelFailureWrongTypeRows": {},
									"WriteCriticalityLevelNetworkConstraintWrongTypeRows": {},
									"WriteMissingEquipmentComponentRowsCustomDataString": {},
									"WriteMissingCustomDataRowsCustomDataString": {},
									"WriteMissingValueRowsCustomDataString": {},
									"WriteNotExistingEquipmentComponentRowsCustomDataString": {},
									"WriteMissingEquipmentComponentRowsCustomDataNumber": {},
									"WriteMissingCustomDataRowsCustomDataNumber": {},
									"WriteMissingValueRowsCustomDataNumber": {},
									"WriteNotExistingEquipmentComponentRowsCustomDataNumber": {},
									"WriteCustomDataNumberValueWrongTypeRows": {},
									"WriteSAIDI15minWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "1-510-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-510-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-511-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-511-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-InstallationYearWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-InstallationYearWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-EnvironmentAgingRateWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-EnvironmentAgingRateWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-QuantityWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-QuantityWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-HealthScoreWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-HealthScoreWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-513-HealthScoreInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-513-HealthScoreInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-FinancialConsequencesFactorWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-FinancialConsequencesFactorWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-EnvironmentalConsequencesFactorWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-EnvironmentalConsequencesFactorWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-NetworkConsequencesFactorWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-NetworkConsequencesFactorWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-KnownApparentAgeWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-KnownApparentAgeWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-513-KnownApparentAgeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-513-KnownApparentAgeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-CriticalityLevelFailureWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-CriticalityLevelFailureWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-CriticalityLevelNetworkConstraintWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-CriticalityLevelNetworkConstraintWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-511-MissColumnEquipmentComponentCustomDataString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-511-MissColumnEquipmentComponentCustomDataString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-511-MissColumnCustomDataCustomDataString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-511-MissColumnCustomDataCustomDataString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-511-MissColumnValueCustomDataString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-511-MissColumnValueCustomDataString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-510-NotExistingEquipmentComponentCustomDataString",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-510-NotExistingEquipmentComponentCustomDataString",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-511-MissColumnEquipmentComponentCustomDataNumber",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-511-MissColumnEquipmentComponentCustomDataNumber",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-511-MissColumnCustomDataCustomDataNumber",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-511-MissColumnCustomDataCustomDataNumber",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-511-MissColumnValueCustomDataNumber",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-511-MissColumnValueCustomDataNumber",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-510-NotExistingEquipmentComponentCustomDataNumber",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-510-NotExistingEquipmentComponentCustomDataNumber",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-CustomDataNumberValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-CustomDataNumberValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "1-512-SAIDI15minWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentComponents_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "1-512-SAIDI15minWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateEquipmentComponents_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "1-510-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-511-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-InstallationYearWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-EnvironmentAgingRateWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-QuantityWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-HealthScoreWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-513-HealthScoreInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-FinancialConsequencesFactorWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-EnvironmentalConsequencesFactorWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-NetworkConsequencesFactorWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-KnownApparentAgeWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-513-KnownApparentAgeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-CriticalityLevelFailureWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-CriticalityLevelNetworkConstraintWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-511-MissColumnEquipmentComponentCustomDataString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-511-MissColumnCustomDataCustomDataString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-511-MissColumnValueCustomDataString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-510-NotExistingEquipmentComponentCustomDataString",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-511-MissColumnEquipmentComponentCustomDataNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-511-MissColumnCustomDataCustomDataNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-511-MissColumnValueCustomDataNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-510-NotExistingEquipmentComponentCustomDataNumber",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-CustomDataNumberValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1-512-SAIDI15minWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateEquipmentComponents_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateEquipmentComponents": {},
									"ReadMapCustomDataString": {},
									"ReadMapCustomDataNumber": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateEquipmentComponents_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/1-510-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/1-511-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-InstallationYearWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-EnvironmentAgingRateWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-QuantityWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-HealthScoreWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-513-HealthScoreInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-FinancialConsequencesFactorWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-EnvironmentalConsequencesFactorWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-NetworkConsequencesFactorWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-KnownApparentAgeWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-513-KnownApparentAgeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-CriticalityLevelFailureWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-CriticalityLevelNetworkConstraintWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-511-MissColumnEquipmentComponentCustomDataString')]",
				"[concat(variables('factoryId'), '/pipelines/1-511-MissColumnCustomDataCustomDataString')]",
				"[concat(variables('factoryId'), '/pipelines/1-511-MissColumnValueCustomDataString')]",
				"[concat(variables('factoryId'), '/pipelines/1-510-NotExistingEquipmentComponentCustomDataString')]",
				"[concat(variables('factoryId'), '/pipelines/1-511-MissColumnEquipmentComponentCustomDataNumber')]",
				"[concat(variables('factoryId'), '/pipelines/1-511-MissColumnCustomDataCustomDataNumber')]",
				"[concat(variables('factoryId'), '/pipelines/1-511-MissColumnValueCustomDataNumber')]",
				"[concat(variables('factoryId'), '/pipelines/1-510-NotExistingEquipmentComponentCustomDataNumber')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-CustomDataNumberValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/1-512-SAIDI15minWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateEquipmentComponents_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponentsAgingFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateEquipmentComponentsAgingFamiliesStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateEquipmentComponentsAgingFamiliesStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MainStatus": {},
									"EquipmentComponentEquipmentComponentsAgingFamiliesstatus": {},
									"AgingFamilyEquipmentComponentsAgingFamiliesstatus": {},
									"WriteEquipmentComponentsAgingFamiliesStatus": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Status"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateEquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponentsEquipmentComponentsStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateEquipmentComponentsEquipmentComponentsStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateEquipmentComponentsEquipmentComponentsStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MainStatus": {},
									"EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus": {},
									"EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus": {},
									"WriteEquipmentComponentsEquipmentComponentsStatus": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "1-AssetPortfolio-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "1-AssetPortfolio/Status"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateEquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/1-AssetPortfolio-Runtime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateEquipmentGroups_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateEquipmentGroups_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateEquipmentGroups": {},
									"EquipmentGroupsStatus": {},
									"UpdateEquipmentGroupsMapBudgetCategories": {},
									"UpdateEquipmentGroupsMapHRCategories": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteQuantityWrongTypeRows": {},
									"WriteMissingEquipmentGroupRowsBudgetCategories": {},
									"WriteMissingIndexRowsBudgetCategories": {},
									"WriteMissingValueRowsBudgetCategories": {},
									"WriteNotExistingEquipmentGroupRowsBudgetCategories": {},
									"WriteMissingEquipmentGroupRowsHRCategories": {},
									"WriteMissingIndexRowsHRCategories": {},
									"WriteMissingValueRowsHRCategories": {},
									"WriteNotExistingEquipmentGroupRowsHRCategories": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-520-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-520-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-521-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-521-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-522-QuantityWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-522-QuantityWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-521-MissColumnEquipmentGroupBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-521-MissColumnEquipmentGroupBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-521-MissColumnIndexBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-521-MissColumnIndexBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-521-MissColumnValueBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-521-MissColumnValueBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-520-NotExistingEquipmentGroupBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-520-NotExistingEquipmentGroupBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-521-MissColumnEquipmentGroupHRCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-521-MissColumnEquipmentGroupHRCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-521-MissColumnIndexHRCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-521-MissColumnIndexHRCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-521-MissColumnValueHRCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-521-MissColumnValueHRCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-520-NotExistingEquipmentGroupHRCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateEquipmentGroups_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-520-NotExistingEquipmentGroupHRCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateEquipmentGroups_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-520-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-521-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-522-QuantityWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-521-MissColumnEquipmentGroupBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-521-MissColumnIndexBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-521-MissColumnValueBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-520-NotExistingEquipmentGroupBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-521-MissColumnEquipmentGroupHRCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-521-MissColumnIndexHRCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-521-MissColumnValueHRCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-520-NotExistingEquipmentGroupHRCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateEquipmentGroups_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateEquipmentGroups": {},
									"ReadMapBudgetCategories": {},
									"ReadMapHRCategories": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateEquipmentGroups_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime2')]",
				"[concat(variables('factoryId'), '/pipelines/11-520-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/11-521-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/11-522-QuantityWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/11-521-MissColumnEquipmentGroupBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-521-MissColumnIndexBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-521-MissColumnValueBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-520-NotExistingEquipmentGroupBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-521-MissColumnEquipmentGroupHRCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-521-MissColumnIndexHRCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-521-MissColumnValueHRCategories')]",
				"[concat(variables('factoryId'), '/pipelines/11-520-NotExistingEquipmentGroupHRCategories')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateEquipmentGroups_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateSubActionFamilies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateSubActionFamilies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateSubActionFamilies": {},
									"SubActionFamiliesStatus": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteTypeInvalidRangeRows": {},
									"WriteImpactModeInvalidRangeRows": {},
									"WriteImpactOnEquipmentWrongTypeRows": {},
									"WriteImpactOnEquipmentInvalidRangeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "11-510-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-510-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-511-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-511-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-513-TypeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-513-TypeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-513-ImpactModeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-513-ImpactModeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-512-ImpactOnEquipmentWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-512-ImpactOnEquipmentWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "11-513-ImpactOnEquipmentInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSubActionFamilies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "11-513-ImpactOnEquipmentInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateSubActionFamilies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "11-510-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-511-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-513-TypeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-513-ImpactModeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-512-ImpactOnEquipmentWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "11-513-ImpactOnEquipmentInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateSubActionFamilies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateSubActionFamilies": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "11-AssetPortfolioActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateSubActionFamilies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/11-AssetPortfolioActivitiesManagement-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/11-510-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/11-511-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/11-513-TypeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/11-513-ImpactModeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/11-512-ImpactOnEquipmentWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/11-513-ImpactOnEquipmentInvalidRange')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateSubActionFamilies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateSustainmentActions_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateSustainmentActions_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateSustainmentActions": {},
									"SustainmentActionsStatus": {},
									"UpdateSustainmentActionsMapBudgetCategories": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteMissingSustainmentActionRowsBudgetCategories": {},
									"WriteMissingIndexRowsBudgetCategories": {},
									"WriteMissingValueRowsBudgetCategories": {},
									"WriteNotExistingSustainmentActionRowsBudgetCategories": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-530-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-530-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-531-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-531-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-531-MissColumnSustainmentActionBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-531-MissColumnSustainmentActionBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-531-MissColumnIndexBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-531-MissColumnIndexBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-531-MissColumnValueBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-531-MissColumnValueBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-530-NotExistingSustainmentActionBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateSustainmentActions_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-530-NotExistingSustainmentActionBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateSustainmentActions_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-530-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-531-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-531-MissColumnSustainmentActionBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-531-MissColumnIndexBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-531-MissColumnValueBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-530-NotExistingSustainmentActionBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateSustainmentActions_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateSustainmentActions": {},
									"ReadMapBudgetCategories": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateSustainmentActions_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime3')]",
				"[concat(variables('factoryId'), '/pipelines/2-530-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/2-531-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/2-531-MissColumnSustainmentActionBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-531-MissColumnIndexBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-531-MissColumnValueBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-530-NotExistingSustainmentActionBudgetCategories')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateSustainmentActions_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSustainmentActionsActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateSustainmentActionsActionFamiliesStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateSustainmentActionsActionFamiliesStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MainStatus": {},
									"ActionFamilySustainmentActionsActionFamiliesstatus": {},
									"SustainmentActionSustainmentActionsActionFamiliesstatus": {},
									"WriteSustainmentActionsActionFamiliesStatus": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Status"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateSustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTeams')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateTeams_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateTeams_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateTeams": {},
									"TeamsStatus": {},
									"UpdateTeamsMapCatKeyLabels": {},
									"UpdateTeamsMapAvailableQuantityByYear": {},
									"UpdateTeamsMapMinimalQuantityLevelByYear": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteConstrainedWrongTypeRows": {},
									"WriteMissingTeamRowsCatKeyLabels": {},
									"WriteMissingIndexRowsCatKeyLabels": {},
									"WriteMissingValueRowsCatKeyLabels": {},
									"WriteNotExistingTeamRowsCatKeyLabels": {},
									"WriteMissingTeamRowsAvailableQuantityByYear": {},
									"WriteMissingYearRowsAvailableQuantityByYear": {},
									"WriteMissingValueRowsAvailableQuantityByYear": {},
									"WriteNotExistingTeamRowsAvailableQuantityByYear": {},
									"WriteAvailableQuantityByYearValueWrongTypeRows": {},
									"WriteMissingTeamRowsMinimalQuantityLevelByYear": {},
									"WriteMissingYearRowsMinimalQuantityLevelByYear": {},
									"WriteMissingValueRowsMinimalQuantityLevelByYear": {},
									"WriteNotExistingTeamRowsMinimalQuantityLevelByYear": {},
									"WriteMinimalQuantityLevelByYearValueWrongTypeRows": {},
									"WriteCostRateWrongTypeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "4-HumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "4-510-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-510-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-512-ConstrainedWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-512-ConstrainedWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnTeamCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnTeamCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnIndexCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnIndexCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnValueCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnValueCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-510-NotExistingTeamCatKeyLabels",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-510-NotExistingTeamCatKeyLabels",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnTeamAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnTeamAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnYearAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnYearAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnValueAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnValueAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-510-NotExistingTeamAvailableQuantityByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-510-NotExistingTeamAvailableQuantityByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-512-AvailableQuantityByYearValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-512-AvailableQuantityByYearValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnTeamMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnTeamMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnYearMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnYearMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-511-MissColumnValueMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-511-MissColumnValueMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-510-NotExistingTeamMinimalQuantityLevelByYear",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-510-NotExistingTeamMinimalQuantityLevelByYear",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-512-MinimalQuantityLevelByYearValueWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-512-MinimalQuantityLevelByYearValueWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "4-512-CostRateWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTeams_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4-512-CostRateWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateTeams_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "4-510-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-512-ConstrainedWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnTeamCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnIndexCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnValueCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-510-NotExistingTeamCatKeyLabels",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnTeamAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnYearAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnValueAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-510-NotExistingTeamAvailableQuantityByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-512-AvailableQuantityByYearValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnTeamMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnYearMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-511-MissColumnValueMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-510-NotExistingTeamMinimalQuantityLevelByYear",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-512-MinimalQuantityLevelByYearValueWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "4-512-CostRateWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateTeams_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateTeams": {},
									"ReadMapCatKeyLabels": {},
									"ReadMapAvailableQuantityByYear": {},
									"ReadMapMinimalQuantityLevelByYear": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "4-HumanResources-Runtime1",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "4-HumanResources/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateTeams_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/4-HumanResources-Runtime1')]",
				"[concat(variables('factoryId'), '/pipelines/4-510-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/4-512-ConstrainedWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnTeamCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnIndexCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnValueCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/4-510-NotExistingTeamCatKeyLabels')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnTeamAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnYearAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnValueAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-510-NotExistingTeamAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-512-AvailableQuantityByYearValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnTeamMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnYearMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-511-MissColumnValueMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-510-NotExistingTeamMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/pipelines/4-512-MinimalQuantityLevelByYearValueWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/4-512-CostRateWrongType')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateTeams_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateTechnicalPolicies_CheckData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateTechnicalPolicies_CheckData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateTechnicalPolicies": {},
									"TechnicalPoliciesStatus": {},
									"UpdateTechnicalPoliciesMapBudgetCategories": {},
									"WriteNotExistingNameRows": {},
									"WriteMissingNameRows": {},
									"WriteEnablePendingActionRemovalWrongTypeRows": {},
									"WriteIsInactiveWrongTypeRows": {},
									"WriteTypeInvalidRangeRows": {},
									"WriteYearEndWrongTypeRows": {},
									"WriteYearStartWrongTypeRows": {},
									"WriteMissingTechnicalPolicyRowsBudgetCategories": {},
									"WriteMissingIndexRowsBudgetCategories": {},
									"WriteMissingValueRowsBudgetCategories": {},
									"WriteNotExistingTechnicalPolicyRowsBudgetCategories": {},
									"WriteNbRepAction1WrongTypeRows": {},
									"WriteNbRepAction1InvalidRangeRows": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "2-540-NotExistingName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-540-NotExistingName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-541-MissColumnName",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-541-MissColumnName",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-542-EnablePendingActionRemovalWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-542-EnablePendingActionRemovalWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-542-IsInactiveWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-542-IsInactiveWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-543-TypeInvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-543-TypeInvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-542-YearEndWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-542-YearEndWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-542-YearStartWrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-542-YearStartWrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-541-MissColumnTechnicalPolicyBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-541-MissColumnTechnicalPolicyBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-541-MissColumnIndexBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-541-MissColumnIndexBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-541-MissColumnValueBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-541-MissColumnValueBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-540-NotExistingTechnicalPolicyBudgetCategories",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-540-NotExistingTechnicalPolicyBudgetCategories",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-542-NbRepAction1WrongType",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-542-NbRepAction1WrongType",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "2-543-NbRepAction1InvalidRange",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UpdateTechnicalPolicies_CheckData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2-543-NbRepAction1InvalidRange",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UpdateTechnicalPolicies_TransformData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "2-540-NotExistingName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-541-MissColumnName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-542-EnablePendingActionRemovalWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-542-IsInactiveWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-543-TypeInvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-542-YearEndWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-542-YearStartWrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-541-MissColumnTechnicalPolicyBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-541-MissColumnIndexBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-541-MissColumnValueBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-540-NotExistingTechnicalPolicyBudgetCategories",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-542-NbRepAction1WrongType",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "2-543-NbRepAction1InvalidRange",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateTechnicalPolicies_TransformData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ReadUpdateTechnicalPolicies": {},
									"ReadMapBudgetCategories": {},
									"WriteToTempRepo": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateTechnicalPolicies_CheckData')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime4')]",
				"[concat(variables('factoryId'), '/pipelines/2-540-NotExistingName')]",
				"[concat(variables('factoryId'), '/pipelines/2-541-MissColumnName')]",
				"[concat(variables('factoryId'), '/pipelines/2-542-EnablePendingActionRemovalWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-542-IsInactiveWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-543-TypeInvalidRange')]",
				"[concat(variables('factoryId'), '/pipelines/2-542-YearEndWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-542-YearStartWrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-541-MissColumnTechnicalPolicyBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-541-MissColumnIndexBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-541-MissColumnValueBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-540-NotExistingTechnicalPolicyBudgetCategories')]",
				"[concat(variables('factoryId'), '/pipelines/2-542-NbRepAction1WrongType')]",
				"[concat(variables('factoryId'), '/pipelines/2-543-NbRepAction1InvalidRange')]",
				"[concat(variables('factoryId'), '/dataflows/UpdateTechnicalPolicies_TransformData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPoliciesCriteriaStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateTechnicalPoliciesCriteriaStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateTechnicalPoliciesCriteriaStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MainStatus": {},
									"CriterionTechnicalPoliciesCriteriastatus": {},
									"TechnicalPolicyTechnicalPoliciesCriteriastatus": {},
									"WriteTechnicalPoliciesCriteriaStatus": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime4",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Status"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateTechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPoliciesMainActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateTechnicalPoliciesMainActionFamiliesStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateTechnicalPoliciesMainActionFamiliesStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MainStatus": {},
									"ActionFamilyTechnicalPoliciesMainActionFamiliesstatus": {},
									"TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus": {},
									"WriteTechnicalPoliciesMainActionFamiliesStatus": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Status"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateTechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPoliciesSecondaryActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UpdateTechnicalPoliciesSecondaryActionFamiliesStatus",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UpdateTechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MainStatus": {},
									"ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus": {},
									"TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus": {},
									"WriteTechnicalPoliciesSecondaryActionFamiliesStatus": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "2-ActivitiesManagement-Runtime3",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "2-ActivitiesManagement/Status"
				},
				"annotations": [],
				"lastPublishTime": ""
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UpdateTechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/2-ActivitiesManagement-Runtime3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_110')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-110",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_111')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-111",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_112')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-112",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_113')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-113",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_120')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-120",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_121')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-121",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_122')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-122",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_123')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-123",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_210')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-210",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_211')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-211",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_212')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-212",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_213')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-213",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_220')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-220",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_221')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-221",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_222')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-222",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_223')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-223",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_230')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-230",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_231')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-231",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_232')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-232",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_233')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-233",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_240')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-240",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_241')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-241",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_242')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-242",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_243')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-243",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_250')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-250",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_251')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-251",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_252')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-252",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_253')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-253",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_310')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-310",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_311')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-311",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_312')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-312",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_313')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-313",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_320')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-320",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_321')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-321",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_322')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-322",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_323')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-323",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_410')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-410",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_411')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-411",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_412')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-412",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_413')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-413",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_420')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-420",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_421')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-421",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_422')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-422",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_423')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-423",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_430')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-430",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_431')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-431",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_432')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-432",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_433')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-433",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_440')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-440",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_441')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-441",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_442')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-442",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_443')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-443",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_450')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-450",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_451')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-451",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_452')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-452",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_453')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-453",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_510')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-510",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_511')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-511",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_512')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-512",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_513')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-513",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_520')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-520",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_521')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-521",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_522')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-522",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/11_523')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "11-523",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_110')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-110",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_111')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-111",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_112')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-112",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_113')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-113",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_210')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-210",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_211')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-211",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_212')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-212",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_213')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-213",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_310')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-310",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_311')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-311",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_312')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-312",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_313')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-313",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_410')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-410",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_411')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-411",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_412')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-412",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_413')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-413",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_510')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-510",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_511')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-511",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_512')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-512",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/12_513')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "12-513",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_110')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-110",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_111')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-111",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_112')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-112",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_113')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-113",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_120')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-120",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_121')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-121",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_122')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-122",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_123')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-123",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_210')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-210",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_211')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-211",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_212')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-212",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_213')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-213",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_220')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-220",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_221')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-221",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_222')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-222",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_223')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-223",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_310')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-310",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_311')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-311",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_312')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-312",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_313')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-313",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_320')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-320",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_321')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-321",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_322')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-322",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_323')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-323",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_410')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-410",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_411')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-411",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_412')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-412",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_413')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-413",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_420')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-420",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_421')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-421",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_422')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-422",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_423')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-423",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_510')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-510",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_511')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-511",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_512')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-512",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_513')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-513",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_520')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-520",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_521')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-521",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_522')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-522",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/1_523')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "1-523",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_110')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-110",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_111')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-111",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_112')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-112",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_113')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-113",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_120')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-120",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_121')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-121",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_122')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-122",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_123')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-123",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_130')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-130",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_131')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-131",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_132')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-132",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_133')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-133",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_140')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-140",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_141')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-141",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_142')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-142",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_143')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-143",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_210')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-210",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_211')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-211",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_212')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-212",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_213')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-213",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_220')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-220",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_221')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-221",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_222')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-222",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_223')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-223",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_230')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-230",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_231')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-231",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_232')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-232",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_233')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-233",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_240')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-240",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_241')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-241",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_242')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-242",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_243')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-243",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_310')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-310",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_311')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-311",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_312')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-312",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_313')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-313",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_320')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-320",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_321')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-321",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_322')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-322",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_323')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-323",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_330')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-330",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_331')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-331",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_332')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-332",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_333')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-333",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_340')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-340",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_341')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-341",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_342')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-342",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_343')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-343",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_410')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-410",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_411')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-411",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_412')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-412",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_413')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-413",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_420')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-420",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_421')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-421",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_422')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-422",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_423')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-423",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_430')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-430",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_431')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-431",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_432')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-432",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_433')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-433",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_440')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-440",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_441')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-441",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_442')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-442",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_443')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-443",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_510')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-510",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_511')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-511",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_512')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-512",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_513')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-513",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_520')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-520",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_521')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-521",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_522')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-522",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_523')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-523",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_530')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-530",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_531')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-531",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_532')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-532",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_533')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-533",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_540')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-540",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_541')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-541",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_542')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-542",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2_543')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "2-543",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_110')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-110",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_111')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-111",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_112')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-112",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_113')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-113",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_310')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-310",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_311')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-311",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_312')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-312",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_313')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-313",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_510')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-510",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_511')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-511",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_512')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-512",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_513')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "3-513",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_110')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-110",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_111')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-111",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_112')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-112",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_113')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-113",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_310')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-310",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_311')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-311",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_312')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-312",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_313')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-313",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_510')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-510",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_511')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-511",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_512')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-512",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4_513')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "4-513",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5_510')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "5-510",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5_511')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "5-511",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5_512')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "5-512",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5_513')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Error"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "5-513",
						"container": "asset-integration-accelerator-error"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActionFamiliesActionTasksStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamiliesActionTasks_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "ActionTask",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActionFamiliesSubActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamiliesSubActionFamilies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "SubActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActionFamilySustainmentActionsActionFamiliesstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamily_SustainmentActionsActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActionFamilyTechnicalPoliciesMainActionFamiliesstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamily_TechnicalPoliciesMainActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamily_TechnicalPoliciesSecondaryActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActionTasksStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionTasks_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_11_AssetPortfolioActivitiesManagement_Runtime1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime1",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_11_AssetPortfolioActivitiesManagement_Runtime2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime2",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_11_AssetPortfolioActivitiesManagement_Runtime3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime3",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_11_AssetPortfolioActivitiesManagement_Runtime4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime4",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_11_AssetPortfolioActivitiesManagement_Runtime5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime5",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_12_ActivitiesManagementHumanResources_Runtime1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_12_ActivitiesManagementHumanResources_Runtime1",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_1_AssetPortfolio_Runtime1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_1_AssetPortfolio_Runtime1",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_1_AssetPortfolio_Runtime2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_1_AssetPortfolio_Runtime2",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_2_ActivitiesManagement_Runtime1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_2_ActivitiesManagement_Runtime1",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_2_ActivitiesManagement_Runtime2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_2_ActivitiesManagement_Runtime2",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_2_ActivitiesManagement_Runtime3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_2_ActivitiesManagement_Runtime3",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_2_ActivitiesManagement_Runtime4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_2_ActivitiesManagement_Runtime4",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_3_Budgets_Runtime1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_3_Budgets_Runtime1",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_4_HumanResources_Runtime1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_4_HumanResources_Runtime1",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate_5_Finance_Runtime1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Activate_5_Finance_Runtime1",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "activate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementCreateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement/Create/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementCreateRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement/Create/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementDeleteEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement/Delete/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementDeleteRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement/Delete/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResourcesCreateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources/Create/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResourcesCreateRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources/Create/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResourcesDeleteEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources/Delete/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResourcesDeleteRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources/Delete/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResourcesUpdateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources/Update/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResources_CreateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources/Create",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResources_DeleteInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources/Delete",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResources_DeleteTempDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementHumanResources_UpdateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagementHumanResources/Update",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagementUpdateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement/Update/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagement_CreateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement/Create",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagement_DeleteInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagement_DeleteTempDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivitiesManagement_UpdateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "ActivitiesManagement/Update",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AgingFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AgingFamilyEquipmentComponentsAgingFamiliesstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamily_EquipmentComponentsAgingFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagementCreateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement/Create/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagementCreateRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement/Create/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagementDeleteEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagementDeleteRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagementUpdateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement/Update/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagement_CreateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagement_DeleteInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagement_DeleteTempDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioActivitiesManagement_UpdateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolioActivitiesManagement/Update",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioCreateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio/Create/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioCreateRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio/Create/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioDeleteEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio/Delete/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioDeleteRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio/Delete/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolioUpdateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio/Update/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolio_CreateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio/Create",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolio_DeleteInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio/Delete",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolio_DeleteTempDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssetPortfolio_UpdateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "AssetPortfolio/Update",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsCreateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets/Create/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsCreateRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets/Create/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsDeleteEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets/Delete/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsDeleteRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets/Delete/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BudgetsUpdateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets/Update/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Budgets_CreateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets/Create",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Budgets_DeleteInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets/Delete",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Budgets_DeleteTempDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Budgets_UpdateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Budgets/Update",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "AssetClass",
						"type": "String"
					},
					{
						"name": "CostsAreCapitalCharges",
						"type": "String"
					},
					{
						"name": "IsLocalAction",
						"type": "String"
					},
					{
						"name": "NeedsOutage",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamiliesActionTasks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamiliesActionTasks.csv",
						"folderPath": "ActivitiesManagementHumanResources/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "ActionTask",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamiliesSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamiliesSubActionFamilies.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "SubActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamilies_MapBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies_MapBudgetCategories.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamilies_MapCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies_MapCostsByRatingLevel.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "RatingLevel",
						"type": "String"
					},
					{
						"name": "UnitProperty",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionTasks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionTasks.csv",
						"folderPath": "ActivitiesManagementHumanResources/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Skill",
						"type": "String"
					},
					{
						"name": "ActionDurationPercentage",
						"type": "String"
					},
					{
						"name": "WorkforceFTE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies.csv",
						"folderPath": "AssetPortfolio/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "AgingMethodology",
						"type": "String"
					},
					{
						"name": "MinimalAge",
						"type": "String"
					},
					{
						"name": "MaximalAge",
						"type": "String"
					},
					{
						"name": "FailureRateAtMinimalAge",
						"type": "String"
					},
					{
						"name": "FailureRateAtMaximalAge",
						"type": "String"
					},
					{
						"name": "ExternalFailureRatePerYear",
						"type": "String"
					},
					{
						"name": "IsQuantityDiscrete",
						"type": "String"
					},
					{
						"name": "GFlag",
						"type": "String"
					},
					{
						"name": "AgingFailureDelay",
						"type": "String"
					},
					{
						"name": "IsAgingAfterDeath",
						"type": "String"
					},
					{
						"name": "MaintenanceIfOutOfOrder",
						"type": "String"
					},
					{
						"name": "Shape",
						"type": "String"
					},
					{
						"name": "Scale",
						"type": "String"
					},
					{
						"name": "ExpectedLife",
						"type": "String"
					},
					{
						"name": "FinancialCostOfFailure",
						"type": "String"
					},
					{
						"name": "EnvironmentalCostOfFailure",
						"type": "String"
					},
					{
						"name": "NetworkCostOfFailure",
						"type": "String"
					},
					{
						"name": "ExtraNL",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateAgingFamilies_MapFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies_MapFamilyPairHillParameters.csv",
						"folderPath": "AssetPortfolio/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgingFamily",
						"type": "String"
					},
					{
						"name": "AgentAgingFamily",
						"type": "String"
					},
					{
						"name": "HillParameters",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateAgingFamilies_MapMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies_MapReferenceCostOfFailure.csv",
						"folderPath": "AssetPortfolio/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgingFamily",
						"type": "String"
					},
					{
						"name": "HealthIndex",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateBudgets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets.csv",
						"folderPath": "Budgets/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "CostType",
						"type": "String"
					},
					{
						"name": "Constrained",
						"type": "String"
					},
					{
						"name": "CostRate",
						"type": "String"
					},
					{
						"name": "Rank",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateBudgets_MapAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets_MapAvailableQuantityByYear.csv",
						"folderPath": "Budgets/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Budget",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateBudgets_MapCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets_MapCatKeyLabels.csv",
						"folderPath": "Budgets/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Budget",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateBudgets_MapMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets_MapMinimalQuantityLevelByYear.csv",
						"folderPath": "Budgets/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Budget",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateCriteria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criteria.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "EquipmentComponentAttribute",
						"type": "String"
					},
					{
						"name": "Operator",
						"type": "String"
					},
					{
						"name": "Threshold",
						"type": "String"
					},
					{
						"name": "ReferenceAttribute",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateCriteria_MapTargetedAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criteria_MapTargetedAgingFamilies.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Criterion",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateCriteria_MapValueAsString')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criteria_MapValueAsString.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Criterion",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents.csv",
						"folderPath": "AssetPortfolio/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "InstallationYear",
						"type": "String"
					},
					{
						"name": "EnvironmentAgingRate",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "HealthScore",
						"type": "String"
					},
					{
						"name": "FinancialConsequencesFactor",
						"type": "String"
					},
					{
						"name": "EnvironmentalConsequencesFactor",
						"type": "String"
					},
					{
						"name": "NetworkConsequencesFactor",
						"type": "String"
					},
					{
						"name": "ExtraArea",
						"type": "String"
					},
					{
						"name": "DateOfLastSpecificAction",
						"type": "String"
					},
					{
						"name": "DateOfLastStateRecording",
						"type": "String"
					},
					{
						"name": "KnownApparentAge",
						"type": "String"
					},
					{
						"name": "CriticalityLevelFailure",
						"type": "String"
					},
					{
						"name": "CriticalityLevelNetworkConstraint",
						"type": "String"
					},
					{
						"name": "ExtraAreaLevel2",
						"type": "String"
					},
					{
						"name": "SAIDI15min",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponentsAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentsAgingFamilies.csv",
						"folderPath": "AssetPortfolio/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponentsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentsEquipmentComponents.csv",
						"folderPath": "AssetPortfolio/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponentSource",
						"type": "String"
					},
					{
						"name": "EquipmentComponentTarget",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponents_MapCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents_MapCustomData_Number.csv",
						"folderPath": "AssetPortfolio/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "CustomData",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponents_MapCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents_MapCustomData_String.csv",
						"folderPath": "AssetPortfolio/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "CustomData",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "AssetClass",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "RatingLevel",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroupsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroupsEquipmentComponents.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentGroup",
						"type": "String"
					},
					{
						"name": "EquipmentComponent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroups_MapBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups_MapBudgetCategories.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentGroup",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroups_MapHRCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups_MapHRCategories.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentGroup",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamilies.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "ImpactMode",
						"type": "String"
					},
					{
						"name": "ImpactOnEquipment",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamiliesAgingFamiliesApplication')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamiliesAgingFamiliesApplication.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubActionFamily",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamiliesAgingFamiliesReplacement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SuBActionFamiliesAgingFamiliesReplacement.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubActionFamily",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActions.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ActivityPlanName",
						"type": "String"
					},
					{
						"name": "PlannedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActionsActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActionsActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActionsEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActionsEquipmentGroups.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "EquipmentGroup",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActions_MapBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActions_MapBudgetCategories.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTeams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams.csv",
						"folderPath": "HumanResources/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Constrained",
						"type": "String"
					},
					{
						"name": "CostRate",
						"type": "String"
					},
					{
						"name": "ExtraArea",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTeams_MapAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams_MapAvailableQuantityByYear.csv",
						"folderPath": "HumanResources/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTeams_MapCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams_MapCatKeyLabels.csv",
						"folderPath": "HumanResources/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTeams_MapMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams_MapMinimalQuantityLevelByYear.csv",
						"folderPath": "HumanResources/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicies.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "AssetClass",
						"type": "String"
					},
					{
						"name": "CriteriaFormula",
						"type": "String"
					},
					{
						"name": "EnablePendingActionRemoval",
						"type": "String"
					},
					{
						"name": "IsInactive",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "YearEnd",
						"type": "String"
					},
					{
						"name": "YearStart",
						"type": "String"
					},
					{
						"name": "NbRepAction1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesCriteria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesCriteria.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "Criterion",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesMainActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesMainActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesSecondaryActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesSecondaryActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPolicies_MapBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicies_MapBudgetCategories.csv",
						"folderPath": "ActivitiesManagement/Create",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CriteriaStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criteria_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CriterionTechnicalPoliciesCriteriastatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criterion_TechnicalPoliciesCriteria_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "Criterion",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamiliesActionTasks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamiliesActionTasks.csv",
						"folderPath": "ActivitiesManagementHumanResources/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "ActionTask",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamiliesSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamiliesSubActionFamilies.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "SubActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionTasks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionTasks.csv",
						"folderPath": "ActivitiesManagementHumanResources/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies.csv",
						"folderPath": "AssetPortfolio/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteBudgets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets.csv",
						"folderPath": "Budgets/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteCriteria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criteria.csv",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents.csv",
						"folderPath": "AssetPortfolio/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponentsAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentsAgingFamilies.csv",
						"folderPath": "AssetPortfolio/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponentsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentsEquipmentComponents.csv",
						"folderPath": "AssetPortfolio/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponentSource",
						"type": "String"
					},
					{
						"name": "EquipmentComponentTarget",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentGroupsEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroupsEquipmentComponents.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentGroup",
						"type": "String"
					},
					{
						"name": "EquipmentComponent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamilies.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamiliesAgingFamiliesApplication')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamiliesAgingFamiliesApplication.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubActionFamily",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamiliesAgingFamiliesReplacement')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SuBActionFamiliesAgingFamiliesReplacement.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubActionFamily",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActions.csv",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActionsActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActionsActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActionsEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActionsEquipmentGroups.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "EquipmentGroup",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTeams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams.csv",
						"folderPath": "HumanResources/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicies.csv",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesCriteria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesCriteria.csv",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "Criterion",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesMainActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesMainActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesSecondaryActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesSecondaryActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Delete",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EquipmentComponentEquipmentComponentsAgingFamiliesstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponent_EquipmentComponentsAgingFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentSource_EquipmentComponentsEquipmentComponents_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponentSource",
						"type": "String"
					},
					{
						"name": "EquipmentComponentTarget",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentTarget_EquipmentComponentsEquipmentComponents_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponentSource",
						"type": "String"
					},
					{
						"name": "EquipmentComponentTarget",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EquipmentComponentsAgingFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentsAgingFamilies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EquipmentComponentsEquipmentComponentsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentsEquipmentComponents_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponentSource",
						"type": "String"
					},
					{
						"name": "EquipmentComponentTarget",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EquipmentComponentsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EquipmentGroupsEquipmentComponentsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroupsEquipmentComponents_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentGroup",
						"type": "String"
					},
					{
						"name": "EquipmentComponent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EquipmentGroupsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinanceCreateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance/Create/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinanceCreateRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance/Create/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinanceDeleteEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance/Delete/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinanceDeleteRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance/Delete/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinanceUpdateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance/Update/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Finance_CreateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance/Create",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Finance_DeleteInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance/Delete",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Finance_DeleteTempDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Finance_UpdateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Finance/Update",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResourcesCreateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources/Create/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResourcesCreateRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources/Create/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResourcesDeleteEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources/Delete/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResourcesDeleteRelationship_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources/Delete/Relationship",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResourcesUpdateEntity_temp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources/Update/Entity",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResources_CreateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources/Create",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResources_DeleteInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources/Delete",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResources_DeleteTempDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HumanResources_UpdateInjectorDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorOutput",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Injector"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "HumanResources/Update",
						"container": "automatic-import"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SubActionFamiliesAgingFamiliesApplicationStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamiliesAgingFamiliesApplication_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubActionFamily",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SubActionFamiliesAgingFamiliesReplacementStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamiliesAgingFamiliesReplacement_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubActionFamily",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SubActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamilies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SustainmentActionSustainmentActionsActionFamiliesstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentAction_SustainmentActionsActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SustainmentActionsActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActionsActionFamilies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SustainmentActionsEquipmentGroupsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActionsEquipmentGroups_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "EquipmentGroup",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SustainmentActionsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActions_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TeamsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TechnicalPoliciesCriteriaStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesCriteria_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "Criterion",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TechnicalPoliciesMainActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesMainActionFamilies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TechnicalPoliciesSecondaryActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesSecondaryActionFamilies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TechnicalPoliciesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/StatusSources"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicies_status.csv",
						"container": "asset-integration-accelerator-status"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TechnicalPolicyTechnicalPoliciesCriteriastatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicy_TechnicalPoliciesCriteria_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "Criterion",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicy_TechnicalPoliciesMainActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicy_TechnicalPoliciesSecondaryActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_ActionFamiliesActionTasksStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamiliesActionTasks_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "ActionTask",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_ActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamiliesSubActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "SubActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_ActionTasksStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionTasks_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_AgingFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_BudgetsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_CriteriaStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criteria_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentsAgingFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponentsEquipmentComponents_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponentSource",
						"type": "String"
					},
					{
						"name": "EquipmentComponentTarget",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_EquipmentComponentsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroupsEquipmentComponents_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentGroup",
						"type": "String"
					},
					{
						"name": "EquipmentComponent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_EquipmentGroupsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_Global')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamiliesAgingFamiliesApplication_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubActionFamily",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamiliesAgingFamiliesReplacement_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SubActionFamily",
						"type": "String"
					},
					{
						"name": "AgingFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_SubActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_SustainmentActionsActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActionsActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActionsEquipmentGroups_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "EquipmentGroup",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_SustainmentActionsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActions_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_TeamsStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_TechnicalPoliciesCriteriaStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesCriteria_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "Criterion",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesMainActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPoliciesSecondaryActionFamilies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "ActionFamily",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempInput_TechnicalPoliciesStatus')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicies_status.csv",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TempOutput_Status')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "00-Status/Temp"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Status",
						"container": "asset-integration-accelerator-temp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "AssetClass",
						"type": "String"
					},
					{
						"name": "CostsAreCapitalCharges",
						"type": "String"
					},
					{
						"name": "IsLocalAction",
						"type": "String"
					},
					{
						"name": "NeedsOutage",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionFamilies_MapBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies_MapBudgetCategories.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionFamilies_MapCostsByRatingLevel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionFamilies_MapCostsByRatingLevel.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ActionFamily",
						"type": "String"
					},
					{
						"name": "RatingLevel",
						"type": "String"
					},
					{
						"name": "UnitProperty",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionTasks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ActionTasks.csv",
						"folderPath": "ActivitiesManagementHumanResources/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Skill",
						"type": "String"
					},
					{
						"name": "ActionDurationPercentage",
						"type": "String"
					},
					{
						"name": "WorkforceFTE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies.csv",
						"folderPath": "AssetPortfolio/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "AgingMethodology",
						"type": "String"
					},
					{
						"name": "MinimalAge",
						"type": "String"
					},
					{
						"name": "MaximalAge",
						"type": "String"
					},
					{
						"name": "FailureRateAtMinimalAge",
						"type": "String"
					},
					{
						"name": "FailureRateAtMaximalAge",
						"type": "String"
					},
					{
						"name": "ExternalFailureRatePerYear",
						"type": "String"
					},
					{
						"name": "IsQuantityDiscrete",
						"type": "String"
					},
					{
						"name": "GFlag",
						"type": "String"
					},
					{
						"name": "AgingFailureDelay",
						"type": "String"
					},
					{
						"name": "IsAgingAfterDeath",
						"type": "String"
					},
					{
						"name": "MaintenanceIfOutOfOrder",
						"type": "String"
					},
					{
						"name": "Shape",
						"type": "String"
					},
					{
						"name": "Scale",
						"type": "String"
					},
					{
						"name": "ExpectedLife",
						"type": "String"
					},
					{
						"name": "FinancialCostOfFailure",
						"type": "String"
					},
					{
						"name": "EnvironmentalCostOfFailure",
						"type": "String"
					},
					{
						"name": "NetworkCostOfFailure",
						"type": "String"
					},
					{
						"name": "ExtraNL",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamilies_MapFamilyPairHillParameters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies_MapFamilyPairHillParameters.csv",
						"folderPath": "AssetPortfolio/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgingFamily",
						"type": "String"
					},
					{
						"name": "AgentAgingFamily",
						"type": "String"
					},
					{
						"name": "HillParameters",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamilies_MapMapReferenceCostOfFailure')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies_MapReferenceCostOfFailure.csv",
						"folderPath": "AssetPortfolio/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AgingFamily",
						"type": "String"
					},
					{
						"name": "HealthIndex",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamily')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "5-Finance/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AgingFamilies.csv",
						"folderPath": "Finance/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "RawInvestment",
						"type": "String"
					},
					{
						"name": "LifeSpan",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateBudgets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets.csv",
						"folderPath": "Budgets/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "CostType",
						"type": "String"
					},
					{
						"name": "Constrained",
						"type": "String"
					},
					{
						"name": "CostRate",
						"type": "String"
					},
					{
						"name": "Rank",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateBudgets_MapAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets_MapAvailableQuantityByYear.csv",
						"folderPath": "Budgets/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Budget",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateBudgets_MapCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets_MapCatKeyLabels.csv",
						"folderPath": "Budgets/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Budget",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateBudgets_MapMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3-Budgets/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budgets_MapMinimalQuantityLevelByYear.csv",
						"folderPath": "Budgets/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Budget",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateCriteria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criteria.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "EquipmentComponentAttribute",
						"type": "String"
					},
					{
						"name": "Operator",
						"type": "String"
					},
					{
						"name": "Threshold",
						"type": "String"
					},
					{
						"name": "ReferenceAttribute",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateCriteria_MapValueAsString')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Criteria_MapValueAsString.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Criterion",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponents')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents.csv",
						"folderPath": "AssetPortfolio/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "InstallationYear",
						"type": "String"
					},
					{
						"name": "EnvironmentAgingRate",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "HealthScore",
						"type": "String"
					},
					{
						"name": "FinancialConsequencesFactor",
						"type": "String"
					},
					{
						"name": "EnvironmentalConsequencesFactor",
						"type": "String"
					},
					{
						"name": "NetworkConsequencesFactor",
						"type": "String"
					},
					{
						"name": "ExtraArea",
						"type": "String"
					},
					{
						"name": "DateOfLastSpecificAction",
						"type": "String"
					},
					{
						"name": "DateOfLastStateRecording",
						"type": "String"
					},
					{
						"name": "KnownApparentAge",
						"type": "String"
					},
					{
						"name": "CriticalityLevelFailure",
						"type": "String"
					},
					{
						"name": "CriticalityLevelNetworkConstraint",
						"type": "String"
					},
					{
						"name": "ExtraAreaLevel2",
						"type": "String"
					},
					{
						"name": "SAIDI15min",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponents_MapCustomDataNumber')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents_MapCustomData_Number.csv",
						"folderPath": "AssetPortfolio/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "CustomData",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponents_MapCustomDataString')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentComponents_MapCustomData_String.csv",
						"folderPath": "AssetPortfolio/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentComponent",
						"type": "String"
					},
					{
						"name": "CustomData",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentGroups')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "AssetClass",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "RatingLevel",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentGroups_MapBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups_MapBudgetCategories.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentGroup",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentGroups_MapHRCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EquipmentGroups_MapHRCategories.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "EquipmentGroup",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSubActionFamilies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SubActionFamilies.csv",
						"folderPath": "AssetPortfolioActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "ImpactMode",
						"type": "String"
					},
					{
						"name": "ImpactOnEquipment",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSustainmentActions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActions.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "ActivityPlanName",
						"type": "String"
					},
					{
						"name": "PlannedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSustainmentActions_MapBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SustainmentActions_MapBudgetCategories.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SustainmentAction",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTeams')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams.csv",
						"folderPath": "HumanResources/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Constrained",
						"type": "String"
					},
					{
						"name": "CostRate",
						"type": "String"
					},
					{
						"name": "ExtraArea",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTeams_MapAvailableQuantityByYear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams_MapAvailableQuantityByYear.csv",
						"folderPath": "HumanResources/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTeams_MapCatKeyLabels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams_MapCatKeyLabels.csv",
						"folderPath": "HumanResources/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTeams_MapMinimalQuantityLevelByYear')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "4-HumanResources/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Teams_MapMinimalQuantityLevelByYear.csv",
						"folderPath": "HumanResources/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Team",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPolicies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicies.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "AssetClass",
						"type": "String"
					},
					{
						"name": "CriteriaFormula",
						"type": "String"
					},
					{
						"name": "EnablePendingActionRemoval",
						"type": "String"
					},
					{
						"name": "IsInactive",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "YearEnd",
						"type": "String"
					},
					{
						"name": "YearStart",
						"type": "String"
					},
					{
						"name": "NbRepAction1",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPolicies_MapBudgetCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AcceleratorStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TechnicalPolicies_MapBudgetCategories.csv",
						"folderPath": "ActivitiesManagement/Update",
						"container": "asset-integration-accelerator-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TechnicalPolicy",
						"type": "String"
					},
					{
						"name": "Index",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AcceleratorStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AcceleratorOutput')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AcceleratorOutput_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AcceleratorStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The storage use to stock the input format of the accelerators and the temp file",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AcceleratorStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-AssetPortfolio-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1-AssetPortfolio-Runtime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-AssetPortfolioActivitiesManagement-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-AssetPortfolioActivitiesManagement-Runtime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-AssetPortfolioActivitiesManagement-Runtime3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-AssetPortfolioActivitiesManagement-Runtime4')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/11-AssetPortfolioActivitiesManagement-Runtime5')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/12-ActivitiesManagementHumanResources-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-ActivitiesManagement-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-ActivitiesManagement-Runtime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-ActivitiesManagement-Runtime3')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2-ActivitiesManagement-Runtime4')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3-Budgets-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/4-HumanResources-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/5-Finance-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 16,
							"timeToLive": 30,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-1-AssetPortfolio-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_1_AssetPortfolio_Runtime1",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_1_AssetPortfolio_Runtime1",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_1_AssetPortfolio_Runtime1'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_1_AssetPortfolio_Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-1-AssetPortfolio-Runtime2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_1_AssetPortfolio_Runtime2",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_1_AssetPortfolio_Runtime2",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_1_AssetPortfolio_Runtime2'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_1_AssetPortfolio_Runtime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-11-AssetPortfolioActivitiesManagement-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime1",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime1",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_11_AssetPortfolioActivitiesManagement_Runtime1'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_11_AssetPortfolioActivitiesManagement_Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-11-AssetPortfolioActivitiesManagement-Runtime2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime2",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime2",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_11_AssetPortfolioActivitiesManagement_Runtime2'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_11_AssetPortfolioActivitiesManagement_Runtime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-11-AssetPortfolioActivitiesManagement-Runtime3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime3",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime3",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_11_AssetPortfolioActivitiesManagement_Runtime3'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_11_AssetPortfolioActivitiesManagement_Runtime3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-11-AssetPortfolioActivitiesManagement-Runtime4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime4",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime4",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_11_AssetPortfolioActivitiesManagement_Runtime4'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_11_AssetPortfolioActivitiesManagement_Runtime4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-11-AssetPortfolioActivitiesManagement-Runtime5')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime5",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_11_AssetPortfolioActivitiesManagement_Runtime5",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_11_AssetPortfolioActivitiesManagement_Runtime5'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_11_AssetPortfolioActivitiesManagement_Runtime5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-12-ActivitiesManagementHumanResources-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_12_ActivitiesManagementHumanResources_Runtime1",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_12_ActivitiesManagementHumanResources_Runtime1",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_12_ActivitiesManagementHumanResources_Runtime1'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_12_ActivitiesManagementHumanResources_Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-2-ActivitiesManagement-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_2_ActivitiesManagement_Runtime1",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_2_ActivitiesManagement_Runtime1",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_2_ActivitiesManagement_Runtime1'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_2_ActivitiesManagement_Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-2-ActivitiesManagement-Runtime2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_2_ActivitiesManagement_Runtime2",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_2_ActivitiesManagement_Runtime2",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_2_ActivitiesManagement_Runtime2'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_2_ActivitiesManagement_Runtime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-2-ActivitiesManagement-Runtime3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_2_ActivitiesManagement_Runtime3",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_2_ActivitiesManagement_Runtime3",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_2_ActivitiesManagement_Runtime3'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_2_ActivitiesManagement_Runtime3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-2-ActivitiesManagement-Runtime4')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_2_ActivitiesManagement_Runtime4",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_2_ActivitiesManagement_Runtime4",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_2_ActivitiesManagement_Runtime4'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_2_ActivitiesManagement_Runtime4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-3-Budgets-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_3_Budgets_Runtime1",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_3_Budgets_Runtime1",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_3_Budgets_Runtime1'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_3_Budgets_Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-4-HumanResources-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_4_HumanResources_Runtime1",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_4_HumanResources_Runtime1",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_4_HumanResources_Runtime1'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_4_HumanResources_Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Activate-5-Finance-Runtime1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "IntegrationRuntimeActivator"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Activate_5_Finance_Runtime1",
								"type": "DatasetReference"
							},
							"name": "ReadActivationDataset"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Activate_5_Finance_Runtime1",
								"type": "DatasetReference"
							},
							"name": "WriteActivationFile"
						}
					],
					"transformations": [
						{
							"name": "AddActivationColumn"
						}
					],
					"script": "source(output(\n\t\tactivate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadActivationDataset\nReadActivationDataset derive(dataset_column = 1) ~> AddActivationColumn\nAddActivationColumn sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tactivate as string\n\t),\n\tpartitionFileNames:['Activate_5_Finance_Runtime1'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActivationFile"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Activate_5_Finance_Runtime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamiliesActionTasks_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateActionFamiliesActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadCreateActionFamiliesActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ActionTasksStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesActionTasksStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "12_210",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "12_210",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionTaskRows"
						},
						{
							"dataset": {
								"referenceName": "12_211",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "12_211",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionTaskRows"
						},
						{
							"dataset": {
								"referenceName": "12_210",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingActionFamilyRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingActionFamilyInActionFamiliesStatus"
						},
						{
							"name": "ExistingActionTaskInActionTasksStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusActionFamilyActionTaskUniquenessCheckInActionFamiliesActionTasksStatus"
						}
					],
					"script": "source(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateActionFamiliesActionTasks\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionTasksStatus\nsource(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesActionTasksStatus\nReadCreateActionFamiliesActionTasks, ActionFamiliesStatus exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingActionFamilyInActionFamiliesStatus\nReadCreateActionFamiliesActionTasks, ActionTasksStatus exists(ActionTask == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingActionTaskInActionTasksStatus\nReadCreateActionFamiliesActionTasks split(isNull(ActionFamily),\n\tisNull(ActionTask),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingActionFamily, MissingActionTask)\nReadCreateActionFamiliesActionTasks, ActionFamiliesActionTasksStatus exists(ReadCreateActionFamiliesActionTasks@ActionFamily == ActionFamiliesActionTasksStatus@ActionFamily && ReadCreateActionFamiliesActionTasks@ActionTask == ActionFamiliesActionTasksStatus@ActionTask,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusActionFamilyActionTaskUniquenessCheckInActionFamiliesActionTasksStatus\nExistingActionFamilyInActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-210-NotExistingActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRows\nExistingActionTaskInActionTasksStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-210-NotExistingActionTask.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionTaskRows\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-211-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nCheckMandatoryData@MissingActionTask sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-211-MissColumnActionTask.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionTaskRows\nStatusActionFamilyActionTaskUniquenessCheckInActionFamiliesActionTasksStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-210-AlreadyExistActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingActionFamilyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamiliesActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/12_210')]",
				"[concat(variables('factoryId'), '/datasets/12_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamiliesActionTasks_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateActionFamiliesActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadCreateActionFamiliesActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesActionTasksStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementHumanResourcesCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesActionTasksStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesActionTasksStatusEditor"
						}
					],
					"script": "source(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateActionFamiliesActionTasks\nsource(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesActionTasksStatusEditor\nReadCreateActionFamiliesActionTasks select(mapColumn(\n\t\t{$sourceId} = ActionFamily,\n\t\t{$targetId} = ActionTask\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'contains_ActionTask',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateActionFamiliesActionTasks select(mapColumn(\n\t\tActionFamily,\n\t\tActionTask\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesActionTasksStatusEditor\nReadTempStatusActionFamiliesActionTasksStatusEditor, StatusColumnSelectionActionFamiliesActionTasksStatusEditor union(byName: true)~> StatusUpdateActionFamiliesActionTasksStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionFamiliesActionTasks.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateActionFamiliesActionTasksStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamiliesActionTasks_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamiliesActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamiliesSubActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateActionFamiliesSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateActionFamiliesSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesSubActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_210",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_210",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_211",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_211",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_210",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingActionFamilyRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingActionFamilyInActionFamiliesStatus"
						},
						{
							"name": "ExistingSubActionFamilyInSubActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusActionFamilySubActionFamilyUniquenessCheckInActionFamiliesSubActionFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateActionFamiliesSubActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesStatus\nsource(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesSubActionFamiliesStatus\nReadCreateActionFamiliesSubActionFamilies, ActionFamiliesStatus exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingActionFamilyInActionFamiliesStatus\nReadCreateActionFamiliesSubActionFamilies, SubActionFamiliesStatus exists(SubActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingSubActionFamilyInSubActionFamiliesStatus\nReadCreateActionFamiliesSubActionFamilies split(isNull(ActionFamily),\n\tisNull(SubActionFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingActionFamily, MissingSubActionFamily)\nReadCreateActionFamiliesSubActionFamilies, ActionFamiliesSubActionFamiliesStatus exists(ReadCreateActionFamiliesSubActionFamilies@ActionFamily == ActionFamiliesSubActionFamiliesStatus@ActionFamily && ReadCreateActionFamiliesSubActionFamilies@SubActionFamily == ActionFamiliesSubActionFamiliesStatus@SubActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusActionFamilySubActionFamilyUniquenessCheckInActionFamiliesSubActionFamiliesStatus\nExistingActionFamilyInActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-210-NotExistingActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRows\nExistingSubActionFamilyInSubActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-210-NotExistingSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSubActionFamilyRows\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-211-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nCheckMandatoryData@MissingSubActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-211-MissColumnSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSubActionFamilyRows\nStatusActionFamilySubActionFamilyUniquenessCheckInActionFamiliesSubActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-210-AlreadyExistActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingActionFamilyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamiliesSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_210')]",
				"[concat(variables('factoryId'), '/datasets/11_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamiliesSubActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateActionFamiliesSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateActionFamiliesSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateActionFamiliesSubActionFamilies\nsource(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor\nReadCreateActionFamiliesSubActionFamilies select(mapColumn(\n\t\t{$sourceId} = ActionFamily,\n\t\t{$targetId} = SubActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'contains_SubActionFamily',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateActionFamiliesSubActionFamilies select(mapColumn(\n\t\tActionFamily,\n\t\tSubActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor\nReadTempStatusActionFamiliesSubActionFamiliesStatusEditor, StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor union(byName: true)~> StatusUpdateActionFamiliesSubActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionFamiliesSubActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateActionFamiliesSubActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamiliesSubActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamiliesSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateActionFamilies_MapCostsByRatingLevel",
								"type": "DatasetReference"
							},
							"name": "CreateActionFamiliesMapCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "CreateActionFamilies_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "CreateActionFamiliesMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_110",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference"
							},
							"name": "WriteCostsAreCapitalChargesWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingRatingLevelRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingUnitPropertyRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_113",
								"type": "DatasetReference"
							},
							"name": "WriteUnitPropertyCostsByRatingLevelInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference"
							},
							"name": "WriteSupplierCostWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference"
							},
							"name": "WriteDurationWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference"
							},
							"name": "WriteIsLocalActionWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_112",
								"type": "DatasetReference"
							},
							"name": "WriteNeedsOutageWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRowsBudgetCategories"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullCostsAreCapitalCharges"
						},
						{
							"name": "CostsAreCapitalChargesTypeCheck"
						},
						{
							"name": "MapCostsByRatingLevelMandatoryCheck"
						},
						{
							"name": "MapCostsByRatingLevelExistenceCheck"
						},
						{
							"name": "NonNullEnumUnitPropertyCostsByRatingLevel"
						},
						{
							"name": "UnitPropertyCostsByRatingLevelEnumCheck"
						},
						{
							"name": "MapCostsByRatingLevelSplitKeyValues"
						},
						{
							"name": "NonNullSupplierCost"
						},
						{
							"name": "SupplierCostTypeCheck"
						},
						{
							"name": "NonNullDuration"
						},
						{
							"name": "DurationTypeCheck"
						},
						{
							"name": "NonNullIsLocalAction"
						},
						{
							"name": "IsLocalActionTypeCheck"
						},
						{
							"name": "NonNullNeedsOutage"
						},
						{
							"name": "NeedsOutageTypeCheck"
						},
						{
							"name": "MapBudgetCategoriesMandatoryCheck"
						},
						{
							"name": "MapBudgetCategoriesExistenceCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tCostsAreCapitalCharges as string,\n\t\tIsLocalAction as string,\n\t\tNeedsOutage as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesStatus\nsource(output(\n\t\tActionFamily as string,\n\t\tRatingLevel as string,\n\t\tUnitProperty as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateActionFamiliesMapCostsByRatingLevel\nsource(output(\n\t\tActionFamily as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateActionFamiliesMapBudgetCategories\nReadCreateActionFamilies aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateActionFamilies, ActionFamiliesStatus exists(ReadCreateActionFamilies@Name == ActionFamiliesStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInActionFamiliesStatus\nReadCreateActionFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateActionFamilies filter(not(isNull(CostsAreCapitalCharges))) ~> NonNullCostsAreCapitalCharges\nNonNullCostsAreCapitalCharges split(not(isBoolean(CostsAreCapitalCharges)),\n\tdisjoint: false) ~> CostsAreCapitalChargesTypeCheck@(CostsAreCapitalChargesWrongType)\nCreateActionFamiliesMapCostsByRatingLevel split(isNull(ActionFamily),\n\tisNull(RatingLevel),\n\tisNull(UnitProperty),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCostsByRatingLevelMandatoryCheck@(MissingActionFamily, MissingRatingLevel, MissingUnitProperty, MissingValue)\nCreateActionFamiliesMapCostsByRatingLevel, ReadCreateActionFamilies exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCostsByRatingLevelExistenceCheck\nCreateActionFamiliesMapCostsByRatingLevel filter(not(isNull(UnitProperty))) ~> NonNullEnumUnitPropertyCostsByRatingLevel\nNonNullEnumUnitPropertyCostsByRatingLevel filter(not(in(['SupplierCost', 'Duration'], UnitProperty))) ~> UnitPropertyCostsByRatingLevelEnumCheck\nCreateActionFamiliesMapCostsByRatingLevel split(UnitProperty == 'SupplierCost',\n\tUnitProperty == 'Duration',\n\tdisjoint: false) ~> MapCostsByRatingLevelSplitKeyValues@(UnitPropertySupplierCost, UnitPropertyDuration)\nMapCostsByRatingLevelSplitKeyValues@UnitPropertySupplierCost filter(not(isNull(Value))) ~> NonNullSupplierCost\nNonNullSupplierCost split(not(isFloat(Value)),\n\tdisjoint: false) ~> SupplierCostTypeCheck@(SupplierCostWrongType)\nMapCostsByRatingLevelSplitKeyValues@UnitPropertyDuration filter(not(isNull(Value))) ~> NonNullDuration\nNonNullDuration split(not(isFloat(Value)),\n\tdisjoint: false) ~> DurationTypeCheck@(DurationWrongType)\nReadCreateActionFamilies filter(not(isNull(IsLocalAction))) ~> NonNullIsLocalAction\nNonNullIsLocalAction split(not(isBoolean(IsLocalAction)),\n\tdisjoint: false) ~> IsLocalActionTypeCheck@(IsLocalActionWrongType)\nReadCreateActionFamilies filter(not(isNull(NeedsOutage))) ~> NonNullNeedsOutage\nNonNullNeedsOutage split(not(isBoolean(NeedsOutage)),\n\tdisjoint: false) ~> NeedsOutageTypeCheck@(NeedsOutageWrongType)\nCreateActionFamiliesMapBudgetCategories split(isNull(ActionFamily),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapBudgetCategoriesMandatoryCheck@(MissingActionFamily, MissingIndex, MissingValue)\nCreateActionFamiliesMapBudgetCategories, ReadCreateActionFamilies exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapBudgetCategoriesExistenceCheck\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-110-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-110-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-111-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nCostsAreCapitalChargesTypeCheck@CostsAreCapitalChargesWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-112-CostsAreCapitalChargesWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCostsAreCapitalChargesWrongTypeRows\nMapCostsByRatingLevelMandatoryCheck@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-111-MissColumnActionFamilyCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRowsCostsByRatingLevel\nMapCostsByRatingLevelMandatoryCheck@MissingRatingLevel sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-111-MissColumnRatingLevelCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingRatingLevelRowsCostsByRatingLevel\nMapCostsByRatingLevelMandatoryCheck@MissingUnitProperty sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-111-MissColumnUnitPropertyCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingUnitPropertyRowsCostsByRatingLevel\nMapCostsByRatingLevelMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-111-MissColumnValueCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCostsByRatingLevel\nMapCostsByRatingLevelExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-110-NotExistingActionFamilyCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRowsCostsByRatingLevel\nUnitPropertyCostsByRatingLevelEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-113-UnitPropertyCostsByRatingLevelInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteUnitPropertyCostsByRatingLevelInvalidRangeRows\nSupplierCostTypeCheck@SupplierCostWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-112-SupplierCostWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteSupplierCostWrongTypeRows\nDurationTypeCheck@DurationWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-112-DurationWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteDurationWrongTypeRows\nIsLocalActionTypeCheck@IsLocalActionWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-112-IsLocalActionWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsLocalActionWrongTypeRows\nNeedsOutageTypeCheck@NeedsOutageWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-112-NeedsOutageWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNeedsOutageWrongTypeRows\nMapBudgetCategoriesMandatoryCheck@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-111-MissColumnActionFamilyBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-111-MissColumnIndexBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-111-MissColumnValueBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsBudgetCategories\nMapBudgetCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-110-NotExistingActionFamilyBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRowsBudgetCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateActionFamilies_MapCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/datasets/CreateActionFamilies_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/2_110')]",
				"[concat(variables('factoryId'), '/datasets/2_111')]",
				"[concat(variables('factoryId'), '/datasets/2_112')]",
				"[concat(variables('factoryId'), '/datasets/2_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "CreateActionFamilies_MapCostsByRatingLevel",
								"type": "DatasetReference"
							},
							"name": "ReadMapCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "CreateActionFamilies_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "MapCostsByRatingLevelKeyUnitPropertySplitByType"
						},
						{
							"name": "AggregateMapCostsByRatingLevelKeyUnitPropertySplitByfloat"
						},
						{
							"name": "MapCostsByRatingLevelKeyUnitPropertyUnionAllTypes"
						},
						{
							"name": "AggregateMapCostsByRatingLevelKeyUnitPropertyAllTypes"
						},
						{
							"name": "DeriveMapCostsByRatingLevelKeyUnitPropertyAllTypes"
						},
						{
							"name": "AggregateMapCostsByRatingLevelKeyRatingLevel"
						},
						{
							"name": "CostsByRatingLevelCleaning"
						},
						{
							"name": "CostsByRatingLevelUnion"
						},
						{
							"name": "CostsByRatingLevelSelect"
						},
						{
							"name": "AggregateMapBudgetCategoriesKeyIndex"
						},
						{
							"name": "BudgetCategoriesCleaning"
						},
						{
							"name": "BudgetCategoriesUnion"
						},
						{
							"name": "BudgetCategoriesSelect"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tCostsAreCapitalCharges as string,\n\t\tIsLocalAction as string,\n\t\tNeedsOutage as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateActionFamilies\nsource(output(\n\t\tActionFamily as string,\n\t\tRatingLevel as string,\n\t\tUnitProperty as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCostsByRatingLevel\nsource(output(\n\t\tActionFamily as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapBudgetCategories\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesStatusEditor\nReadCreateActionFamilies select(mapColumn(\n\t\t{$id} = Name,\n\t\tAssetClass,\n\t\tCostsAreCapitalCharges,\n\t\tIsLocalAction,\n\t\tNeedsOutage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:ActionFamily;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapCostsByRatingLevel split(in(['SupplierCost','Duration'], UnitProperty),\n\tdisjoint: false) ~> MapCostsByRatingLevelKeyUnitPropertySplitByType@(MapCostsByRatingLevelKeyUnitPropertySplitByfloat)\nMapCostsByRatingLevelKeyUnitPropertySplitByType@MapCostsByRatingLevelKeyUnitPropertySplitByfloat aggregate(groupBy(ActionFamily,\n\t\tRatingLevel),\n\tCostsByRatingLevel = dropRight(dropLeft(toString(keyValues(collect(toString(UnitProperty)), collect(toFloat(Value)))) ,1), 1)) ~> AggregateMapCostsByRatingLevelKeyUnitPropertySplitByfloat\nAggregateMapCostsByRatingLevelKeyUnitPropertySplitByfloat union(byName: true)~> MapCostsByRatingLevelKeyUnitPropertyUnionAllTypes\nMapCostsByRatingLevelKeyUnitPropertyUnionAllTypes aggregate(groupBy(ActionFamily,\n\t\tRatingLevel),\n\tCostsByRatingLevel = collect(CostsByRatingLevel)) ~> AggregateMapCostsByRatingLevelKeyUnitPropertyAllTypes\nAggregateMapCostsByRatingLevelKeyUnitPropertyAllTypes derive(CostsByRatingLevel = '{' + concatWS(',', CostsByRatingLevel[1]) + '}') ~> DeriveMapCostsByRatingLevelKeyUnitPropertyAllTypes\nDeriveMapCostsByRatingLevelKeyUnitPropertyAllTypes aggregate(groupBy(ActionFamily),\n\tCostsByRatingLevel = toString(keyValues(collect(toString(RatingLevel)), collect(toString(CostsByRatingLevel))))) ~> AggregateMapCostsByRatingLevelKeyRatingLevel\nAggregateMapCostsByRatingLevelKeyRatingLevel derive(CostsByRatingLevel = replace(replace(replace(CostsByRatingLevel, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CostsByRatingLevelCleaning\nModelDefinition, CostsByRatingLevelCleaning join({$id} == ActionFamily,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CostsByRatingLevelUnion\nCostsByRatingLevelUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tCostsAreCapitalCharges,\n\t\tIsLocalAction,\n\t\tNeedsOutage,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCostsByRatingLevel\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CostsByRatingLevelSelect\nReadMapBudgetCategories aggregate(groupBy(ActionFamily),\n\tBudgetCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapBudgetCategoriesKeyIndex\nAggregateMapBudgetCategoriesKeyIndex derive(BudgetCategories = replace(replace(replace(BudgetCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> BudgetCategoriesCleaning\nCostsByRatingLevelSelect, BudgetCategoriesCleaning join({$id} == ActionFamily,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> BudgetCategoriesUnion\nBudgetCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tCostsAreCapitalCharges,\n\t\tIsLocalAction,\n\t\tNeedsOutage,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCostsByRatingLevel,\n\t\tBudgetCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BudgetCategoriesSelect\nReadCreateActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesStatusEditor\nReadTempStatusActionFamiliesStatusEditor, StatusColumnSelectionActionFamiliesStatusEditor union(byName: true)~> StatusUpdateActionFamiliesStatusEditor\nBudgetCategoriesSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/CreateActionFamilies_MapCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/datasets/CreateActionFamilies_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionTasks_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadCreateActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ActionTasksStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "12_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "12_110",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "12_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "12_112",
								"type": "DatasetReference"
							},
							"name": "WriteActionDurationPercentageWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "12_113",
								"type": "DatasetReference"
							},
							"name": "WriteActionDurationPercentageInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "12_112",
								"type": "DatasetReference"
							},
							"name": "WriteWorkforceFTEWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "12_113",
								"type": "DatasetReference"
							},
							"name": "WriteWorkforceFTEInvalidRangeRows"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInActionTasksStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullActionDurationPercentage"
						},
						{
							"name": "ActionDurationPercentageTypeCheck"
						},
						{
							"name": "ActionDurationPercentageRangeCheck"
						},
						{
							"name": "NonNullWorkforceFTE"
						},
						{
							"name": "WorkforceFTETypeCheck"
						},
						{
							"name": "WorkforceFTERangeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tSkill as string,\n\t\tActionDurationPercentage as string,\n\t\tWorkforceFTE as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateActionTasks\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionTasksStatus\nReadCreateActionTasks aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateActionTasks, ActionTasksStatus exists(ReadCreateActionTasks@Name == ActionTasksStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInActionTasksStatus\nReadCreateActionTasks split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateActionTasks filter(not(isNull(ActionDurationPercentage))) ~> NonNullActionDurationPercentage\nNonNullActionDurationPercentage split(not(isInteger(ActionDurationPercentage)),\n\tdisjoint: false) ~> ActionDurationPercentageTypeCheck@(ActionDurationPercentageWrongType, ActionDurationPercentageCorrectType)\nActionDurationPercentageTypeCheck@ActionDurationPercentageCorrectType filter(or(toInteger(ActionDurationPercentage) < 0.0, toInteger(ActionDurationPercentage) > 100.0)) ~> ActionDurationPercentageRangeCheck\nReadCreateActionTasks filter(not(isNull(WorkforceFTE))) ~> NonNullWorkforceFTE\nNonNullWorkforceFTE split(not(isFloat(WorkforceFTE)),\n\tdisjoint: false) ~> WorkforceFTETypeCheck@(WorkforceFTEWrongType, WorkforceFTECorrectType)\nWorkforceFTETypeCheck@WorkforceFTECorrectType filter(toFloat(WorkforceFTE) < 0.0) ~> WorkforceFTERangeCheck\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-110-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInActionTasksStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-110-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-111-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nActionDurationPercentageTypeCheck@ActionDurationPercentageWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-112-ActionDurationPercentageWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActionDurationPercentageWrongTypeRows\nActionDurationPercentageRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-113-ActionDurationPercentageInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActionDurationPercentageInvalidRangeRows\nWorkforceFTETypeCheck@WorkforceFTEWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-112-WorkforceFTEWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteWorkforceFTEWrongTypeRows\nWorkforceFTERangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-113-WorkforceFTEInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteWorkforceFTEInvalidRangeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/12_110')]",
				"[concat(variables('factoryId'), '/datasets/12_111')]",
				"[concat(variables('factoryId'), '/datasets/12_112')]",
				"[concat(variables('factoryId'), '/datasets/12_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateActionTasks_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadCreateActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionTasksStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementHumanResourcesCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionTasksStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionActionTasksStatusEditor"
						},
						{
							"name": "StatusUpdateActionTasksStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tSkill as string,\n\t\tActionDurationPercentage as string,\n\t\tWorkforceFTE as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateActionTasks\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionTasksStatusEditor\nReadCreateActionTasks select(mapColumn(\n\t\t{$id} = Name,\n\t\tSkill,\n\t\tActionDurationPercentage,\n\t\tWorkforceFTE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:ActionTask;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadCreateActionTasks select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionTasksStatusEditor\nReadTempStatusActionTasksStatusEditor, StatusColumnSelectionActionTasksStatusEditor union(byName: true)~> StatusUpdateActionTasksStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionTasks.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateActionTasksStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionTasks_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionTasksStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateAgingFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "AgingFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateAgingFamilies_MapFamilyPairHillParameters",
								"type": "DatasetReference"
							},
							"name": "CreateAgingFamiliesMapFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "CreateAgingFamilies_MapMapReferenceCostOfFailure",
								"type": "DatasetReference"
							},
							"name": "CreateAgingFamiliesMapMapReferenceCostOfFailure"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_120",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_123",
								"type": "DatasetReference"
							},
							"name": "WriteAgingMethodologyInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteMinimalAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteMaximalAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteFailureRateAtMinimalAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteFailureRateAtMaximalAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteExternalFailureRatePerYearWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_123",
								"type": "DatasetReference"
							},
							"name": "WriteExternalFailureRatePerYearInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteIsQuantityDiscreteWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteGFlagWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteAgingFailureDelayWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgentAgingFamilyRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingHillParametersRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingAgingFamilyRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_123",
								"type": "DatasetReference"
							},
							"name": "WriteHillParametersFamilyPairHillParametersInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteAmplitudeHillWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteOffsetHillWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteSlopeHillWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteIsFailureTransmittedWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteIsCouplingActiveWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteIsAgingAfterDeathWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteMaintenanceIfOutOfOrderWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteShapeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteScaleWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteExpectedLifeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteFinancialCostOfFailureWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteEnvironmentalCostOfFailureWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteNetworkCostOfFailureWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRowsMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingHealthIndexRowsMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "1_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "1_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingAgingFamilyRowsMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "1_122",
								"type": "DatasetReference"
							},
							"name": "WriteMapReferenceCostOfFailureValueWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInAgingFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnumAgingMethodology"
						},
						{
							"name": "AgingMethodologyEnumCheck"
						},
						{
							"name": "NonNullMinimalAge"
						},
						{
							"name": "MinimalAgeTypeCheck"
						},
						{
							"name": "NonNullMaximalAge"
						},
						{
							"name": "MaximalAgeTypeCheck"
						},
						{
							"name": "NonNullFailureRateAtMinimalAge"
						},
						{
							"name": "FailureRateAtMinimalAgeTypeCheck"
						},
						{
							"name": "NonNullFailureRateAtMaximalAge"
						},
						{
							"name": "FailureRateAtMaximalAgeTypeCheck"
						},
						{
							"name": "NonNullExternalFailureRatePerYear"
						},
						{
							"name": "ExternalFailureRatePerYearTypeCheck"
						},
						{
							"name": "ExternalFailureRatePerYearRangeCheck"
						},
						{
							"name": "NonNullIsQuantityDiscrete"
						},
						{
							"name": "IsQuantityDiscreteTypeCheck"
						},
						{
							"name": "NonNullGFlag"
						},
						{
							"name": "GFlagTypeCheck"
						},
						{
							"name": "NonNullAgingFailureDelay"
						},
						{
							"name": "AgingFailureDelayTypeCheck"
						},
						{
							"name": "MapFamilyPairHillParametersMandatoryCheck"
						},
						{
							"name": "MapFamilyPairHillParametersExistenceCheck"
						},
						{
							"name": "NonNullEnumHillParametersFamilyPairHillParameters"
						},
						{
							"name": "HillParametersFamilyPairHillParametersEnumCheck"
						},
						{
							"name": "MapFamilyPairHillParametersSplitKeyValues"
						},
						{
							"name": "NonNullAmplitudeHill"
						},
						{
							"name": "AmplitudeHillTypeCheck"
						},
						{
							"name": "NonNullOffsetHill"
						},
						{
							"name": "OffsetHillTypeCheck"
						},
						{
							"name": "NonNullSlopeHill"
						},
						{
							"name": "SlopeHillTypeCheck"
						},
						{
							"name": "NonNullIsFailureTransmitted"
						},
						{
							"name": "IsFailureTransmittedTypeCheck"
						},
						{
							"name": "NonNullIsCouplingActive"
						},
						{
							"name": "IsCouplingActiveTypeCheck"
						},
						{
							"name": "NonNullIsAgingAfterDeath"
						},
						{
							"name": "IsAgingAfterDeathTypeCheck"
						},
						{
							"name": "NonNullMaintenanceIfOutOfOrder"
						},
						{
							"name": "MaintenanceIfOutOfOrderTypeCheck"
						},
						{
							"name": "NonNullShape"
						},
						{
							"name": "ShapeTypeCheck"
						},
						{
							"name": "NonNullScale"
						},
						{
							"name": "ScaleTypeCheck"
						},
						{
							"name": "NonNullExpectedLife"
						},
						{
							"name": "ExpectedLifeTypeCheck"
						},
						{
							"name": "NonNullFinancialCostOfFailure"
						},
						{
							"name": "FinancialCostOfFailureTypeCheck"
						},
						{
							"name": "NonNullEnvironmentalCostOfFailure"
						},
						{
							"name": "EnvironmentalCostOfFailureTypeCheck"
						},
						{
							"name": "NonNullNetworkCostOfFailure"
						},
						{
							"name": "NetworkCostOfFailureTypeCheck"
						},
						{
							"name": "MapMapReferenceCostOfFailureMandatoryCheck"
						},
						{
							"name": "MapMapReferenceCostOfFailureExistenceCheck"
						},
						{
							"name": "NonNullMapReferenceCostOfFailureValue"
						},
						{
							"name": "MapReferenceCostOfFailureValueTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAgingMethodology as string,\n\t\tMinimalAge as string,\n\t\tMaximalAge as string,\n\t\tFailureRateAtMinimalAge as string,\n\t\tFailureRateAtMaximalAge as string,\n\t\tExternalFailureRatePerYear as string,\n\t\tIsQuantityDiscrete as string,\n\t\tGFlag as string,\n\t\tAgingFailureDelay as string,\n\t\tIsAgingAfterDeath as string,\n\t\tMaintenanceIfOutOfOrder as string,\n\t\tShape as string,\n\t\tScale as string,\n\t\tExpectedLife as string,\n\t\tFinancialCostOfFailure as string,\n\t\tEnvironmentalCostOfFailure as string,\n\t\tNetworkCostOfFailure as string,\n\t\tExtraNL as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateAgingFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> AgingFamiliesStatus\nsource(output(\n\t\tAgingFamily as string,\n\t\tAgentAgingFamily as string,\n\t\tHillParameters as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateAgingFamiliesMapFamilyPairHillParameters\nsource(output(\n\t\tAgingFamily as string,\n\t\tHealthIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateAgingFamiliesMapMapReferenceCostOfFailure\nReadCreateAgingFamilies aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateAgingFamilies, AgingFamiliesStatus exists(ReadCreateAgingFamilies@Name == AgingFamiliesStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInAgingFamiliesStatus\nReadCreateAgingFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateAgingFamilies filter(not(isNull(AgingMethodology))) ~> NonNullEnumAgingMethodology\nNonNullEnumAgingMethodology filter(not(in(['Weibull', 'Gompertz', 'HealthScore'], AgingMethodology))) ~> AgingMethodologyEnumCheck\nReadCreateAgingFamilies filter(not(isNull(MinimalAge))) ~> NonNullMinimalAge\nNonNullMinimalAge split(not(isInteger(MinimalAge)),\n\tdisjoint: false) ~> MinimalAgeTypeCheck@(MinimalAgeWrongType)\nReadCreateAgingFamilies filter(not(isNull(MaximalAge))) ~> NonNullMaximalAge\nNonNullMaximalAge split(not(isInteger(MaximalAge)),\n\tdisjoint: false) ~> MaximalAgeTypeCheck@(MaximalAgeWrongType)\nReadCreateAgingFamilies filter(not(isNull(FailureRateAtMinimalAge))) ~> NonNullFailureRateAtMinimalAge\nNonNullFailureRateAtMinimalAge split(not(isFloat(FailureRateAtMinimalAge)),\n\tdisjoint: false) ~> FailureRateAtMinimalAgeTypeCheck@(FailureRateAtMinimalAgeWrongType)\nReadCreateAgingFamilies filter(not(isNull(FailureRateAtMaximalAge))) ~> NonNullFailureRateAtMaximalAge\nNonNullFailureRateAtMaximalAge split(not(isFloat(FailureRateAtMaximalAge)),\n\tdisjoint: false) ~> FailureRateAtMaximalAgeTypeCheck@(FailureRateAtMaximalAgeWrongType)\nReadCreateAgingFamilies filter(not(isNull(ExternalFailureRatePerYear))) ~> NonNullExternalFailureRatePerYear\nNonNullExternalFailureRatePerYear split(not(isFloat(ExternalFailureRatePerYear)),\n\tdisjoint: false) ~> ExternalFailureRatePerYearTypeCheck@(ExternalFailureRatePerYearWrongType, ExternalFailureRatePerYearCorrectType)\nExternalFailureRatePerYearTypeCheck@ExternalFailureRatePerYearCorrectType filter(or(toFloat(ExternalFailureRatePerYear) < 0.0, toFloat(ExternalFailureRatePerYear) > 1.0)) ~> ExternalFailureRatePerYearRangeCheck\nReadCreateAgingFamilies filter(not(isNull(IsQuantityDiscrete))) ~> NonNullIsQuantityDiscrete\nNonNullIsQuantityDiscrete split(not(isBoolean(IsQuantityDiscrete)),\n\tdisjoint: false) ~> IsQuantityDiscreteTypeCheck@(IsQuantityDiscreteWrongType)\nReadCreateAgingFamilies filter(not(isNull(GFlag))) ~> NonNullGFlag\nNonNullGFlag split(not(isBoolean(GFlag)),\n\tdisjoint: false) ~> GFlagTypeCheck@(GFlagWrongType)\nReadCreateAgingFamilies filter(not(isNull(AgingFailureDelay))) ~> NonNullAgingFailureDelay\nNonNullAgingFailureDelay split(not(isFloat(AgingFailureDelay)),\n\tdisjoint: false) ~> AgingFailureDelayTypeCheck@(AgingFailureDelayWrongType)\nCreateAgingFamiliesMapFamilyPairHillParameters split(isNull(AgingFamily),\n\tisNull(AgentAgingFamily),\n\tisNull(HillParameters),\n\tisNull(Value),\n\tdisjoint: false) ~> MapFamilyPairHillParametersMandatoryCheck@(MissingAgingFamily, MissingAgentAgingFamily, MissingHillParameters, MissingValue)\nCreateAgingFamiliesMapFamilyPairHillParameters, ReadCreateAgingFamilies exists(AgingFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapFamilyPairHillParametersExistenceCheck\nCreateAgingFamiliesMapFamilyPairHillParameters filter(not(isNull(HillParameters))) ~> NonNullEnumHillParametersFamilyPairHillParameters\nNonNullEnumHillParametersFamilyPairHillParameters filter(not(in(['AmplitudeHill', 'OffsetHill', 'SlopeHill', 'IsFailureTransmitted', 'IsCouplingActive'], HillParameters))) ~> HillParametersFamilyPairHillParametersEnumCheck\nCreateAgingFamiliesMapFamilyPairHillParameters split(HillParameters == 'AmplitudeHill',\n\tHillParameters == 'OffsetHill',\n\tHillParameters == 'SlopeHill',\n\tHillParameters == 'IsFailureTransmitted',\n\tHillParameters == 'IsCouplingActive',\n\tdisjoint: false) ~> MapFamilyPairHillParametersSplitKeyValues@(HillParametersAmplitudeHill, HillParametersOffsetHill, HillParametersSlopeHill, HillParametersIsFailureTransmitted, HillParametersIsCouplingActive)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersAmplitudeHill filter(not(isNull(Value))) ~> NonNullAmplitudeHill\nNonNullAmplitudeHill split(not(isFloat(Value)),\n\tdisjoint: false) ~> AmplitudeHillTypeCheck@(AmplitudeHillWrongType)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersOffsetHill filter(not(isNull(Value))) ~> NonNullOffsetHill\nNonNullOffsetHill split(not(isFloat(Value)),\n\tdisjoint: false) ~> OffsetHillTypeCheck@(OffsetHillWrongType)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersSlopeHill filter(not(isNull(Value))) ~> NonNullSlopeHill\nNonNullSlopeHill split(not(isInteger(Value)),\n\tdisjoint: false) ~> SlopeHillTypeCheck@(SlopeHillWrongType)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersIsFailureTransmitted filter(not(isNull(Value))) ~> NonNullIsFailureTransmitted\nNonNullIsFailureTransmitted split(not(isBoolean(Value)),\n\tdisjoint: false) ~> IsFailureTransmittedTypeCheck@(IsFailureTransmittedWrongType)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersIsCouplingActive filter(not(isNull(Value))) ~> NonNullIsCouplingActive\nNonNullIsCouplingActive split(not(isBoolean(Value)),\n\tdisjoint: false) ~> IsCouplingActiveTypeCheck@(IsCouplingActiveWrongType)\nReadCreateAgingFamilies filter(not(isNull(IsAgingAfterDeath))) ~> NonNullIsAgingAfterDeath\nNonNullIsAgingAfterDeath split(not(isBoolean(IsAgingAfterDeath)),\n\tdisjoint: false) ~> IsAgingAfterDeathTypeCheck@(IsAgingAfterDeathWrongType)\nReadCreateAgingFamilies filter(not(isNull(MaintenanceIfOutOfOrder))) ~> NonNullMaintenanceIfOutOfOrder\nNonNullMaintenanceIfOutOfOrder split(not(isBoolean(MaintenanceIfOutOfOrder)),\n\tdisjoint: false) ~> MaintenanceIfOutOfOrderTypeCheck@(MaintenanceIfOutOfOrderWrongType)\nReadCreateAgingFamilies filter(not(isNull(Shape))) ~> NonNullShape\nNonNullShape split(not(isFloat(Shape)),\n\tdisjoint: false) ~> ShapeTypeCheck@(ShapeWrongType)\nReadCreateAgingFamilies filter(not(isNull(Scale))) ~> NonNullScale\nNonNullScale split(not(isFloat(Scale)),\n\tdisjoint: false) ~> ScaleTypeCheck@(ScaleWrongType)\nReadCreateAgingFamilies filter(not(isNull(ExpectedLife))) ~> NonNullExpectedLife\nNonNullExpectedLife split(not(isInteger(ExpectedLife)),\n\tdisjoint: false) ~> ExpectedLifeTypeCheck@(ExpectedLifeWrongType)\nReadCreateAgingFamilies filter(not(isNull(FinancialCostOfFailure))) ~> NonNullFinancialCostOfFailure\nNonNullFinancialCostOfFailure split(not(isFloat(FinancialCostOfFailure)),\n\tdisjoint: false) ~> FinancialCostOfFailureTypeCheck@(FinancialCostOfFailureWrongType)\nReadCreateAgingFamilies filter(not(isNull(EnvironmentalCostOfFailure))) ~> NonNullEnvironmentalCostOfFailure\nNonNullEnvironmentalCostOfFailure split(not(isFloat(EnvironmentalCostOfFailure)),\n\tdisjoint: false) ~> EnvironmentalCostOfFailureTypeCheck@(EnvironmentalCostOfFailureWrongType)\nReadCreateAgingFamilies filter(not(isNull(NetworkCostOfFailure))) ~> NonNullNetworkCostOfFailure\nNonNullNetworkCostOfFailure split(not(isFloat(NetworkCostOfFailure)),\n\tdisjoint: false) ~> NetworkCostOfFailureTypeCheck@(NetworkCostOfFailureWrongType)\nCreateAgingFamiliesMapMapReferenceCostOfFailure split(isNull(AgingFamily),\n\tisNull(HealthIndex),\n\tisNull(Value),\n\tdisjoint: false) ~> MapMapReferenceCostOfFailureMandatoryCheck@(MissingAgingFamily, MissingHealthIndex, MissingValue)\nCreateAgingFamiliesMapMapReferenceCostOfFailure, ReadCreateAgingFamilies exists(AgingFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapMapReferenceCostOfFailureExistenceCheck\nCreateAgingFamiliesMapMapReferenceCostOfFailure filter(not(isNull(Value))) ~> NonNullMapReferenceCostOfFailureValue\nNonNullMapReferenceCostOfFailureValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> MapReferenceCostOfFailureValueTypeCheck@(MapReferenceCostOfFailureValueWrongType)\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-120-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-120-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-121-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nAgingMethodologyEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-123-AgingMethodologyInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAgingMethodologyInvalidRangeRows\nMinimalAgeTypeCheck@MinimalAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-MinimalAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMinimalAgeWrongTypeRows\nMaximalAgeTypeCheck@MaximalAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-MaximalAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMaximalAgeWrongTypeRows\nFailureRateAtMinimalAgeTypeCheck@FailureRateAtMinimalAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-FailureRateAtMinimalAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteFailureRateAtMinimalAgeWrongTypeRows\nFailureRateAtMaximalAgeTypeCheck@FailureRateAtMaximalAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-FailureRateAtMaximalAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteFailureRateAtMaximalAgeWrongTypeRows\nExternalFailureRatePerYearTypeCheck@ExternalFailureRatePerYearWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-ExternalFailureRatePerYearWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteExternalFailureRatePerYearWrongTypeRows\nExternalFailureRatePerYearRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-123-ExternalFailureRatePerYearInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteExternalFailureRatePerYearInvalidRangeRows\nIsQuantityDiscreteTypeCheck@IsQuantityDiscreteWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-IsQuantityDiscreteWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsQuantityDiscreteWrongTypeRows\nGFlagTypeCheck@GFlagWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-GFlagWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteGFlagWrongTypeRows\nAgingFailureDelayTypeCheck@AgingFailureDelayWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-AgingFailureDelayWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAgingFailureDelayWrongTypeRows\nMapFamilyPairHillParametersMandatoryCheck@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-121-MissColumnAgingFamilyFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRowsFamilyPairHillParameters\nMapFamilyPairHillParametersMandatoryCheck@MissingAgentAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-121-MissColumnAgentAgingFamilyFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgentAgingFamilyRowsFamilyPairHillParameters\nMapFamilyPairHillParametersMandatoryCheck@MissingHillParameters sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-121-MissColumnHillParametersFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingHillParametersRowsFamilyPairHillParameters\nMapFamilyPairHillParametersMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-121-MissColumnValueFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsFamilyPairHillParameters\nMapFamilyPairHillParametersExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-120-NotExistingAgingFamilyFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingAgingFamilyRowsFamilyPairHillParameters\nHillParametersFamilyPairHillParametersEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-123-HillParametersFamilyPairHillParametersInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteHillParametersFamilyPairHillParametersInvalidRangeRows\nAmplitudeHillTypeCheck@AmplitudeHillWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-AmplitudeHillWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAmplitudeHillWrongTypeRows\nOffsetHillTypeCheck@OffsetHillWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-OffsetHillWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteOffsetHillWrongTypeRows\nSlopeHillTypeCheck@SlopeHillWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-SlopeHillWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteSlopeHillWrongTypeRows\nIsFailureTransmittedTypeCheck@IsFailureTransmittedWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-IsFailureTransmittedWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsFailureTransmittedWrongTypeRows\nIsCouplingActiveTypeCheck@IsCouplingActiveWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-IsCouplingActiveWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsCouplingActiveWrongTypeRows\nIsAgingAfterDeathTypeCheck@IsAgingAfterDeathWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-IsAgingAfterDeathWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsAgingAfterDeathWrongTypeRows\nMaintenanceIfOutOfOrderTypeCheck@MaintenanceIfOutOfOrderWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-MaintenanceIfOutOfOrderWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMaintenanceIfOutOfOrderWrongTypeRows\nShapeTypeCheck@ShapeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-ShapeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteShapeWrongTypeRows\nScaleTypeCheck@ScaleWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-ScaleWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteScaleWrongTypeRows\nExpectedLifeTypeCheck@ExpectedLifeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-ExpectedLifeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteExpectedLifeWrongTypeRows\nFinancialCostOfFailureTypeCheck@FinancialCostOfFailureWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-FinancialCostOfFailureWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteFinancialCostOfFailureWrongTypeRows\nEnvironmentalCostOfFailureTypeCheck@EnvironmentalCostOfFailureWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-EnvironmentalCostOfFailureWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEnvironmentalCostOfFailureWrongTypeRows\nNetworkCostOfFailureTypeCheck@NetworkCostOfFailureWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-NetworkCostOfFailureWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNetworkCostOfFailureWrongTypeRows\nMapMapReferenceCostOfFailureMandatoryCheck@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-121-MissColumnAgingFamilyMapReferenceCostOfFailure.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRowsMapReferenceCostOfFailure\nMapMapReferenceCostOfFailureMandatoryCheck@MissingHealthIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-121-MissColumnHealthIndexMapReferenceCostOfFailure.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingHealthIndexRowsMapReferenceCostOfFailure\nMapMapReferenceCostOfFailureMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-121-MissColumnValueMapReferenceCostOfFailure.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsMapReferenceCostOfFailure\nMapMapReferenceCostOfFailureExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-120-NotExistingAgingFamilyMapReferenceCostOfFailure.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingAgingFamilyRowsMapReferenceCostOfFailure\nMapReferenceCostOfFailureValueTypeCheck@MapReferenceCostOfFailureValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-122-MapReferenceCostOfFailureValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMapReferenceCostOfFailureValueWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateAgingFamilies_MapFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/datasets/CreateAgingFamilies_MapMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/datasets/1_120')]",
				"[concat(variables('factoryId'), '/datasets/1_121')]",
				"[concat(variables('factoryId'), '/datasets/1_123')]",
				"[concat(variables('factoryId'), '/datasets/1_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateAgingFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "CreateAgingFamilies_MapFamilyPairHillParameters",
								"type": "DatasetReference"
							},
							"name": "ReadMapFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "CreateAgingFamilies_MapMapReferenceCostOfFailure",
								"type": "DatasetReference"
							},
							"name": "ReadMapMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusAgingFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateAgingFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "MapFamilyPairHillParametersKeyHillParametersSplitByType"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyHillParametersSplitByfloat"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyHillParametersSplitByinteger"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyHillParametersSplitByboolean"
						},
						{
							"name": "MapFamilyPairHillParametersKeyHillParametersUnionAllTypes"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyHillParametersAllTypes"
						},
						{
							"name": "DeriveMapFamilyPairHillParametersKeyHillParametersAllTypes"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyAgentAgingFamily"
						},
						{
							"name": "FamilyPairHillParametersCleaning"
						},
						{
							"name": "FamilyPairHillParametersUnion"
						},
						{
							"name": "FamilyPairHillParametersSelect"
						},
						{
							"name": "AggregateMapMapReferenceCostOfFailureKeyHealthIndex"
						},
						{
							"name": "MapReferenceCostOfFailureCleaning"
						},
						{
							"name": "MapReferenceCostOfFailureUnion"
						},
						{
							"name": "MapReferenceCostOfFailureSelect"
						},
						{
							"name": "StatusColumnSelectionAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateAgingFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAgingMethodology as string,\n\t\tMinimalAge as string,\n\t\tMaximalAge as string,\n\t\tFailureRateAtMinimalAge as string,\n\t\tFailureRateAtMaximalAge as string,\n\t\tExternalFailureRatePerYear as string,\n\t\tIsQuantityDiscrete as string,\n\t\tGFlag as string,\n\t\tAgingFailureDelay as string,\n\t\tIsAgingAfterDeath as string,\n\t\tMaintenanceIfOutOfOrder as string,\n\t\tShape as string,\n\t\tScale as string,\n\t\tExpectedLife as string,\n\t\tFinancialCostOfFailure as string,\n\t\tEnvironmentalCostOfFailure as string,\n\t\tNetworkCostOfFailure as string,\n\t\tExtraNL as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateAgingFamilies\nsource(output(\n\t\tAgingFamily as string,\n\t\tAgentAgingFamily as string,\n\t\tHillParameters as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapFamilyPairHillParameters\nsource(output(\n\t\tAgingFamily as string,\n\t\tHealthIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapMapReferenceCostOfFailure\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusAgingFamiliesStatusEditor\nReadCreateAgingFamilies select(mapColumn(\n\t\t{$id} = Name,\n\t\tAgingMethodology,\n\t\t{EquipmentAgingLawParameters.MinimalAge} = MinimalAge,\n\t\t{EquipmentAgingLawParameters.MaximalAge} = MaximalAge,\n\t\t{EquipmentAgingLawParameters.FailureRateAtMinimalAge} = FailureRateAtMinimalAge,\n\t\t{EquipmentAgingLawParameters.FailureRateAtMaximalAge} = FailureRateAtMaximalAge,\n\t\tExternalFailureRatePerYear,\n\t\tIsQuantityDiscrete,\n\t\tGFlag,\n\t\tAgingFailureDelay,\n\t\tIsAgingAfterDeath,\n\t\tMaintenanceIfOutOfOrder,\n\t\t{EquipmentAgingLawParameters.Shape} = Shape,\n\t\t{EquipmentAgingLawParameters.Scale} = Scale,\n\t\tExpectedLife,\n\t\tFinancialCostOfFailure,\n\t\tEnvironmentalCostOfFailure,\n\t\tNetworkCostOfFailure,\n\t\tExtraNL\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:AgingFamily;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapFamilyPairHillParameters split(in(['AmplitudeHill','OffsetHill'], HillParameters),\n\tin(['SlopeHill'], HillParameters),\n\tin(['IsFailureTransmitted','IsCouplingActive'], HillParameters),\n\tdisjoint: false) ~> MapFamilyPairHillParametersKeyHillParametersSplitByType@(MapFamilyPairHillParametersKeyHillParametersSplitByfloat, MapFamilyPairHillParametersKeyHillParametersSplitByinteger, MapFamilyPairHillParametersKeyHillParametersSplitByboolean)\nMapFamilyPairHillParametersKeyHillParametersSplitByType@MapFamilyPairHillParametersKeyHillParametersSplitByfloat aggregate(groupBy(AgingFamily,\n\t\tAgentAgingFamily),\n\tFamilyPairHillParameters = dropRight(dropLeft(toString(keyValues(collect(toString(HillParameters)), collect(toFloat(Value)))) ,1), 1)) ~> AggregateMapFamilyPairHillParametersKeyHillParametersSplitByfloat\nMapFamilyPairHillParametersKeyHillParametersSplitByType@MapFamilyPairHillParametersKeyHillParametersSplitByinteger aggregate(groupBy(AgingFamily,\n\t\tAgentAgingFamily),\n\tFamilyPairHillParameters = dropRight(dropLeft(toString(keyValues(collect(toString(HillParameters)), collect(toInteger(Value)))) ,1), 1)) ~> AggregateMapFamilyPairHillParametersKeyHillParametersSplitByinteger\nMapFamilyPairHillParametersKeyHillParametersSplitByType@MapFamilyPairHillParametersKeyHillParametersSplitByboolean aggregate(groupBy(AgingFamily,\n\t\tAgentAgingFamily),\n\tFamilyPairHillParameters = dropRight(dropLeft(toString(keyValues(collect(toString(HillParameters)), collect(toBoolean(Value)))) ,1), 1)) ~> AggregateMapFamilyPairHillParametersKeyHillParametersSplitByboolean\nAggregateMapFamilyPairHillParametersKeyHillParametersSplitByfloat, AggregateMapFamilyPairHillParametersKeyHillParametersSplitByinteger, AggregateMapFamilyPairHillParametersKeyHillParametersSplitByboolean union(byName: true)~> MapFamilyPairHillParametersKeyHillParametersUnionAllTypes\nMapFamilyPairHillParametersKeyHillParametersUnionAllTypes aggregate(groupBy(AgingFamily,\n\t\tAgentAgingFamily),\n\tFamilyPairHillParameters = collect(FamilyPairHillParameters)) ~> AggregateMapFamilyPairHillParametersKeyHillParametersAllTypes\nAggregateMapFamilyPairHillParametersKeyHillParametersAllTypes derive(FamilyPairHillParameters = '{' + concatWS(',', FamilyPairHillParameters[1], FamilyPairHillParameters[2], FamilyPairHillParameters[3]) + '}') ~> DeriveMapFamilyPairHillParametersKeyHillParametersAllTypes\nDeriveMapFamilyPairHillParametersKeyHillParametersAllTypes aggregate(groupBy(AgingFamily),\n\tFamilyPairHillParameters = toString(keyValues(collect(toString(AgentAgingFamily)), collect(toString(FamilyPairHillParameters))))) ~> AggregateMapFamilyPairHillParametersKeyAgentAgingFamily\nAggregateMapFamilyPairHillParametersKeyAgentAgingFamily derive(FamilyPairHillParameters = replace(replace(replace(FamilyPairHillParameters, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> FamilyPairHillParametersCleaning\nModelDefinition, FamilyPairHillParametersCleaning join({$id} == AgingFamily,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> FamilyPairHillParametersUnion\nFamilyPairHillParametersUnion select(mapColumn(\n\t\t{$id},\n\t\tAgingMethodology,\n\t\t{EquipmentAgingLawParameters.MinimalAge},\n\t\t{EquipmentAgingLawParameters.MaximalAge},\n\t\t{EquipmentAgingLawParameters.FailureRateAtMinimalAge},\n\t\t{EquipmentAgingLawParameters.FailureRateAtMaximalAge},\n\t\tExternalFailureRatePerYear,\n\t\tIsQuantityDiscrete,\n\t\tGFlag,\n\t\tAgingFailureDelay,\n\t\tIsAgingAfterDeath,\n\t\tMaintenanceIfOutOfOrder,\n\t\t{EquipmentAgingLawParameters.Shape},\n\t\t{EquipmentAgingLawParameters.Scale},\n\t\tExpectedLife,\n\t\tFinancialCostOfFailure,\n\t\tEnvironmentalCostOfFailure,\n\t\tNetworkCostOfFailure,\n\t\tExtraNL,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tFamilyPairHillParameters\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FamilyPairHillParametersSelect\nReadMapMapReferenceCostOfFailure aggregate(groupBy(AgingFamily),\n\tMapReferenceCostOfFailure = toString(keyValues(collect(toString(HealthIndex)), collect(toFloat(Value))))) ~> AggregateMapMapReferenceCostOfFailureKeyHealthIndex\nAggregateMapMapReferenceCostOfFailureKeyHealthIndex derive(MapReferenceCostOfFailure = replace(replace(replace(MapReferenceCostOfFailure, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> MapReferenceCostOfFailureCleaning\nFamilyPairHillParametersSelect, MapReferenceCostOfFailureCleaning join({$id} == AgingFamily,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> MapReferenceCostOfFailureUnion\nMapReferenceCostOfFailureUnion select(mapColumn(\n\t\t{$id},\n\t\tAgingMethodology,\n\t\t{EquipmentAgingLawParameters.MinimalAge},\n\t\t{EquipmentAgingLawParameters.MaximalAge},\n\t\t{EquipmentAgingLawParameters.FailureRateAtMinimalAge},\n\t\t{EquipmentAgingLawParameters.FailureRateAtMaximalAge},\n\t\tExternalFailureRatePerYear,\n\t\tIsQuantityDiscrete,\n\t\tGFlag,\n\t\tAgingFailureDelay,\n\t\tIsAgingAfterDeath,\n\t\tMaintenanceIfOutOfOrder,\n\t\t{EquipmentAgingLawParameters.Shape},\n\t\t{EquipmentAgingLawParameters.Scale},\n\t\tExpectedLife,\n\t\tFinancialCostOfFailure,\n\t\tEnvironmentalCostOfFailure,\n\t\tNetworkCostOfFailure,\n\t\tExtraNL,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tFamilyPairHillParameters,\n\t\tMapReferenceCostOfFailure\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MapReferenceCostOfFailureSelect\nReadCreateAgingFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionAgingFamiliesStatusEditor\nReadTempStatusAgingFamiliesStatusEditor, StatusColumnSelectionAgingFamiliesStatusEditor union(byName: true)~> StatusUpdateAgingFamiliesStatusEditor\nMapReferenceCostOfFailureSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_AgingFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateAgingFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['AgingFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateAgingFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/CreateAgingFamilies_MapFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/datasets/CreateAgingFamilies_MapMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateBudgets_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3-Budgets/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateBudgets",
								"type": "DatasetReference"
							},
							"name": "ReadCreateBudgets"
						},
						{
							"dataset": {
								"referenceName": "TempInput_BudgetsStatus",
								"type": "DatasetReference"
							},
							"name": "BudgetsStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateBudgets_MapCatKeyLabels",
								"type": "DatasetReference"
							},
							"name": "CreateBudgetsMapCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "CreateBudgets_MapAvailableQuantityByYear",
								"type": "DatasetReference"
							},
							"name": "CreateBudgetsMapAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "CreateBudgets_MapMinimalQuantityLevelByYear",
								"type": "DatasetReference"
							},
							"name": "CreateBudgetsMapMinimalQuantityLevelByYear"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "3_113",
								"type": "DatasetReference"
							},
							"name": "WriteCostTypeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference"
							},
							"name": "WriteConstrainedWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingBudgetRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingBudgetRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingBudgetRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingYearRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingBudgetRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference"
							},
							"name": "WriteAvailableQuantityByYearValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingBudgetRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingYearRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "3_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "3_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingBudgetRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference"
							},
							"name": "WriteMinimalQuantityLevelByYearValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference"
							},
							"name": "WriteCostRateWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "3_112",
								"type": "DatasetReference"
							},
							"name": "WriteRankWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInBudgetsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnumCostType"
						},
						{
							"name": "CostTypeEnumCheck"
						},
						{
							"name": "NonNullConstrained"
						},
						{
							"name": "ConstrainedTypeCheck"
						},
						{
							"name": "MapCatKeyLabelsMandatoryCheck"
						},
						{
							"name": "MapCatKeyLabelsExistenceCheck"
						},
						{
							"name": "MapAvailableQuantityByYearMandatoryCheck"
						},
						{
							"name": "MapAvailableQuantityByYearExistenceCheck"
						},
						{
							"name": "NonNullAvailableQuantityByYearValue"
						},
						{
							"name": "AvailableQuantityByYearValueTypeCheck"
						},
						{
							"name": "MapMinimalQuantityLevelByYearMandatoryCheck"
						},
						{
							"name": "MapMinimalQuantityLevelByYearExistenceCheck"
						},
						{
							"name": "NonNullMinimalQuantityLevelByYearValue"
						},
						{
							"name": "MinimalQuantityLevelByYearValueTypeCheck"
						},
						{
							"name": "NonNullCostRate"
						},
						{
							"name": "CostRateTypeCheck"
						},
						{
							"name": "NonNullRank"
						},
						{
							"name": "RankTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tCostType as string,\n\t\tConstrained as string,\n\t\tCostRate as string,\n\t\tRank as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateBudgets\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> BudgetsStatus\nsource(output(\n\t\tBudget as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateBudgetsMapCatKeyLabels\nsource(output(\n\t\tBudget as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateBudgetsMapAvailableQuantityByYear\nsource(output(\n\t\tBudget as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateBudgetsMapMinimalQuantityLevelByYear\nReadCreateBudgets aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateBudgets, BudgetsStatus exists(ReadCreateBudgets@Name == BudgetsStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInBudgetsStatus\nReadCreateBudgets split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateBudgets filter(not(isNull(CostType))) ~> NonNullEnumCostType\nNonNullEnumCostType filter(not(in(['Suppliers', 'Workforce'], CostType))) ~> CostTypeEnumCheck\nReadCreateBudgets filter(not(isNull(Constrained))) ~> NonNullConstrained\nNonNullConstrained split(not(isBoolean(Constrained)),\n\tdisjoint: false) ~> ConstrainedTypeCheck@(ConstrainedWrongType)\nCreateBudgetsMapCatKeyLabels split(isNull(Budget),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCatKeyLabelsMandatoryCheck@(MissingBudget, MissingIndex, MissingValue)\nCreateBudgetsMapCatKeyLabels, ReadCreateBudgets exists(Budget == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCatKeyLabelsExistenceCheck\nCreateBudgetsMapAvailableQuantityByYear split(isNull(Budget),\n\tisNull(Year),\n\tisNull(Value),\n\tdisjoint: false) ~> MapAvailableQuantityByYearMandatoryCheck@(MissingBudget, MissingYear, MissingValue)\nCreateBudgetsMapAvailableQuantityByYear, ReadCreateBudgets exists(Budget == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapAvailableQuantityByYearExistenceCheck\nCreateBudgetsMapAvailableQuantityByYear filter(not(isNull(Value))) ~> NonNullAvailableQuantityByYearValue\nNonNullAvailableQuantityByYearValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> AvailableQuantityByYearValueTypeCheck@(AvailableQuantityByYearValueWrongType)\nCreateBudgetsMapMinimalQuantityLevelByYear split(isNull(Budget),\n\tisNull(Year),\n\tisNull(Value),\n\tdisjoint: false) ~> MapMinimalQuantityLevelByYearMandatoryCheck@(MissingBudget, MissingYear, MissingValue)\nCreateBudgetsMapMinimalQuantityLevelByYear, ReadCreateBudgets exists(Budget == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapMinimalQuantityLevelByYearExistenceCheck\nCreateBudgetsMapMinimalQuantityLevelByYear filter(not(isNull(Value))) ~> NonNullMinimalQuantityLevelByYearValue\nNonNullMinimalQuantityLevelByYearValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> MinimalQuantityLevelByYearValueTypeCheck@(MinimalQuantityLevelByYearValueWrongType)\nReadCreateBudgets filter(not(isNull(CostRate))) ~> NonNullCostRate\nNonNullCostRate split(not(isFloat(CostRate)),\n\tdisjoint: false) ~> CostRateTypeCheck@(CostRateWrongType)\nReadCreateBudgets filter(not(isNull(Rank))) ~> NonNullRank\nNonNullRank split(not(isInteger(Rank)),\n\tdisjoint: false) ~> RankTypeCheck@(RankWrongType)\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-110-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInBudgetsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-110-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nCostTypeEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-113-CostTypeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCostTypeInvalidRangeRows\nConstrainedTypeCheck@ConstrainedWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-112-ConstrainedWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteConstrainedWrongTypeRows\nMapCatKeyLabelsMandatoryCheck@MissingBudget sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnBudgetCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingBudgetRowsCatKeyLabels\nMapCatKeyLabelsMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnIndexCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsCatKeyLabels\nMapCatKeyLabelsMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnValueCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCatKeyLabels\nMapCatKeyLabelsExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-110-NotExistingBudgetCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingBudgetRowsCatKeyLabels\nMapAvailableQuantityByYearMandatoryCheck@MissingBudget sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnBudgetAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingBudgetRowsAvailableQuantityByYear\nMapAvailableQuantityByYearMandatoryCheck@MissingYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnYearAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingYearRowsAvailableQuantityByYear\nMapAvailableQuantityByYearMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnValueAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsAvailableQuantityByYear\nMapAvailableQuantityByYearExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-110-NotExistingBudgetAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingBudgetRowsAvailableQuantityByYear\nAvailableQuantityByYearValueTypeCheck@AvailableQuantityByYearValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-112-AvailableQuantityByYearValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAvailableQuantityByYearValueWrongTypeRows\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingBudget sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnBudgetMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingBudgetRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnYearMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingYearRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-111-MissColumnValueMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-110-NotExistingBudgetMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingBudgetRowsMinimalQuantityLevelByYear\nMinimalQuantityLevelByYearValueTypeCheck@MinimalQuantityLevelByYearValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-112-MinimalQuantityLevelByYearValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMinimalQuantityLevelByYearValueWrongTypeRows\nCostRateTypeCheck@CostRateWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-112-CostRateWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCostRateWrongTypeRows\nRankTypeCheck@RankWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-112-RankWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteRankWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateBudgets')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_BudgetsStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateBudgets_MapCatKeyLabels')]",
				"[concat(variables('factoryId'), '/datasets/CreateBudgets_MapAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/datasets/CreateBudgets_MapMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/datasets/3_110')]",
				"[concat(variables('factoryId'), '/datasets/3_111')]",
				"[concat(variables('factoryId'), '/datasets/3_113')]",
				"[concat(variables('factoryId'), '/datasets/3_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateBudgets_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3-Budgets/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateBudgets",
								"type": "DatasetReference"
							},
							"name": "ReadCreateBudgets"
						},
						{
							"dataset": {
								"referenceName": "CreateBudgets_MapCatKeyLabels",
								"type": "DatasetReference"
							},
							"name": "ReadMapCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "CreateBudgets_MapAvailableQuantityByYear",
								"type": "DatasetReference"
							},
							"name": "ReadMapAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "CreateBudgets_MapMinimalQuantityLevelByYear",
								"type": "DatasetReference"
							},
							"name": "ReadMapMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "TempInput_BudgetsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusBudgetsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BudgetsCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateBudgetsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapCatKeyLabelsKeyIndex"
						},
						{
							"name": "CatKeyLabelsCleaning"
						},
						{
							"name": "CatKeyLabelsUnion"
						},
						{
							"name": "CatKeyLabelsSelect"
						},
						{
							"name": "AggregateMapAvailableQuantityByYearKeyYear"
						},
						{
							"name": "AvailableQuantityByYearCleaning"
						},
						{
							"name": "AvailableQuantityByYearUnion"
						},
						{
							"name": "AvailableQuantityByYearSelect"
						},
						{
							"name": "AggregateMapMinimalQuantityLevelByYearKeyYear"
						},
						{
							"name": "MinimalQuantityLevelByYearCleaning"
						},
						{
							"name": "MinimalQuantityLevelByYearUnion"
						},
						{
							"name": "MinimalQuantityLevelByYearSelect"
						},
						{
							"name": "StatusColumnSelectionBudgetsStatusEditor"
						},
						{
							"name": "StatusUpdateBudgetsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tCostType as string,\n\t\tConstrained as string,\n\t\tCostRate as string,\n\t\tRank as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateBudgets\nsource(output(\n\t\tBudget as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCatKeyLabels\nsource(output(\n\t\tBudget as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapAvailableQuantityByYear\nsource(output(\n\t\tBudget as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapMinimalQuantityLevelByYear\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusBudgetsStatusEditor\nReadCreateBudgets select(mapColumn(\n\t\t{$id} = Name,\n\t\tCostType,\n\t\tConstrained,\n\t\tCostRate,\n\t\tRank\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Budget;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapCatKeyLabels aggregate(groupBy(Budget),\n\tCatKeyLabels = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapCatKeyLabelsKeyIndex\nAggregateMapCatKeyLabelsKeyIndex derive(CatKeyLabels = replace(replace(replace(CatKeyLabels, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CatKeyLabelsCleaning\nModelDefinition, CatKeyLabelsCleaning join({$id} == Budget,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CatKeyLabelsUnion\nCatKeyLabelsUnion select(mapColumn(\n\t\t{$id},\n\t\tCostType,\n\t\tConstrained,\n\t\tCostRate,\n\t\tRank,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CatKeyLabelsSelect\nReadMapAvailableQuantityByYear aggregate(groupBy(Budget),\n\tAvailableQuantityByYear = toString(keyValues(collect(toString(Year)), collect(toFloat(Value))))) ~> AggregateMapAvailableQuantityByYearKeyYear\nAggregateMapAvailableQuantityByYearKeyYear derive(AvailableQuantityByYear = replace(replace(replace(AvailableQuantityByYear, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> AvailableQuantityByYearCleaning\nCatKeyLabelsSelect, AvailableQuantityByYearCleaning join({$id} == Budget,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> AvailableQuantityByYearUnion\nAvailableQuantityByYearUnion select(mapColumn(\n\t\t{$id},\n\t\tCostType,\n\t\tConstrained,\n\t\tCostRate,\n\t\tRank,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels,\n\t\tAvailableQuantityByYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AvailableQuantityByYearSelect\nReadMapMinimalQuantityLevelByYear aggregate(groupBy(Budget),\n\tMinimalQuantityLevelByYear = toString(keyValues(collect(toString(Year)), collect(toFloat(Value))))) ~> AggregateMapMinimalQuantityLevelByYearKeyYear\nAggregateMapMinimalQuantityLevelByYearKeyYear derive(MinimalQuantityLevelByYear = replace(replace(replace(MinimalQuantityLevelByYear, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> MinimalQuantityLevelByYearCleaning\nAvailableQuantityByYearSelect, MinimalQuantityLevelByYearCleaning join({$id} == Budget,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> MinimalQuantityLevelByYearUnion\nMinimalQuantityLevelByYearUnion select(mapColumn(\n\t\t{$id},\n\t\tCostType,\n\t\tConstrained,\n\t\tCostRate,\n\t\tRank,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels,\n\t\tAvailableQuantityByYear,\n\t\tMinimalQuantityLevelByYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MinimalQuantityLevelByYearSelect\nReadCreateBudgets select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionBudgetsStatusEditor\nReadTempStatusBudgetsStatusEditor, StatusColumnSelectionBudgetsStatusEditor union(byName: true)~> StatusUpdateBudgetsStatusEditor\nMinimalQuantityLevelByYearSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Budgets.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateBudgetsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Budgets_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateBudgetsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateBudgets')]",
				"[concat(variables('factoryId'), '/datasets/CreateBudgets_MapCatKeyLabels')]",
				"[concat(variables('factoryId'), '/datasets/CreateBudgets_MapAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/datasets/CreateBudgets_MapMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_BudgetsStatus')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateCriteria_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadCreateCriteria"
						},
						{
							"dataset": {
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "CriteriaStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateCriteria_MapTargetedAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "CreateCriteriaMapTargetedAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "CreateCriteria_MapValueAsString",
								"type": "DatasetReference"
							},
							"name": "CreateCriteriaMapValueAsString"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_120",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCriterionRowsTargetedAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsTargetedAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsTargetedAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "2_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingCriterionRowsTargetedAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "2_123",
								"type": "DatasetReference"
							},
							"name": "WriteOperatorInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "2_122",
								"type": "DatasetReference"
							},
							"name": "WriteThresholdWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_122",
								"type": "DatasetReference"
							},
							"name": "WriteValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCriterionRowsValueAsString"
						},
						{
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsValueAsString"
						},
						{
							"dataset": {
								"referenceName": "2_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsValueAsString"
						},
						{
							"dataset": {
								"referenceName": "2_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingCriterionRowsValueAsString"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInCriteriaStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "MapTargetedAgingFamiliesMandatoryCheck"
						},
						{
							"name": "MapTargetedAgingFamiliesExistenceCheck"
						},
						{
							"name": "NonNullEnumOperator"
						},
						{
							"name": "OperatorEnumCheck"
						},
						{
							"name": "NonNullThreshold"
						},
						{
							"name": "ThresholdTypeCheck"
						},
						{
							"name": "NonNullValue"
						},
						{
							"name": "ValueTypeCheck"
						},
						{
							"name": "MapValueAsStringMandatoryCheck"
						},
						{
							"name": "MapValueAsStringExistenceCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tEquipmentComponentAttribute as string,\n\t\tOperator as string,\n\t\tThreshold as string,\n\t\tReferenceAttribute as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateCriteria\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CriteriaStatus\nsource(output(\n\t\tCriterion as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateCriteriaMapTargetedAgingFamilies\nsource(output(\n\t\tCriterion as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateCriteriaMapValueAsString\nReadCreateCriteria aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateCriteria, CriteriaStatus exists(ReadCreateCriteria@Name == CriteriaStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInCriteriaStatus\nReadCreateCriteria split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nCreateCriteriaMapTargetedAgingFamilies split(isNull(Criterion),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapTargetedAgingFamiliesMandatoryCheck@(MissingCriterion, MissingIndex, MissingValue)\nCreateCriteriaMapTargetedAgingFamilies, ReadCreateCriteria exists(Criterion == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapTargetedAgingFamiliesExistenceCheck\nReadCreateCriteria filter(not(isNull(Operator))) ~> NonNullEnumOperator\nNonNullEnumOperator filter(not(in(['None', 'LT', 'GT', 'LEQ', 'GEQ'], Operator))) ~> OperatorEnumCheck\nReadCreateCriteria filter(not(isNull(Threshold))) ~> NonNullThreshold\nNonNullThreshold split(not(isFloat(Threshold)),\n\tdisjoint: false) ~> ThresholdTypeCheck@(ThresholdWrongType)\nReadCreateCriteria filter(not(isNull(Value))) ~> NonNullValue\nNonNullValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> ValueTypeCheck@(ValueWrongType)\nCreateCriteriaMapValueAsString split(isNull(Criterion),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapValueAsStringMandatoryCheck@(MissingCriterion, MissingIndex, MissingValue)\nCreateCriteriaMapValueAsString, ReadCreateCriteria exists(Criterion == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapValueAsStringExistenceCheck\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-120-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInCriteriaStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-120-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-121-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nMapTargetedAgingFamiliesMandatoryCheck@MissingCriterion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-121-MissColumnCriterionTargetedAgingFamilies.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCriterionRowsTargetedAgingFamilies\nMapTargetedAgingFamiliesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-121-MissColumnIndexTargetedAgingFamilies.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsTargetedAgingFamilies\nMapTargetedAgingFamiliesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-121-MissColumnValueTargetedAgingFamilies.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsTargetedAgingFamilies\nMapTargetedAgingFamiliesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-120-NotExistingCriterionTargetedAgingFamilies.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingCriterionRowsTargetedAgingFamilies\nOperatorEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-123-OperatorInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteOperatorInvalidRangeRows\nThresholdTypeCheck@ThresholdWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-122-ThresholdWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteThresholdWrongTypeRows\nValueTypeCheck@ValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-122-ValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteValueWrongTypeRows\nMapValueAsStringMandatoryCheck@MissingCriterion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-121-MissColumnCriterionValueAsString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCriterionRowsValueAsString\nMapValueAsStringMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-121-MissColumnIndexValueAsString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsValueAsString\nMapValueAsStringMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-121-MissColumnValueValueAsString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsValueAsString\nMapValueAsStringExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-120-NotExistingCriterionValueAsString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingCriterionRowsValueAsString"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateCriteria')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateCriteria_MapTargetedAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/CreateCriteria_MapValueAsString')]",
				"[concat(variables('factoryId'), '/datasets/2_120')]",
				"[concat(variables('factoryId'), '/datasets/2_121')]",
				"[concat(variables('factoryId'), '/datasets/2_123')]",
				"[concat(variables('factoryId'), '/datasets/2_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateCriteria_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadCreateCriteria"
						},
						{
							"dataset": {
								"referenceName": "CreateCriteria_MapTargetedAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadMapTargetedAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "CreateCriteria_MapValueAsString",
								"type": "DatasetReference"
							},
							"name": "ReadMapValueAsString"
						},
						{
							"dataset": {
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusCriteriaStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateCriteriaStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapTargetedAgingFamiliesKeyIndex"
						},
						{
							"name": "TargetedAgingFamiliesCleaning"
						},
						{
							"name": "TargetedAgingFamiliesUnion"
						},
						{
							"name": "TargetedAgingFamiliesSelect"
						},
						{
							"name": "AggregateMapValueAsStringKeyIndex"
						},
						{
							"name": "ValueAsStringCleaning"
						},
						{
							"name": "ValueAsStringUnion"
						},
						{
							"name": "ValueAsStringSelect"
						},
						{
							"name": "StatusColumnSelectionCriteriaStatusEditor"
						},
						{
							"name": "StatusUpdateCriteriaStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tEquipmentComponentAttribute as string,\n\t\tOperator as string,\n\t\tThreshold as string,\n\t\tReferenceAttribute as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateCriteria\nsource(output(\n\t\tCriterion as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapTargetedAgingFamilies\nsource(output(\n\t\tCriterion as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapValueAsString\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusCriteriaStatusEditor\nReadCreateCriteria select(mapColumn(\n\t\t{$id} = Name,\n\t\tEquipmentComponentAttribute,\n\t\tOperator,\n\t\tThreshold,\n\t\tReferenceAttribute,\n\t\tValue\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Criterion;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapTargetedAgingFamilies aggregate(groupBy(Criterion),\n\tTargetedAgingFamilies = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapTargetedAgingFamiliesKeyIndex\nAggregateMapTargetedAgingFamiliesKeyIndex derive(TargetedAgingFamilies = replace(replace(replace(TargetedAgingFamilies, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> TargetedAgingFamiliesCleaning\nModelDefinition, TargetedAgingFamiliesCleaning join({$id} == Criterion,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> TargetedAgingFamiliesUnion\nTargetedAgingFamiliesUnion select(mapColumn(\n\t\t{$id},\n\t\tEquipmentComponentAttribute,\n\t\tOperator,\n\t\tThreshold,\n\t\tReferenceAttribute,\n\t\tValue,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tTargetedAgingFamilies\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetedAgingFamiliesSelect\nReadMapValueAsString aggregate(groupBy(Criterion),\n\tValueAsString = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapValueAsStringKeyIndex\nAggregateMapValueAsStringKeyIndex derive(ValueAsString = replace(replace(replace(ValueAsString, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> ValueAsStringCleaning\nTargetedAgingFamiliesSelect, ValueAsStringCleaning join({$id} == Criterion,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> ValueAsStringUnion\nValueAsStringUnion select(mapColumn(\n\t\t{$id},\n\t\tEquipmentComponentAttribute,\n\t\tOperator,\n\t\tThreshold,\n\t\tReferenceAttribute,\n\t\tValue,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tTargetedAgingFamilies,\n\t\tValueAsString\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ValueAsStringSelect\nReadCreateCriteria select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionCriteriaStatusEditor\nReadTempStatusCriteriaStatusEditor, StatusColumnSelectionCriteriaStatusEditor union(byName: true)~> StatusUpdateCriteriaStatusEditor\nValueAsStringSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Criteria.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateCriteriaStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Criteria_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateCriteriaStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateCriteria')]",
				"[concat(variables('factoryId'), '/datasets/CreateCriteria_MapTargetedAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/CreateCriteria_MapValueAsString')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponentsAgingFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponentsAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentComponentsAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "AgingFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsAgingFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_210",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentRows"
						},
						{
							"dataset": {
								"referenceName": "1_210",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "1_211",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentRows"
						},
						{
							"dataset": {
								"referenceName": "1_211",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "1_210",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingEquipmentComponentRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingEquipmentComponentInEquipmentComponentsStatus"
						},
						{
							"name": "ExistingAgingFamilyInAgingFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusEquipmentComponentAgingFamilyUniquenessCheckInEquipmentComponentsAgingFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentComponentsAgingFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> AgingFamiliesStatus\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsAgingFamiliesStatus\nReadCreateEquipmentComponentsAgingFamilies, EquipmentComponentsStatus exists(EquipmentComponent == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingEquipmentComponentInEquipmentComponentsStatus\nReadCreateEquipmentComponentsAgingFamilies, AgingFamiliesStatus exists(AgingFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingAgingFamilyInAgingFamiliesStatus\nReadCreateEquipmentComponentsAgingFamilies split(isNull(EquipmentComponent),\n\tisNull(AgingFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingEquipmentComponent, MissingAgingFamily)\nReadCreateEquipmentComponentsAgingFamilies, EquipmentComponentsAgingFamiliesStatus exists(ReadCreateEquipmentComponentsAgingFamilies@EquipmentComponent == EquipmentComponentsAgingFamiliesStatus@EquipmentComponent && ReadCreateEquipmentComponentsAgingFamilies@AgingFamily == EquipmentComponentsAgingFamiliesStatus@AgingFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusEquipmentComponentAgingFamilyUniquenessCheckInEquipmentComponentsAgingFamiliesStatus\nExistingEquipmentComponentInEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-210-NotExistingEquipmentComponent.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentRows\nExistingAgingFamilyInAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-210-NotExistingAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingAgingFamilyRows\nCheckMandatoryData@MissingEquipmentComponent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-211-MissColumnEquipmentComponent.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentRows\nCheckMandatoryData@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-211-MissColumnAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRows\nStatusEquipmentComponentAgingFamilyUniquenessCheckInEquipmentComponentsAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-210-AlreadyExistEquipmentComponent.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingEquipmentComponentRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponentsAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/1_210')]",
				"[concat(variables('factoryId'), '/datasets/1_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponentsAgingFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponentsAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentComponentsAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentsAgingFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentsAgingFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentComponentsAgingFamilies\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor\nReadCreateEquipmentComponentsAgingFamilies select(mapColumn(\n\t\t{$sourceId} = EquipmentComponent,\n\t\t{$targetId} = AgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'AgingLaw',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateEquipmentComponentsAgingFamilies select(mapColumn(\n\t\tEquipmentComponent,\n\t\tAgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentsAgingFamiliesStatusEditor\nReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor, StatusColumnSelectionEquipmentComponentsAgingFamiliesStatusEditor union(byName: true)~> StatusUpdateEquipmentComponentsAgingFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentComponentsAgingFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentComponentsAgingFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponentsAgingFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentsAgingFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponentsAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponentsEquipmentComponents_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponentsEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentComponentsEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsEquipmentComponentsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_220",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentSourceRows"
						},
						{
							"dataset": {
								"referenceName": "1_220",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentTargetRows"
						},
						{
							"dataset": {
								"referenceName": "1_221",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentSourceRows"
						},
						{
							"dataset": {
								"referenceName": "1_221",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentTargetRows"
						},
						{
							"dataset": {
								"referenceName": "1_220",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingEquipmentComponentSourceRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingEquipmentComponentSourceInEquipmentComponentsStatus"
						},
						{
							"name": "ExistingEquipmentComponentTargetInEquipmentComponentsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusEquipmentComponentSourceEquipmentComponentTargetUniquenessCheckInEquipmentComponentsEquipmentComponentsStatus"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentComponentsEquipmentComponents\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsStatus\nsource(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsEquipmentComponentsStatus\nReadCreateEquipmentComponentsEquipmentComponents, EquipmentComponentsStatus exists(EquipmentComponentSource == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingEquipmentComponentSourceInEquipmentComponentsStatus\nReadCreateEquipmentComponentsEquipmentComponents, EquipmentComponentsStatus exists(EquipmentComponentTarget == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingEquipmentComponentTargetInEquipmentComponentsStatus\nReadCreateEquipmentComponentsEquipmentComponents split(isNull(EquipmentComponentSource),\n\tisNull(EquipmentComponentTarget),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingEquipmentComponentSource, MissingEquipmentComponentTarget)\nReadCreateEquipmentComponentsEquipmentComponents, EquipmentComponentsEquipmentComponentsStatus exists(ReadCreateEquipmentComponentsEquipmentComponents@EquipmentComponentSource == EquipmentComponentsEquipmentComponentsStatus@EquipmentComponentSource && ReadCreateEquipmentComponentsEquipmentComponents@EquipmentComponentTarget == EquipmentComponentsEquipmentComponentsStatus@EquipmentComponentTarget,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusEquipmentComponentSourceEquipmentComponentTargetUniquenessCheckInEquipmentComponentsEquipmentComponentsStatus\nExistingEquipmentComponentSourceInEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-220-NotExistingEquipmentComponentSource.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentSourceRows\nExistingEquipmentComponentTargetInEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-220-NotExistingEquipmentComponentTarget.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentTargetRows\nCheckMandatoryData@MissingEquipmentComponentSource sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-221-MissColumnEquipmentComponentSource.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentSourceRows\nCheckMandatoryData@MissingEquipmentComponentTarget sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-221-MissColumnEquipmentComponentTarget.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentTargetRows\nStatusEquipmentComponentSourceEquipmentComponentTargetUniquenessCheckInEquipmentComponentsEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-220-AlreadyExistEquipmentComponentSource.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingEquipmentComponentSourceRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponentsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/1_220')]",
				"[concat(variables('factoryId'), '/datasets/1_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponentsEquipmentComponents_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponentsEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentComponentsEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentComponentsEquipmentComponents\nsource(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor\nReadCreateEquipmentComponentsEquipmentComponents select(mapColumn(\n\t\t{$sourceId} = EquipmentComponentSource,\n\t\t{$targetId} = EquipmentComponentTarget\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'AgingInteraction',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateEquipmentComponentsEquipmentComponents select(mapColumn(\n\t\tEquipmentComponentSource,\n\t\tEquipmentComponentTarget\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentsEquipmentComponentsStatusEditor\nReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentComponentsEquipmentComponentsStatusEditor union(byName: true)~> StatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentComponentsEquipmentComponents.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponentsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponentsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponents_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponents_MapCustomDataString",
								"type": "DatasetReference"
							},
							"name": "CreateEquipmentComponentsMapCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponents_MapCustomDataNumber",
								"type": "DatasetReference"
							},
							"name": "CreateEquipmentComponentsMapCustomDataNumber"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_110",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteInstallationYearWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteEnvironmentAgingRateWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteQuantityWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteHealthScoreWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_113",
								"type": "DatasetReference"
							},
							"name": "WriteHealthScoreInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteFinancialConsequencesFactorWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteEnvironmentalConsequencesFactorWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteNetworkConsequencesFactorWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteKnownApparentAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_113",
								"type": "DatasetReference"
							},
							"name": "WriteKnownApparentAgeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteCriticalityLevelFailureWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteCriticalityLevelNetworkConstraintWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentRowsCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCustomDataRowsCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "1_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentRowsCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentRowsCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCustomDataRowsCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "1_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "1_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentRowsCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteCustomDataNumberValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_112",
								"type": "DatasetReference"
							},
							"name": "WriteSAIDI15minWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInEquipmentComponentsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullInstallationYear"
						},
						{
							"name": "InstallationYearTypeCheck"
						},
						{
							"name": "NonNullEnvironmentAgingRate"
						},
						{
							"name": "EnvironmentAgingRateTypeCheck"
						},
						{
							"name": "NonNullQuantity"
						},
						{
							"name": "QuantityTypeCheck"
						},
						{
							"name": "NonNullHealthScore"
						},
						{
							"name": "HealthScoreTypeCheck"
						},
						{
							"name": "HealthScoreRangeCheck"
						},
						{
							"name": "NonNullFinancialConsequencesFactor"
						},
						{
							"name": "FinancialConsequencesFactorTypeCheck"
						},
						{
							"name": "NonNullEnvironmentalConsequencesFactor"
						},
						{
							"name": "EnvironmentalConsequencesFactorTypeCheck"
						},
						{
							"name": "NonNullNetworkConsequencesFactor"
						},
						{
							"name": "NetworkConsequencesFactorTypeCheck"
						},
						{
							"name": "NonNullKnownApparentAge"
						},
						{
							"name": "KnownApparentAgeTypeCheck"
						},
						{
							"name": "KnownApparentAgeRangeCheck"
						},
						{
							"name": "NonNullCriticalityLevelFailure"
						},
						{
							"name": "CriticalityLevelFailureTypeCheck"
						},
						{
							"name": "NonNullCriticalityLevelNetworkConstraint"
						},
						{
							"name": "CriticalityLevelNetworkConstraintTypeCheck"
						},
						{
							"name": "MapCustomDataStringMandatoryCheck"
						},
						{
							"name": "MapCustomDataStringExistenceCheck"
						},
						{
							"name": "MapCustomDataNumberMandatoryCheck"
						},
						{
							"name": "MapCustomDataNumberExistenceCheck"
						},
						{
							"name": "NonNullCustomDataNumberValue"
						},
						{
							"name": "CustomDataNumberValueTypeCheck"
						},
						{
							"name": "NonNullSAIDI15min"
						},
						{
							"name": "SAIDI15minTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tInstallationYear as string,\n\t\tEnvironmentAgingRate as string,\n\t\tQuantity as string,\n\t\tHealthScore as string,\n\t\tFinancialConsequencesFactor as string,\n\t\tEnvironmentalConsequencesFactor as string,\n\t\tNetworkConsequencesFactor as string,\n\t\tExtraArea as string,\n\t\tDateOfLastSpecificAction as string,\n\t\tDateOfLastStateRecording as string,\n\t\tKnownApparentAge as string,\n\t\tCriticalityLevelFailure as string,\n\t\tCriticalityLevelNetworkConstraint as string,\n\t\tExtraAreaLevel2 as string,\n\t\tSAIDI15min as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentComponents\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsStatus\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tCustomData as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateEquipmentComponentsMapCustomDataString\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tCustomData as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateEquipmentComponentsMapCustomDataNumber\nReadCreateEquipmentComponents aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateEquipmentComponents, EquipmentComponentsStatus exists(ReadCreateEquipmentComponents@Name == EquipmentComponentsStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInEquipmentComponentsStatus\nReadCreateEquipmentComponents split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateEquipmentComponents filter(not(isNull(InstallationYear))) ~> NonNullInstallationYear\nNonNullInstallationYear split(not(isInteger(InstallationYear)),\n\tdisjoint: false) ~> InstallationYearTypeCheck@(InstallationYearWrongType)\nReadCreateEquipmentComponents filter(not(isNull(EnvironmentAgingRate))) ~> NonNullEnvironmentAgingRate\nNonNullEnvironmentAgingRate split(not(isFloat(EnvironmentAgingRate)),\n\tdisjoint: false) ~> EnvironmentAgingRateTypeCheck@(EnvironmentAgingRateWrongType)\nReadCreateEquipmentComponents filter(not(isNull(Quantity))) ~> NonNullQuantity\nNonNullQuantity split(not(isFloat(Quantity)),\n\tdisjoint: false) ~> QuantityTypeCheck@(QuantityWrongType)\nReadCreateEquipmentComponents filter(not(isNull(HealthScore))) ~> NonNullHealthScore\nNonNullHealthScore split(not(isFloat(HealthScore)),\n\tdisjoint: false) ~> HealthScoreTypeCheck@(HealthScoreWrongType, HealthScoreCorrectType)\nHealthScoreTypeCheck@HealthScoreCorrectType filter(toFloat(HealthScore) < 0.0) ~> HealthScoreRangeCheck\nReadCreateEquipmentComponents filter(not(isNull(FinancialConsequencesFactor))) ~> NonNullFinancialConsequencesFactor\nNonNullFinancialConsequencesFactor split(not(isFloat(FinancialConsequencesFactor)),\n\tdisjoint: false) ~> FinancialConsequencesFactorTypeCheck@(FinancialConsequencesFactorWrongType)\nReadCreateEquipmentComponents filter(not(isNull(EnvironmentalConsequencesFactor))) ~> NonNullEnvironmentalConsequencesFactor\nNonNullEnvironmentalConsequencesFactor split(not(isFloat(EnvironmentalConsequencesFactor)),\n\tdisjoint: false) ~> EnvironmentalConsequencesFactorTypeCheck@(EnvironmentalConsequencesFactorWrongType)\nReadCreateEquipmentComponents filter(not(isNull(NetworkConsequencesFactor))) ~> NonNullNetworkConsequencesFactor\nNonNullNetworkConsequencesFactor split(not(isFloat(NetworkConsequencesFactor)),\n\tdisjoint: false) ~> NetworkConsequencesFactorTypeCheck@(NetworkConsequencesFactorWrongType)\nReadCreateEquipmentComponents filter(not(isNull(KnownApparentAge))) ~> NonNullKnownApparentAge\nNonNullKnownApparentAge split(not(isFloat(KnownApparentAge)),\n\tdisjoint: false) ~> KnownApparentAgeTypeCheck@(KnownApparentAgeWrongType, KnownApparentAgeCorrectType)\nKnownApparentAgeTypeCheck@KnownApparentAgeCorrectType filter(toFloat(KnownApparentAge) < 0.0) ~> KnownApparentAgeRangeCheck\nReadCreateEquipmentComponents filter(not(isNull(CriticalityLevelFailure))) ~> NonNullCriticalityLevelFailure\nNonNullCriticalityLevelFailure split(not(isFloat(CriticalityLevelFailure)),\n\tdisjoint: false) ~> CriticalityLevelFailureTypeCheck@(CriticalityLevelFailureWrongType)\nReadCreateEquipmentComponents filter(not(isNull(CriticalityLevelNetworkConstraint))) ~> NonNullCriticalityLevelNetworkConstraint\nNonNullCriticalityLevelNetworkConstraint split(not(isFloat(CriticalityLevelNetworkConstraint)),\n\tdisjoint: false) ~> CriticalityLevelNetworkConstraintTypeCheck@(CriticalityLevelNetworkConstraintWrongType)\nCreateEquipmentComponentsMapCustomDataString split(isNull(EquipmentComponent),\n\tisNull(CustomData),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCustomDataStringMandatoryCheck@(MissingEquipmentComponent, MissingCustomData, MissingValue)\nCreateEquipmentComponentsMapCustomDataString, ReadCreateEquipmentComponents exists(EquipmentComponent == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCustomDataStringExistenceCheck\nCreateEquipmentComponentsMapCustomDataNumber split(isNull(EquipmentComponent),\n\tisNull(CustomData),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCustomDataNumberMandatoryCheck@(MissingEquipmentComponent, MissingCustomData, MissingValue)\nCreateEquipmentComponentsMapCustomDataNumber, ReadCreateEquipmentComponents exists(EquipmentComponent == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCustomDataNumberExistenceCheck\nCreateEquipmentComponentsMapCustomDataNumber filter(not(isNull(Value))) ~> NonNullCustomDataNumberValue\nNonNullCustomDataNumberValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> CustomDataNumberValueTypeCheck@(CustomDataNumberValueWrongType)\nReadCreateEquipmentComponents filter(not(isNull(SAIDI15min))) ~> NonNullSAIDI15min\nNonNullSAIDI15min split(not(isFloat(SAIDI15min)),\n\tdisjoint: false) ~> SAIDI15minTypeCheck@(SAIDI15minWrongType)\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-110-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-110-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-111-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nInstallationYearTypeCheck@InstallationYearWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-InstallationYearWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteInstallationYearWrongTypeRows\nEnvironmentAgingRateTypeCheck@EnvironmentAgingRateWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-EnvironmentAgingRateWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEnvironmentAgingRateWrongTypeRows\nQuantityTypeCheck@QuantityWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-QuantityWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteQuantityWrongTypeRows\nHealthScoreTypeCheck@HealthScoreWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-HealthScoreWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteHealthScoreWrongTypeRows\nHealthScoreRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-113-HealthScoreInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteHealthScoreInvalidRangeRows\nFinancialConsequencesFactorTypeCheck@FinancialConsequencesFactorWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-FinancialConsequencesFactorWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteFinancialConsequencesFactorWrongTypeRows\nEnvironmentalConsequencesFactorTypeCheck@EnvironmentalConsequencesFactorWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-EnvironmentalConsequencesFactorWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEnvironmentalConsequencesFactorWrongTypeRows\nNetworkConsequencesFactorTypeCheck@NetworkConsequencesFactorWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-NetworkConsequencesFactorWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNetworkConsequencesFactorWrongTypeRows\nKnownApparentAgeTypeCheck@KnownApparentAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-KnownApparentAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteKnownApparentAgeWrongTypeRows\nKnownApparentAgeRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-113-KnownApparentAgeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteKnownApparentAgeInvalidRangeRows\nCriticalityLevelFailureTypeCheck@CriticalityLevelFailureWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-CriticalityLevelFailureWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCriticalityLevelFailureWrongTypeRows\nCriticalityLevelNetworkConstraintTypeCheck@CriticalityLevelNetworkConstraintWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-CriticalityLevelNetworkConstraintWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCriticalityLevelNetworkConstraintWrongTypeRows\nMapCustomDataStringMandatoryCheck@MissingEquipmentComponent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-111-MissColumnEquipmentComponentCustomDataString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentRowsCustomDataString\nMapCustomDataStringMandatoryCheck@MissingCustomData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-111-MissColumnCustomDataCustomDataString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCustomDataRowsCustomDataString\nMapCustomDataStringMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-111-MissColumnValueCustomDataString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCustomDataString\nMapCustomDataStringExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-110-NotExistingEquipmentComponentCustomDataString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentRowsCustomDataString\nMapCustomDataNumberMandatoryCheck@MissingEquipmentComponent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-111-MissColumnEquipmentComponentCustomDataNumber.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentRowsCustomDataNumber\nMapCustomDataNumberMandatoryCheck@MissingCustomData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-111-MissColumnCustomDataCustomDataNumber.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCustomDataRowsCustomDataNumber\nMapCustomDataNumberMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-111-MissColumnValueCustomDataNumber.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCustomDataNumber\nMapCustomDataNumberExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-110-NotExistingEquipmentComponentCustomDataNumber.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentRowsCustomDataNumber\nCustomDataNumberValueTypeCheck@CustomDataNumberValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-CustomDataNumberValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCustomDataNumberValueWrongTypeRows\nSAIDI15minTypeCheck@SAIDI15minWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-112-SAIDI15minWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteSAIDI15minWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponents_MapCustomDataString')]",
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponents_MapCustomDataNumber')]",
				"[concat(variables('factoryId'), '/datasets/1_110')]",
				"[concat(variables('factoryId'), '/datasets/1_111')]",
				"[concat(variables('factoryId'), '/datasets/1_112')]",
				"[concat(variables('factoryId'), '/datasets/1_113')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentComponents_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponents_MapCustomDataString",
								"type": "DatasetReference"
							},
							"name": "ReadMapCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "CreateEquipmentComponents_MapCustomDataNumber",
								"type": "DatasetReference"
							},
							"name": "ReadMapCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapCustomDataStringKeyCustomData"
						},
						{
							"name": "CustomDataStringCleaning"
						},
						{
							"name": "CustomDataStringUnion"
						},
						{
							"name": "CustomDataStringSelect"
						},
						{
							"name": "AggregateMapCustomDataNumberKeyCustomData"
						},
						{
							"name": "CustomDataNumberCleaning"
						},
						{
							"name": "CustomDataNumberUnion"
						},
						{
							"name": "CustomDataNumberSelect"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tInstallationYear as string,\n\t\tEnvironmentAgingRate as string,\n\t\tQuantity as string,\n\t\tHealthScore as string,\n\t\tFinancialConsequencesFactor as string,\n\t\tEnvironmentalConsequencesFactor as string,\n\t\tNetworkConsequencesFactor as string,\n\t\tExtraArea as string,\n\t\tDateOfLastSpecificAction as string,\n\t\tDateOfLastStateRecording as string,\n\t\tKnownApparentAge as string,\n\t\tCriticalityLevelFailure as string,\n\t\tCriticalityLevelNetworkConstraint as string,\n\t\tExtraAreaLevel2 as string,\n\t\tSAIDI15min as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentComponents\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tCustomData as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCustomDataString\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tCustomData as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCustomDataNumber\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentsStatusEditor\nReadCreateEquipmentComponents select(mapColumn(\n\t\t{$id} = Name,\n\t\tInstallationYear,\n\t\tEnvironmentAgingRate,\n\t\tQuantity,\n\t\tHealthScore,\n\t\tFinancialConsequencesFactor,\n\t\tEnvironmentalConsequencesFactor,\n\t\tNetworkConsequencesFactor,\n\t\tExtraArea,\n\t\tDateOfLastSpecificAction,\n\t\tDateOfLastStateRecording,\n\t\tKnownApparentAge,\n\t\tCriticalityLevelFailure,\n\t\tCriticalityLevelNetworkConstraint,\n\t\tExtraAreaLevel2,\n\t\tSAIDI15min\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:EquipmentComponent;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapCustomDataString aggregate(groupBy(EquipmentComponent),\n\tCustomDataString = toString(keyValues(collect(toString(CustomData)), collect(toString(Value))))) ~> AggregateMapCustomDataStringKeyCustomData\nAggregateMapCustomDataStringKeyCustomData derive(CustomDataString = replace(replace(replace(CustomDataString, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CustomDataStringCleaning\nModelDefinition, CustomDataStringCleaning join({$id} == EquipmentComponent,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CustomDataStringUnion\nCustomDataStringUnion select(mapColumn(\n\t\t{$id},\n\t\tInstallationYear,\n\t\tEnvironmentAgingRate,\n\t\tQuantity,\n\t\tHealthScore,\n\t\tFinancialConsequencesFactor,\n\t\tEnvironmentalConsequencesFactor,\n\t\tNetworkConsequencesFactor,\n\t\tExtraArea,\n\t\tDateOfLastSpecificAction,\n\t\tDateOfLastStateRecording,\n\t\tKnownApparentAge,\n\t\tCriticalityLevelFailure,\n\t\tCriticalityLevelNetworkConstraint,\n\t\tExtraAreaLevel2,\n\t\tSAIDI15min,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCustomData_String = CustomDataString\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomDataStringSelect\nReadMapCustomDataNumber aggregate(groupBy(EquipmentComponent),\n\tCustomDataNumber = toString(keyValues(collect(toString(CustomData)), collect(toFloat(Value))))) ~> AggregateMapCustomDataNumberKeyCustomData\nAggregateMapCustomDataNumberKeyCustomData derive(CustomDataNumber = replace(replace(replace(CustomDataNumber, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CustomDataNumberCleaning\nCustomDataStringSelect, CustomDataNumberCleaning join({$id} == EquipmentComponent,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CustomDataNumberUnion\nCustomDataNumberUnion select(mapColumn(\n\t\t{$id},\n\t\tInstallationYear,\n\t\tEnvironmentAgingRate,\n\t\tQuantity,\n\t\tHealthScore,\n\t\tFinancialConsequencesFactor,\n\t\tEnvironmentalConsequencesFactor,\n\t\tNetworkConsequencesFactor,\n\t\tExtraArea,\n\t\tDateOfLastSpecificAction,\n\t\tDateOfLastStateRecording,\n\t\tKnownApparentAge,\n\t\tCriticalityLevelFailure,\n\t\tCriticalityLevelNetworkConstraint,\n\t\tExtraAreaLevel2,\n\t\tSAIDI15min,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCustomData_String,\n\t\tCustomData_Number = CustomDataNumber\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomDataNumberSelect\nReadCreateEquipmentComponents select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentsStatusEditor\nReadTempStatusEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentComponentsStatusEditor union(byName: true)~> StatusUpdateEquipmentComponentsStatusEditor\nCustomDataNumberSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentComponents.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponents_MapCustomDataString')]",
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentComponents_MapCustomDataNumber')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroupsEquipmentComponents_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentGroupsEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentGroupsEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentGroupsStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentGroupsEquipmentComponentsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_240",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentGroupRows"
						},
						{
							"dataset": {
								"referenceName": "11_240",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentRows"
						},
						{
							"dataset": {
								"referenceName": "11_241",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentGroupRows"
						},
						{
							"dataset": {
								"referenceName": "11_241",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentRows"
						},
						{
							"dataset": {
								"referenceName": "11_240",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingEquipmentGroupRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingEquipmentGroupInEquipmentGroupsStatus"
						},
						{
							"name": "ExistingEquipmentComponentInEquipmentComponentsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusEquipmentGroupEquipmentComponentUniquenessCheckInEquipmentGroupsEquipmentComponentsStatus"
						}
					],
					"script": "source(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentGroupsEquipmentComponents\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentGroupsStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsStatus\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentGroupsEquipmentComponentsStatus\nReadCreateEquipmentGroupsEquipmentComponents, EquipmentGroupsStatus exists(EquipmentGroup == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingEquipmentGroupInEquipmentGroupsStatus\nReadCreateEquipmentGroupsEquipmentComponents, EquipmentComponentsStatus exists(EquipmentComponent == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingEquipmentComponentInEquipmentComponentsStatus\nReadCreateEquipmentGroupsEquipmentComponents split(isNull(EquipmentGroup),\n\tisNull(EquipmentComponent),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingEquipmentGroup, MissingEquipmentComponent)\nReadCreateEquipmentGroupsEquipmentComponents, EquipmentGroupsEquipmentComponentsStatus exists(ReadCreateEquipmentGroupsEquipmentComponents@EquipmentGroup == EquipmentGroupsEquipmentComponentsStatus@EquipmentGroup && ReadCreateEquipmentGroupsEquipmentComponents@EquipmentComponent == EquipmentGroupsEquipmentComponentsStatus@EquipmentComponent,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusEquipmentGroupEquipmentComponentUniquenessCheckInEquipmentGroupsEquipmentComponentsStatus\nExistingEquipmentGroupInEquipmentGroupsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-240-NotExistingEquipmentGroup.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentGroupRows\nExistingEquipmentComponentInEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-240-NotExistingEquipmentComponent.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentRows\nCheckMandatoryData@MissingEquipmentGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-241-MissColumnEquipmentGroup.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentGroupRows\nCheckMandatoryData@MissingEquipmentComponent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-241-MissColumnEquipmentComponent.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentRows\nStatusEquipmentGroupEquipmentComponentUniquenessCheckInEquipmentGroupsEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-240-AlreadyExistEquipmentGroup.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingEquipmentGroupRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroupsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_240')]",
				"[concat(variables('factoryId'), '/datasets/11_241')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroupsEquipmentComponents_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentGroupsEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentGroupsEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentGroupsEquipmentComponents\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor\nReadCreateEquipmentGroupsEquipmentComponents select(mapColumn(\n\t\t{$sourceId} = EquipmentGroup,\n\t\t{$targetId} = EquipmentComponent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'Group_contains_EquipmentComponent',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateEquipmentGroupsEquipmentComponents select(mapColumn(\n\t\tEquipmentGroup,\n\t\tEquipmentComponent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor\nReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor union(byName: true)~> StatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentGroupsEquipmentComponents.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentGroupsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroupsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroups_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentGroupsStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateEquipmentGroups_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "CreateEquipmentGroupsMapBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "CreateEquipmentGroups_MapHRCategories",
								"type": "DatasetReference"
							},
							"name": "CreateEquipmentGroupsMapHRCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_120",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_122",
								"type": "DatasetReference"
							},
							"name": "WriteQuantityWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentGroupRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "11_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentGroupRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentGroupRowsHRCategories"
						},
						{
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsHRCategories"
						},
						{
							"dataset": {
								"referenceName": "11_121",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsHRCategories"
						},
						{
							"dataset": {
								"referenceName": "11_120",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentGroupRowsHRCategories"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInEquipmentGroupsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullQuantity"
						},
						{
							"name": "QuantityTypeCheck"
						},
						{
							"name": "MapBudgetCategoriesMandatoryCheck"
						},
						{
							"name": "MapBudgetCategoriesExistenceCheck"
						},
						{
							"name": "MapHRCategoriesMandatoryCheck"
						},
						{
							"name": "MapHRCategoriesExistenceCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tQuantity as string,\n\t\tRatingLevel as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentGroups\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentGroupsStatus\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateEquipmentGroupsMapBudgetCategories\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateEquipmentGroupsMapHRCategories\nReadCreateEquipmentGroups aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateEquipmentGroups, EquipmentGroupsStatus exists(ReadCreateEquipmentGroups@Name == EquipmentGroupsStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInEquipmentGroupsStatus\nReadCreateEquipmentGroups split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateEquipmentGroups filter(not(isNull(Quantity))) ~> NonNullQuantity\nNonNullQuantity split(not(isFloat(Quantity)),\n\tdisjoint: false) ~> QuantityTypeCheck@(QuantityWrongType)\nCreateEquipmentGroupsMapBudgetCategories split(isNull(EquipmentGroup),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapBudgetCategoriesMandatoryCheck@(MissingEquipmentGroup, MissingIndex, MissingValue)\nCreateEquipmentGroupsMapBudgetCategories, ReadCreateEquipmentGroups exists(EquipmentGroup == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapBudgetCategoriesExistenceCheck\nCreateEquipmentGroupsMapHRCategories split(isNull(EquipmentGroup),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapHRCategoriesMandatoryCheck@(MissingEquipmentGroup, MissingIndex, MissingValue)\nCreateEquipmentGroupsMapHRCategories, ReadCreateEquipmentGroups exists(EquipmentGroup == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapHRCategoriesExistenceCheck\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-120-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInEquipmentGroupsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-120-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-121-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nQuantityTypeCheck@QuantityWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-122-QuantityWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteQuantityWrongTypeRows\nMapBudgetCategoriesMandatoryCheck@MissingEquipmentGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-121-MissColumnEquipmentGroupBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentGroupRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-121-MissColumnIndexBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-121-MissColumnValueBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsBudgetCategories\nMapBudgetCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-120-NotExistingEquipmentGroupBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentGroupRowsBudgetCategories\nMapHRCategoriesMandatoryCheck@MissingEquipmentGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-121-MissColumnEquipmentGroupHRCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentGroupRowsHRCategories\nMapHRCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-121-MissColumnIndexHRCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsHRCategories\nMapHRCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-121-MissColumnValueHRCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsHRCategories\nMapHRCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-120-NotExistingEquipmentGroupHRCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentGroupRowsHRCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroups_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroups_MapHRCategories')]",
				"[concat(variables('factoryId'), '/datasets/11_120')]",
				"[concat(variables('factoryId'), '/datasets/11_121')]",
				"[concat(variables('factoryId'), '/datasets/11_122')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateEquipmentGroups_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadCreateEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "CreateEquipmentGroups_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "CreateEquipmentGroups_MapHRCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapHRCategories"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentGroupsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentGroupsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapBudgetCategoriesKeyIndex"
						},
						{
							"name": "BudgetCategoriesCleaning"
						},
						{
							"name": "BudgetCategoriesUnion"
						},
						{
							"name": "BudgetCategoriesSelect"
						},
						{
							"name": "AggregateMapHRCategoriesKeyIndex"
						},
						{
							"name": "HRCategoriesCleaning"
						},
						{
							"name": "HRCategoriesUnion"
						},
						{
							"name": "HRCategoriesSelect"
						},
						{
							"name": "StatusColumnSelectionEquipmentGroupsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentGroupsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tQuantity as string,\n\t\tRatingLevel as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateEquipmentGroups\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapBudgetCategories\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapHRCategories\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentGroupsStatusEditor\nReadCreateEquipmentGroups select(mapColumn(\n\t\t{$id} = Name,\n\t\tAssetClass,\n\t\tQuantity,\n\t\tRatingLevel\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:EquipmentGroup;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapBudgetCategories aggregate(groupBy(EquipmentGroup),\n\tBudgetCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapBudgetCategoriesKeyIndex\nAggregateMapBudgetCategoriesKeyIndex derive(BudgetCategories = replace(replace(replace(BudgetCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> BudgetCategoriesCleaning\nModelDefinition, BudgetCategoriesCleaning join({$id} == EquipmentGroup,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> BudgetCategoriesUnion\nBudgetCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tQuantity,\n\t\tRatingLevel,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tBudgetCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BudgetCategoriesSelect\nReadMapHRCategories aggregate(groupBy(EquipmentGroup),\n\tHRCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapHRCategoriesKeyIndex\nAggregateMapHRCategoriesKeyIndex derive(HRCategories = replace(replace(replace(HRCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> HRCategoriesCleaning\nBudgetCategoriesSelect, HRCategoriesCleaning join({$id} == EquipmentGroup,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> HRCategoriesUnion\nHRCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tQuantity,\n\t\tRatingLevel,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tBudgetCategories,\n\t\tHRCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> HRCategoriesSelect\nReadCreateEquipmentGroups select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentGroupsStatusEditor\nReadTempStatusEquipmentGroupsStatusEditor, StatusColumnSelectionEquipmentGroupsStatusEditor union(byName: true)~> StatusUpdateEquipmentGroupsStatusEditor\nHRCategoriesSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentGroups.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentGroupsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentGroups_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentGroupsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroups_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/CreateEquipmentGroups_MapHRCategories')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamiliesAgingFamiliesApplication_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesApplication",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSubActionFamiliesAgingFamiliesApplication"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "AgingFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesAgingFamiliesApplicationStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_220",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_220",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_221",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_221",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_220",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingSubActionFamilyRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingSubActionFamilyInSubActionFamiliesStatus"
						},
						{
							"name": "ExistingAgingFamilyInAgingFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusSubActionFamilyAgingFamilyUniquenessCheckInSubActionFamiliesAgingFamiliesApplicationStatus"
						}
					],
					"script": "source(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSubActionFamiliesAgingFamiliesApplication\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> AgingFamiliesStatus\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesAgingFamiliesApplicationStatus\nReadCreateSubActionFamiliesAgingFamiliesApplication, SubActionFamiliesStatus exists(SubActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingSubActionFamilyInSubActionFamiliesStatus\nReadCreateSubActionFamiliesAgingFamiliesApplication, AgingFamiliesStatus exists(AgingFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingAgingFamilyInAgingFamiliesStatus\nReadCreateSubActionFamiliesAgingFamiliesApplication split(isNull(SubActionFamily),\n\tisNull(AgingFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingSubActionFamily, MissingAgingFamily)\nReadCreateSubActionFamiliesAgingFamiliesApplication, SubActionFamiliesAgingFamiliesApplicationStatus exists(ReadCreateSubActionFamiliesAgingFamiliesApplication@SubActionFamily == SubActionFamiliesAgingFamiliesApplicationStatus@SubActionFamily && ReadCreateSubActionFamiliesAgingFamiliesApplication@AgingFamily == SubActionFamiliesAgingFamiliesApplicationStatus@AgingFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusSubActionFamilyAgingFamilyUniquenessCheckInSubActionFamiliesAgingFamiliesApplicationStatus\nExistingSubActionFamilyInSubActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-220-NotExistingSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSubActionFamilyRows\nExistingAgingFamilyInAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-220-NotExistingAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingAgingFamilyRows\nCheckMandatoryData@MissingSubActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-221-MissColumnSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSubActionFamilyRows\nCheckMandatoryData@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-221-MissColumnAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRows\nStatusSubActionFamilyAgingFamilyUniquenessCheckInSubActionFamiliesAgingFamiliesApplicationStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-220-AlreadyExistSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingSubActionFamilyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamiliesAgingFamiliesApplication')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_220')]",
				"[concat(variables('factoryId'), '/datasets/11_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamiliesAgingFamiliesApplication_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesApplication",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSubActionFamiliesAgingFamiliesApplication"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						}
					],
					"script": "source(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSubActionFamiliesAgingFamiliesApplication\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor\nReadCreateSubActionFamiliesAgingFamiliesApplication select(mapColumn(\n\t\t{$sourceId} = SubActionFamily,\n\t\t{$targetId} = AgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'apply_to_AgingFamily',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateSubActionFamiliesAgingFamiliesApplication select(mapColumn(\n\t\tSubActionFamily,\n\t\tAgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor\nReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor, StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor union(byName: true)~> StatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SubActionFamiliesAgingFamiliesApplication.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamiliesAgingFamiliesApplication_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamiliesAgingFamiliesApplication')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamiliesAgingFamiliesReplacement_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesReplacement",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSubActionFamiliesAgingFamiliesReplacement"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "AgingFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesAgingFamiliesReplacementStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_230",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_230",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_231",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_231",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_230",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingSubActionFamilyRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingSubActionFamilyInSubActionFamiliesStatus"
						},
						{
							"name": "ExistingAgingFamilyInAgingFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusSubActionFamilyAgingFamilyUniquenessCheckInSubActionFamiliesAgingFamiliesReplacementStatus"
						}
					],
					"script": "source(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSubActionFamiliesAgingFamiliesReplacement\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> AgingFamiliesStatus\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesAgingFamiliesReplacementStatus\nReadCreateSubActionFamiliesAgingFamiliesReplacement, SubActionFamiliesStatus exists(SubActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingSubActionFamilyInSubActionFamiliesStatus\nReadCreateSubActionFamiliesAgingFamiliesReplacement, AgingFamiliesStatus exists(AgingFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingAgingFamilyInAgingFamiliesStatus\nReadCreateSubActionFamiliesAgingFamiliesReplacement split(isNull(SubActionFamily),\n\tisNull(AgingFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingSubActionFamily, MissingAgingFamily)\nReadCreateSubActionFamiliesAgingFamiliesReplacement, SubActionFamiliesAgingFamiliesReplacementStatus exists(ReadCreateSubActionFamiliesAgingFamiliesReplacement@SubActionFamily == SubActionFamiliesAgingFamiliesReplacementStatus@SubActionFamily && ReadCreateSubActionFamiliesAgingFamiliesReplacement@AgingFamily == SubActionFamiliesAgingFamiliesReplacementStatus@AgingFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusSubActionFamilyAgingFamilyUniquenessCheckInSubActionFamiliesAgingFamiliesReplacementStatus\nExistingSubActionFamilyInSubActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-230-NotExistingSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSubActionFamilyRows\nExistingAgingFamilyInAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-230-NotExistingAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingAgingFamilyRows\nCheckMandatoryData@MissingSubActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-231-MissColumnSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSubActionFamilyRows\nCheckMandatoryData@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-231-MissColumnAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRows\nStatusSubActionFamilyAgingFamilyUniquenessCheckInSubActionFamiliesAgingFamiliesReplacementStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-230-AlreadyExistSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingSubActionFamilyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamiliesAgingFamiliesReplacement')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_230')]",
				"[concat(variables('factoryId'), '/datasets/11_231')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamiliesAgingFamiliesReplacement_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSubActionFamiliesAgingFamiliesReplacement",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSubActionFamiliesAgingFamiliesReplacement"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"script": "source(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSubActionFamiliesAgingFamiliesReplacement\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor\nReadCreateSubActionFamiliesAgingFamiliesReplacement select(mapColumn(\n\t\t{$sourceId} = SubActionFamily,\n\t\t{$targetId} = AgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'replace_with_RetrofitAgingFamily',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateSubActionFamiliesAgingFamiliesReplacement select(mapColumn(\n\t\tSubActionFamily,\n\t\tAgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor\nReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor, StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor union(byName: true)~> StatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SuBActionFamiliesAgingFamiliesReplacement.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamiliesAgingFamiliesReplacement_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamiliesAgingFamiliesReplacement')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_110",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_113",
								"type": "DatasetReference"
							},
							"name": "WriteTypeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "11_113",
								"type": "DatasetReference"
							},
							"name": "WriteImpactModeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "11_112",
								"type": "DatasetReference"
							},
							"name": "WriteImpactOnEquipmentWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "11_113",
								"type": "DatasetReference"
							},
							"name": "WriteImpactOnEquipmentInvalidRangeRows"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInSubActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnumType"
						},
						{
							"name": "TypeEnumCheck"
						},
						{
							"name": "NonNullEnumImpactMode"
						},
						{
							"name": "ImpactModeEnumCheck"
						},
						{
							"name": "NonNullImpactOnEquipment"
						},
						{
							"name": "ImpactOnEquipmentTypeCheck"
						},
						{
							"name": "ImpactOnEquipmentRangeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tType as string,\n\t\tImpactMode as string,\n\t\tImpactOnEquipment as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSubActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesStatus\nReadCreateSubActionFamilies aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateSubActionFamilies, SubActionFamiliesStatus exists(ReadCreateSubActionFamilies@Name == SubActionFamiliesStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInSubActionFamiliesStatus\nReadCreateSubActionFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateSubActionFamilies filter(not(isNull(Type))) ~> NonNullEnumType\nNonNullEnumType filter(not(in(['NoAction', 'Repairs', 'Replacement', 'Inspection', 'Activation', 'Deactivation', 'RepairsWithoutInspection'], Type))) ~> TypeEnumCheck\nReadCreateSubActionFamilies filter(not(isNull(ImpactMode))) ~> NonNullEnumImpactMode\nNonNullEnumImpactMode filter(not(in(['ApparentAgeBased'], ImpactMode))) ~> ImpactModeEnumCheck\nReadCreateSubActionFamilies filter(not(isNull(ImpactOnEquipment))) ~> NonNullImpactOnEquipment\nNonNullImpactOnEquipment split(not(isFloat(ImpactOnEquipment)),\n\tdisjoint: false) ~> ImpactOnEquipmentTypeCheck@(ImpactOnEquipmentWrongType, ImpactOnEquipmentCorrectType)\nImpactOnEquipmentTypeCheck@ImpactOnEquipmentCorrectType filter(or(toFloat(ImpactOnEquipment) < 0.0, toFloat(ImpactOnEquipment) > 1.0)) ~> ImpactOnEquipmentRangeCheck\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-110-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInSubActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-110-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-111-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nTypeEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-113-TypeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTypeInvalidRangeRows\nImpactModeEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-113-ImpactModeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteImpactModeInvalidRangeRows\nImpactOnEquipmentTypeCheck@ImpactOnEquipmentWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-112-ImpactOnEquipmentWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteImpactOnEquipmentWrongTypeRows\nImpactOnEquipmentRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-113-ImpactOnEquipmentInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteImpactOnEquipmentInvalidRangeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_110')]",
				"[concat(variables('factoryId'), '/datasets/11_111')]",
				"[concat(variables('factoryId'), '/datasets/11_113')]",
				"[concat(variables('factoryId'), '/datasets/11_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSubActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tType as string,\n\t\tImpactMode as string,\n\t\tImpactOnEquipment as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSubActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesStatusEditor\nReadCreateSubActionFamilies select(mapColumn(\n\t\t{$id} = Name,\n\t\tType,\n\t\tImpactMode,\n\t\tImpactOnEquipment\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:SubActionFamily;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadCreateSubActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesStatusEditor\nReadTempStatusSubActionFamiliesStatusEditor, StatusColumnSelectionSubActionFamiliesStatusEditor union(byName: true)~> StatusUpdateSubActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SubActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSubActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActionsActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSustainmentActionsActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSustainmentActionsActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_210",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSustainmentActionRows"
						},
						{
							"dataset": {
								"referenceName": "2_210",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_211",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSustainmentActionRows"
						},
						{
							"dataset": {
								"referenceName": "2_211",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_210",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingSustainmentActionRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingSustainmentActionInSustainmentActionsStatus"
						},
						{
							"name": "ExistingActionFamilyInActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusSustainmentActionActionFamilyUniquenessCheckInSustainmentActionsActionFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSustainmentActionsActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesStatus\nsource(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsActionFamiliesStatus\nReadCreateSustainmentActionsActionFamilies, SustainmentActionsStatus exists(SustainmentAction == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingSustainmentActionInSustainmentActionsStatus\nReadCreateSustainmentActionsActionFamilies, ActionFamiliesStatus exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingActionFamilyInActionFamiliesStatus\nReadCreateSustainmentActionsActionFamilies split(isNull(SustainmentAction),\n\tisNull(ActionFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingSustainmentAction, MissingActionFamily)\nReadCreateSustainmentActionsActionFamilies, SustainmentActionsActionFamiliesStatus exists(ReadCreateSustainmentActionsActionFamilies@SustainmentAction == SustainmentActionsActionFamiliesStatus@SustainmentAction && ReadCreateSustainmentActionsActionFamilies@ActionFamily == SustainmentActionsActionFamiliesStatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusSustainmentActionActionFamilyUniquenessCheckInSustainmentActionsActionFamiliesStatus\nExistingSustainmentActionInSustainmentActionsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-210-NotExistingSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSustainmentActionRows\nExistingActionFamilyInActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-210-NotExistingActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRows\nCheckMandatoryData@MissingSustainmentAction sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-211-MissColumnSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSustainmentActionRows\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-211-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nStatusSustainmentActionActionFamilyUniquenessCheckInSustainmentActionsActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-210-AlreadyExistSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingSustainmentActionRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActionsActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_210')]",
				"[concat(variables('factoryId'), '/datasets/2_211')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActionsActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSustainmentActionsActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSustainmentActionsActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionsActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionsActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionsActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSustainmentActionsActionFamilies\nsource(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionsActionFamiliesStatusEditor\nReadCreateSustainmentActionsActionFamilies select(mapColumn(\n\t\t{$sourceId} = SustainmentAction,\n\t\t{$targetId} = ActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'has_type_ActionFamily',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateSustainmentActionsActionFamilies select(mapColumn(\n\t\tSustainmentAction,\n\t\tActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionsActionFamiliesStatusEditor\nReadTempStatusSustainmentActionsActionFamiliesStatusEditor, StatusColumnSelectionSustainmentActionsActionFamiliesStatusEditor union(byName: true)~> StatusUpdateSustainmentActionsActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SustainmentActionsActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSustainmentActionsActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentActionsActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionsActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActionsActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActionsEquipmentGroups_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSustainmentActionsEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSustainmentActionsEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentGroupsStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsEquipmentGroupsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_250",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSustainmentActionRows"
						},
						{
							"dataset": {
								"referenceName": "11_250",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentGroupRows"
						},
						{
							"dataset": {
								"referenceName": "11_251",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSustainmentActionRows"
						},
						{
							"dataset": {
								"referenceName": "11_251",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentGroupRows"
						},
						{
							"dataset": {
								"referenceName": "11_250",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingSustainmentActionRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingSustainmentActionInSustainmentActionsStatus"
						},
						{
							"name": "ExistingEquipmentGroupInEquipmentGroupsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusSustainmentActionEquipmentGroupUniquenessCheckInSustainmentActionsEquipmentGroupsStatus"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSustainmentActionsEquipmentGroups\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentGroupsStatus\nsource(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsEquipmentGroupsStatus\nReadCreateSustainmentActionsEquipmentGroups, SustainmentActionsStatus exists(SustainmentAction == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingSustainmentActionInSustainmentActionsStatus\nReadCreateSustainmentActionsEquipmentGroups, EquipmentGroupsStatus exists(EquipmentGroup == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingEquipmentGroupInEquipmentGroupsStatus\nReadCreateSustainmentActionsEquipmentGroups split(isNull(SustainmentAction),\n\tisNull(EquipmentGroup),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingSustainmentAction, MissingEquipmentGroup)\nReadCreateSustainmentActionsEquipmentGroups, SustainmentActionsEquipmentGroupsStatus exists(ReadCreateSustainmentActionsEquipmentGroups@SustainmentAction == SustainmentActionsEquipmentGroupsStatus@SustainmentAction && ReadCreateSustainmentActionsEquipmentGroups@EquipmentGroup == SustainmentActionsEquipmentGroupsStatus@EquipmentGroup,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusSustainmentActionEquipmentGroupUniquenessCheckInSustainmentActionsEquipmentGroupsStatus\nExistingSustainmentActionInSustainmentActionsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-250-NotExistingSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSustainmentActionRows\nExistingEquipmentGroupInEquipmentGroupsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-250-NotExistingEquipmentGroup.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentGroupRows\nCheckMandatoryData@MissingSustainmentAction sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-251-MissColumnSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSustainmentActionRows\nCheckMandatoryData@MissingEquipmentGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-251-MissColumnEquipmentGroup.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentGroupRows\nStatusSustainmentActionEquipmentGroupUniquenessCheckInSustainmentActionsEquipmentGroupsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-250-AlreadyExistSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingSustainmentActionRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActionsEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_250')]",
				"[concat(variables('factoryId'), '/datasets/11_251')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActionsEquipmentGroups_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSustainmentActionsEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSustainmentActionsEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSustainmentActionsEquipmentGroups\nsource(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor\nReadCreateSustainmentActionsEquipmentGroups select(mapColumn(\n\t\t{$sourceId} = SustainmentAction,\n\t\t{$targetId} = EquipmentGroup\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'is_on_EquipmentGroup',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateSustainmentActionsEquipmentGroups select(mapColumn(\n\t\tSustainmentAction,\n\t\tEquipmentGroup\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor\nReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor, StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor union(byName: true)~> StatusUpdateSustainmentActionsEquipmentGroupsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SustainmentActionsEquipmentGroups.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentActionsEquipmentGroups_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActionsEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActions_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSustainmentActions",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSustainmentActions"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateSustainmentActions_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "CreateSustainmentActionsMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_130",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_130",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_131",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_131",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSustainmentActionRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_131",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_131",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_130",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSustainmentActionRowsBudgetCategories"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInSustainmentActionsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "MapBudgetCategoriesMandatoryCheck"
						},
						{
							"name": "MapBudgetCategoriesExistenceCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tActivityPlanName as string,\n\t\tPlannedDate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSustainmentActions\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsStatus\nsource(output(\n\t\tSustainmentAction as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateSustainmentActionsMapBudgetCategories\nReadCreateSustainmentActions aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateSustainmentActions, SustainmentActionsStatus exists(ReadCreateSustainmentActions@Name == SustainmentActionsStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInSustainmentActionsStatus\nReadCreateSustainmentActions split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nCreateSustainmentActionsMapBudgetCategories split(isNull(SustainmentAction),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapBudgetCategoriesMandatoryCheck@(MissingSustainmentAction, MissingIndex, MissingValue)\nCreateSustainmentActionsMapBudgetCategories, ReadCreateSustainmentActions exists(SustainmentAction == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapBudgetCategoriesExistenceCheck\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-130-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInSustainmentActionsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-130-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-131-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nMapBudgetCategoriesMandatoryCheck@MissingSustainmentAction sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-131-MissColumnSustainmentActionBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSustainmentActionRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-131-MissColumnIndexBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-131-MissColumnValueBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsBudgetCategories\nMapBudgetCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-130-NotExistingSustainmentActionBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSustainmentActionRowsBudgetCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActions')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActions_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/2_130')]",
				"[concat(variables('factoryId'), '/datasets/2_131')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateSustainmentActions_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateSustainmentActions",
								"type": "DatasetReference"
							},
							"name": "ReadCreateSustainmentActions"
						},
						{
							"dataset": {
								"referenceName": "CreateSustainmentActions_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapBudgetCategoriesKeyIndex"
						},
						{
							"name": "BudgetCategoriesCleaning"
						},
						{
							"name": "BudgetCategoriesUnion"
						},
						{
							"name": "BudgetCategoriesSelect"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionsStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tActivityPlanName as string,\n\t\tPlannedDate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateSustainmentActions\nsource(output(\n\t\tSustainmentAction as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapBudgetCategories\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionsStatusEditor\nReadCreateSustainmentActions select(mapColumn(\n\t\t{$id} = Name,\n\t\tActivityPlanName,\n\t\tPlannedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:SustainmentAction;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapBudgetCategories aggregate(groupBy(SustainmentAction),\n\tBudgetCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapBudgetCategoriesKeyIndex\nAggregateMapBudgetCategoriesKeyIndex derive(BudgetCategories = replace(replace(replace(BudgetCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> BudgetCategoriesCleaning\nModelDefinition, BudgetCategoriesCleaning join({$id} == SustainmentAction,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> BudgetCategoriesUnion\nBudgetCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tActivityPlanName,\n\t\tPlannedDate,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tBudgetCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BudgetCategoriesSelect\nReadCreateSustainmentActions select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionsStatusEditor\nReadTempStatusSustainmentActionsStatusEditor, StatusColumnSelectionSustainmentActionsStatusEditor union(byName: true)~> StatusUpdateSustainmentActionsStatusEditor\nBudgetCategoriesSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SustainmentActions.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSustainmentActionsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentActions_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActions')]",
				"[concat(variables('factoryId'), '/datasets/CreateSustainmentActions_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTeams_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "4-HumanResources/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTeams",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTeams"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TeamsStatus",
								"type": "DatasetReference"
							},
							"name": "TeamsStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateTeams_MapCatKeyLabels",
								"type": "DatasetReference"
							},
							"name": "CreateTeamsMapCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "CreateTeams_MapAvailableQuantityByYear",
								"type": "DatasetReference"
							},
							"name": "CreateTeamsMapAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "CreateTeams_MapMinimalQuantityLevelByYear",
								"type": "DatasetReference"
							},
							"name": "CreateTeamsMapMinimalQuantityLevelByYear"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "4_112",
								"type": "DatasetReference"
							},
							"name": "WriteConstrainedWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTeamRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTeamRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTeamRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingYearRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTeamRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "4_112",
								"type": "DatasetReference"
							},
							"name": "WriteAvailableQuantityByYearValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTeamRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingYearRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "4_111",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "4_110",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTeamRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "4_112",
								"type": "DatasetReference"
							},
							"name": "WriteMinimalQuantityLevelByYearValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "4_112",
								"type": "DatasetReference"
							},
							"name": "WriteCostRateWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInTeamsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullConstrained"
						},
						{
							"name": "ConstrainedTypeCheck"
						},
						{
							"name": "MapCatKeyLabelsMandatoryCheck"
						},
						{
							"name": "MapCatKeyLabelsExistenceCheck"
						},
						{
							"name": "MapAvailableQuantityByYearMandatoryCheck"
						},
						{
							"name": "MapAvailableQuantityByYearExistenceCheck"
						},
						{
							"name": "NonNullAvailableQuantityByYearValue"
						},
						{
							"name": "AvailableQuantityByYearValueTypeCheck"
						},
						{
							"name": "MapMinimalQuantityLevelByYearMandatoryCheck"
						},
						{
							"name": "MapMinimalQuantityLevelByYearExistenceCheck"
						},
						{
							"name": "NonNullMinimalQuantityLevelByYearValue"
						},
						{
							"name": "MinimalQuantityLevelByYearValueTypeCheck"
						},
						{
							"name": "NonNullCostRate"
						},
						{
							"name": "CostRateTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tConstrained as string,\n\t\tCostRate as string,\n\t\tExtraArea as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTeams\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TeamsStatus\nsource(output(\n\t\tTeam as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateTeamsMapCatKeyLabels\nsource(output(\n\t\tTeam as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateTeamsMapAvailableQuantityByYear\nsource(output(\n\t\tTeam as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateTeamsMapMinimalQuantityLevelByYear\nReadCreateTeams aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateTeams, TeamsStatus exists(ReadCreateTeams@Name == TeamsStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInTeamsStatus\nReadCreateTeams split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateTeams filter(not(isNull(Constrained))) ~> NonNullConstrained\nNonNullConstrained split(not(isBoolean(Constrained)),\n\tdisjoint: false) ~> ConstrainedTypeCheck@(ConstrainedWrongType)\nCreateTeamsMapCatKeyLabels split(isNull(Team),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCatKeyLabelsMandatoryCheck@(MissingTeam, MissingIndex, MissingValue)\nCreateTeamsMapCatKeyLabels, ReadCreateTeams exists(Team == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCatKeyLabelsExistenceCheck\nCreateTeamsMapAvailableQuantityByYear split(isNull(Team),\n\tisNull(Year),\n\tisNull(Value),\n\tdisjoint: false) ~> MapAvailableQuantityByYearMandatoryCheck@(MissingTeam, MissingYear, MissingValue)\nCreateTeamsMapAvailableQuantityByYear, ReadCreateTeams exists(Team == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapAvailableQuantityByYearExistenceCheck\nCreateTeamsMapAvailableQuantityByYear filter(not(isNull(Value))) ~> NonNullAvailableQuantityByYearValue\nNonNullAvailableQuantityByYearValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> AvailableQuantityByYearValueTypeCheck@(AvailableQuantityByYearValueWrongType)\nCreateTeamsMapMinimalQuantityLevelByYear split(isNull(Team),\n\tisNull(Year),\n\tisNull(Value),\n\tdisjoint: false) ~> MapMinimalQuantityLevelByYearMandatoryCheck@(MissingTeam, MissingYear, MissingValue)\nCreateTeamsMapMinimalQuantityLevelByYear, ReadCreateTeams exists(Team == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapMinimalQuantityLevelByYearExistenceCheck\nCreateTeamsMapMinimalQuantityLevelByYear filter(not(isNull(Value))) ~> NonNullMinimalQuantityLevelByYearValue\nNonNullMinimalQuantityLevelByYearValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> MinimalQuantityLevelByYearValueTypeCheck@(MinimalQuantityLevelByYearValueWrongType)\nReadCreateTeams filter(not(isNull(CostRate))) ~> NonNullCostRate\nNonNullCostRate split(not(isFloat(CostRate)),\n\tdisjoint: false) ~> CostRateTypeCheck@(CostRateWrongType)\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-110-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInTeamsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-110-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nConstrainedTypeCheck@ConstrainedWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-112-ConstrainedWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteConstrainedWrongTypeRows\nMapCatKeyLabelsMandatoryCheck@MissingTeam sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnTeamCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTeamRowsCatKeyLabels\nMapCatKeyLabelsMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnIndexCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsCatKeyLabels\nMapCatKeyLabelsMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnValueCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCatKeyLabels\nMapCatKeyLabelsExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-110-NotExistingTeamCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTeamRowsCatKeyLabels\nMapAvailableQuantityByYearMandatoryCheck@MissingTeam sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnTeamAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTeamRowsAvailableQuantityByYear\nMapAvailableQuantityByYearMandatoryCheck@MissingYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnYearAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingYearRowsAvailableQuantityByYear\nMapAvailableQuantityByYearMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnValueAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsAvailableQuantityByYear\nMapAvailableQuantityByYearExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-110-NotExistingTeamAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTeamRowsAvailableQuantityByYear\nAvailableQuantityByYearValueTypeCheck@AvailableQuantityByYearValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-112-AvailableQuantityByYearValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAvailableQuantityByYearValueWrongTypeRows\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingTeam sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnTeamMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTeamRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnYearMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingYearRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-111-MissColumnValueMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-110-NotExistingTeamMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTeamRowsMinimalQuantityLevelByYear\nMinimalQuantityLevelByYearValueTypeCheck@MinimalQuantityLevelByYearValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-112-MinimalQuantityLevelByYearValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMinimalQuantityLevelByYearValueWrongTypeRows\nCostRateTypeCheck@CostRateWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-112-CostRateWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCostRateWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTeams')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TeamsStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateTeams_MapCatKeyLabels')]",
				"[concat(variables('factoryId'), '/datasets/CreateTeams_MapAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/datasets/CreateTeams_MapMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/datasets/4_110')]",
				"[concat(variables('factoryId'), '/datasets/4_111')]",
				"[concat(variables('factoryId'), '/datasets/4_112')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTeams_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "4-HumanResources/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTeams",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTeams"
						},
						{
							"dataset": {
								"referenceName": "CreateTeams_MapCatKeyLabels",
								"type": "DatasetReference"
							},
							"name": "ReadMapCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "CreateTeams_MapAvailableQuantityByYear",
								"type": "DatasetReference"
							},
							"name": "ReadMapAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "CreateTeams_MapMinimalQuantityLevelByYear",
								"type": "DatasetReference"
							},
							"name": "ReadMapMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TeamsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTeamsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HumanResourcesCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTeamsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapCatKeyLabelsKeyIndex"
						},
						{
							"name": "CatKeyLabelsCleaning"
						},
						{
							"name": "CatKeyLabelsUnion"
						},
						{
							"name": "CatKeyLabelsSelect"
						},
						{
							"name": "AggregateMapAvailableQuantityByYearKeyYear"
						},
						{
							"name": "AvailableQuantityByYearCleaning"
						},
						{
							"name": "AvailableQuantityByYearUnion"
						},
						{
							"name": "AvailableQuantityByYearSelect"
						},
						{
							"name": "AggregateMapMinimalQuantityLevelByYearKeyYear"
						},
						{
							"name": "MinimalQuantityLevelByYearCleaning"
						},
						{
							"name": "MinimalQuantityLevelByYearUnion"
						},
						{
							"name": "MinimalQuantityLevelByYearSelect"
						},
						{
							"name": "StatusColumnSelectionTeamsStatusEditor"
						},
						{
							"name": "StatusUpdateTeamsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tConstrained as string,\n\t\tCostRate as string,\n\t\tExtraArea as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTeams\nsource(output(\n\t\tTeam as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCatKeyLabels\nsource(output(\n\t\tTeam as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapAvailableQuantityByYear\nsource(output(\n\t\tTeam as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapMinimalQuantityLevelByYear\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTeamsStatusEditor\nReadCreateTeams select(mapColumn(\n\t\t{$id} = Name,\n\t\tConstrained,\n\t\tCostRate,\n\t\tExtraArea\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Team;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapCatKeyLabels aggregate(groupBy(Team),\n\tCatKeyLabels = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapCatKeyLabelsKeyIndex\nAggregateMapCatKeyLabelsKeyIndex derive(CatKeyLabels = replace(replace(replace(CatKeyLabels, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CatKeyLabelsCleaning\nModelDefinition, CatKeyLabelsCleaning join({$id} == Team,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CatKeyLabelsUnion\nCatKeyLabelsUnion select(mapColumn(\n\t\t{$id},\n\t\tConstrained,\n\t\tCostRate,\n\t\tExtraArea,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CatKeyLabelsSelect\nReadMapAvailableQuantityByYear aggregate(groupBy(Team),\n\tAvailableQuantityByYear = toString(keyValues(collect(toString(Year)), collect(toFloat(Value))))) ~> AggregateMapAvailableQuantityByYearKeyYear\nAggregateMapAvailableQuantityByYearKeyYear derive(AvailableQuantityByYear = replace(replace(replace(AvailableQuantityByYear, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> AvailableQuantityByYearCleaning\nCatKeyLabelsSelect, AvailableQuantityByYearCleaning join({$id} == Team,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> AvailableQuantityByYearUnion\nAvailableQuantityByYearUnion select(mapColumn(\n\t\t{$id},\n\t\tConstrained,\n\t\tCostRate,\n\t\tExtraArea,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels,\n\t\tAvailableQuantityByYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AvailableQuantityByYearSelect\nReadMapMinimalQuantityLevelByYear aggregate(groupBy(Team),\n\tMinimalQuantityLevelByYear = toString(keyValues(collect(toString(Year)), collect(toFloat(Value))))) ~> AggregateMapMinimalQuantityLevelByYearKeyYear\nAggregateMapMinimalQuantityLevelByYearKeyYear derive(MinimalQuantityLevelByYear = replace(replace(replace(MinimalQuantityLevelByYear, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> MinimalQuantityLevelByYearCleaning\nAvailableQuantityByYearSelect, MinimalQuantityLevelByYearCleaning join({$id} == Team,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> MinimalQuantityLevelByYearUnion\nMinimalQuantityLevelByYearUnion select(mapColumn(\n\t\t{$id},\n\t\tConstrained,\n\t\tCostRate,\n\t\tExtraArea,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels,\n\t\tAvailableQuantityByYear,\n\t\tMinimalQuantityLevelByYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MinimalQuantityLevelByYearSelect\nReadCreateTeams select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTeamsStatusEditor\nReadTempStatusTeamsStatusEditor, StatusColumnSelectionTeamsStatusEditor union(byName: true)~> StatusUpdateTeamsStatusEditor\nMinimalQuantityLevelByYearSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Teams.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTeamsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Teams_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTeamsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTeams')]",
				"[concat(variables('factoryId'), '/datasets/CreateTeams_MapCatKeyLabels')]",
				"[concat(variables('factoryId'), '/datasets/CreateTeams_MapAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/datasets/CreateTeams_MapMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TeamsStatus')]",
				"[concat(variables('factoryId'), '/datasets/HumanResourcesCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesCriteria_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTechnicalPoliciesCriteria"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "CriteriaStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesCriteriaStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_240",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_240",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingCriterionRows"
						},
						{
							"dataset": {
								"referenceName": "2_241",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_241",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCriterionRows"
						},
						{
							"dataset": {
								"referenceName": "2_240",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingTechnicalPolicyRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingTechnicalPolicyInTechnicalPoliciesStatus"
						},
						{
							"name": "ExistingCriterionInCriteriaStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusTechnicalPolicyCriterionUniquenessCheckInTechnicalPoliciesCriteriaStatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTechnicalPoliciesCriteria\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CriteriaStatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesCriteriaStatus\nReadCreateTechnicalPoliciesCriteria, TechnicalPoliciesStatus exists(TechnicalPolicy == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingTechnicalPolicyInTechnicalPoliciesStatus\nReadCreateTechnicalPoliciesCriteria, CriteriaStatus exists(Criterion == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingCriterionInCriteriaStatus\nReadCreateTechnicalPoliciesCriteria split(isNull(TechnicalPolicy),\n\tisNull(Criterion),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingTechnicalPolicy, MissingCriterion)\nReadCreateTechnicalPoliciesCriteria, TechnicalPoliciesCriteriaStatus exists(ReadCreateTechnicalPoliciesCriteria@TechnicalPolicy == TechnicalPoliciesCriteriaStatus@TechnicalPolicy && ReadCreateTechnicalPoliciesCriteria@Criterion == TechnicalPoliciesCriteriaStatus@Criterion,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusTechnicalPolicyCriterionUniquenessCheckInTechnicalPoliciesCriteriaStatus\nExistingTechnicalPolicyInTechnicalPoliciesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-240-NotExistingTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTechnicalPolicyRows\nExistingCriterionInCriteriaStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-240-NotExistingCriterion.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingCriterionRows\nCheckMandatoryData@MissingTechnicalPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-241-MissColumnTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTechnicalPolicyRows\nCheckMandatoryData@MissingCriterion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-241-MissColumnCriterion.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCriterionRows\nStatusTechnicalPolicyCriterionUniquenessCheckInTechnicalPoliciesCriteriaStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-240-AlreadyExistTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingTechnicalPolicyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesCriteria')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_240')]",
				"[concat(variables('factoryId'), '/datasets/2_241')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesCriteria_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTechnicalPoliciesCriteria"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTechnicalPoliciesCriteria\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesCriteriaStatusEditor\nReadCreateTechnicalPoliciesCriteria select(mapColumn(\n\t\t{$sourceId} = TechnicalPolicy,\n\t\t{$targetId} = Criterion\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'Policy_contains_Criterion',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateTechnicalPoliciesCriteria select(mapColumn(\n\t\tTechnicalPolicy,\n\t\tCriterion\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor\nReadTempStatusTechnicalPoliciesCriteriaStatusEditor, StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor union(byName: true)~> StatusUpdateTechnicalPoliciesCriteriaStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPoliciesCriteria.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTechnicalPoliciesCriteriaStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPoliciesCriteria_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesCriteriaStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesCriteria')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesMainActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesMainActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTechnicalPoliciesMainActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesMainActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_220",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_220",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_221",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_221",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_220",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingTechnicalPolicyRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingTechnicalPolicyInTechnicalPoliciesStatus"
						},
						{
							"name": "ExistingActionFamilyInActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusTechnicalPolicyActionFamilyUniquenessCheckInTechnicalPoliciesMainActionFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTechnicalPoliciesMainActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesStatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesMainActionFamiliesStatus\nReadCreateTechnicalPoliciesMainActionFamilies, TechnicalPoliciesStatus exists(TechnicalPolicy == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingTechnicalPolicyInTechnicalPoliciesStatus\nReadCreateTechnicalPoliciesMainActionFamilies, ActionFamiliesStatus exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingActionFamilyInActionFamiliesStatus\nReadCreateTechnicalPoliciesMainActionFamilies split(isNull(TechnicalPolicy),\n\tisNull(ActionFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingTechnicalPolicy, MissingActionFamily)\nReadCreateTechnicalPoliciesMainActionFamilies, TechnicalPoliciesMainActionFamiliesStatus exists(ReadCreateTechnicalPoliciesMainActionFamilies@TechnicalPolicy == TechnicalPoliciesMainActionFamiliesStatus@TechnicalPolicy && ReadCreateTechnicalPoliciesMainActionFamilies@ActionFamily == TechnicalPoliciesMainActionFamiliesStatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusTechnicalPolicyActionFamilyUniquenessCheckInTechnicalPoliciesMainActionFamiliesStatus\nExistingTechnicalPolicyInTechnicalPoliciesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-220-NotExistingTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTechnicalPolicyRows\nExistingActionFamilyInActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-220-NotExistingActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRows\nCheckMandatoryData@MissingTechnicalPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-221-MissColumnTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTechnicalPolicyRows\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-221-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nStatusTechnicalPolicyActionFamilyUniquenessCheckInTechnicalPoliciesMainActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-220-AlreadyExistTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingTechnicalPolicyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesMainActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_220')]",
				"[concat(variables('factoryId'), '/datasets/2_221')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesMainActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesMainActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTechnicalPoliciesMainActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTechnicalPoliciesMainActionFamilies\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor\nReadCreateTechnicalPoliciesMainActionFamilies select(mapColumn(\n\t\t{$sourceId} = TechnicalPolicy,\n\t\t{$targetId} = ActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'contains_Action1',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateTechnicalPoliciesMainActionFamilies select(mapColumn(\n\t\tTechnicalPolicy,\n\t\tActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesMainActionFamiliesStatusEditor\nReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor, StatusColumnSelectionTechnicalPoliciesMainActionFamiliesStatusEditor union(byName: true)~> StatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPoliciesMainActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPoliciesMainActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesMainActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesSecondaryActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesSecondaryActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTechnicalPoliciesSecondaryActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesSecondaryActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_230",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_230",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_231",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_231",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_230",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingTechnicalPolicyRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingTechnicalPolicyInTechnicalPoliciesStatus"
						},
						{
							"name": "ExistingActionFamilyInActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusTechnicalPolicyActionFamilyUniquenessCheckInTechnicalPoliciesSecondaryActionFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTechnicalPoliciesSecondaryActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesStatus\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesStatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesSecondaryActionFamiliesStatus\nReadCreateTechnicalPoliciesSecondaryActionFamilies, TechnicalPoliciesStatus exists(TechnicalPolicy == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingTechnicalPolicyInTechnicalPoliciesStatus\nReadCreateTechnicalPoliciesSecondaryActionFamilies, ActionFamiliesStatus exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingActionFamilyInActionFamiliesStatus\nReadCreateTechnicalPoliciesSecondaryActionFamilies split(isNull(TechnicalPolicy),\n\tisNull(ActionFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingTechnicalPolicy, MissingActionFamily)\nReadCreateTechnicalPoliciesSecondaryActionFamilies, TechnicalPoliciesSecondaryActionFamiliesStatus exists(ReadCreateTechnicalPoliciesSecondaryActionFamilies@TechnicalPolicy == TechnicalPoliciesSecondaryActionFamiliesStatus@TechnicalPolicy && ReadCreateTechnicalPoliciesSecondaryActionFamilies@ActionFamily == TechnicalPoliciesSecondaryActionFamiliesStatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusTechnicalPolicyActionFamilyUniquenessCheckInTechnicalPoliciesSecondaryActionFamiliesStatus\nExistingTechnicalPolicyInTechnicalPoliciesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-230-NotExistingTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTechnicalPolicyRows\nExistingActionFamilyInActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-230-NotExistingActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRows\nCheckMandatoryData@MissingTechnicalPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-231-MissColumnTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTechnicalPolicyRows\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-231-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nStatusTechnicalPolicyActionFamilyUniquenessCheckInTechnicalPoliciesSecondaryActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-230-AlreadyExistTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingTechnicalPolicyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesSecondaryActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_230')]",
				"[concat(variables('factoryId'), '/datasets/2_231')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPoliciesSecondaryActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTechnicalPoliciesSecondaryActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTechnicalPoliciesSecondaryActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementCreateRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTechnicalPoliciesSecondaryActionFamilies\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nReadCreateTechnicalPoliciesSecondaryActionFamilies select(mapColumn(\n\t\t{$sourceId} = TechnicalPolicy,\n\t\t{$targetId} = ActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'contains_Action2',\n\t\t{$relationshipDelete} = 'false',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadCreateTechnicalPoliciesSecondaryActionFamilies select(mapColumn(\n\t\tTechnicalPolicy,\n\t\tActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor, StatusColumnSelectionTechnicalPoliciesSecondaryActionFamiliesStatusEditor union(byName: true)~> StatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPoliciesSecondaryActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPoliciesSecondaryActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPoliciesSecondaryActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPolicies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTechnicalPolicies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTechnicalPolicies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesStatus"
						},
						{
							"dataset": {
								"referenceName": "CreateTechnicalPolicies_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "CreateTechnicalPoliciesMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_140",
								"type": "DatasetReference"
							},
							"name": "WriteNotUniqueNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_140",
								"type": "DatasetReference"
							},
							"name": "WriteAlreadyExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_141",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference"
							},
							"name": "WriteEnablePendingActionRemovalWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference"
							},
							"name": "WriteIsInactiveWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_143",
								"type": "DatasetReference"
							},
							"name": "WriteTypeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference"
							},
							"name": "WriteYearEndWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference"
							},
							"name": "WriteYearStartWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_141",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTechnicalPolicyRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_141",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_141",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_140",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTechnicalPolicyRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_142",
								"type": "DatasetReference"
							},
							"name": "WriteNbRepAction1WrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_143",
								"type": "DatasetReference"
							},
							"name": "WriteNbRepAction1InvalidRangeRows"
						}
					],
					"transformations": [
						{
							"name": "InternalNameUniquenessCheckAggregate"
						},
						{
							"name": "InternalNameUniquenessCheckFilter"
						},
						{
							"name": "StatusNameUniquenessCheckInTechnicalPoliciesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnablePendingActionRemoval"
						},
						{
							"name": "EnablePendingActionRemovalTypeCheck"
						},
						{
							"name": "NonNullIsInactive"
						},
						{
							"name": "IsInactiveTypeCheck"
						},
						{
							"name": "NonNullEnumType"
						},
						{
							"name": "TypeEnumCheck"
						},
						{
							"name": "NonNullYearEnd"
						},
						{
							"name": "YearEndTypeCheck"
						},
						{
							"name": "NonNullYearStart"
						},
						{
							"name": "YearStartTypeCheck"
						},
						{
							"name": "MapBudgetCategoriesMandatoryCheck"
						},
						{
							"name": "MapBudgetCategoriesExistenceCheck"
						},
						{
							"name": "NonNullNbRepAction1"
						},
						{
							"name": "NbRepAction1TypeCheck"
						},
						{
							"name": "NbRepAction1RangeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tCriteriaFormula as string,\n\t\tEnablePendingActionRemoval as string,\n\t\tIsInactive as string,\n\t\tType as string,\n\t\tYearEnd as string,\n\t\tYearStart as string,\n\t\tNbRepAction1 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTechnicalPolicies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesStatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CreateTechnicalPoliciesMapBudgetCategories\nReadCreateTechnicalPolicies aggregate(groupBy(Name),\n\tCount = count(Name)) ~> InternalNameUniquenessCheckAggregate\nInternalNameUniquenessCheckAggregate filter(Count > 1) ~> InternalNameUniquenessCheckFilter\nReadCreateTechnicalPolicies, TechnicalPoliciesStatus exists(ReadCreateTechnicalPolicies@Name == TechnicalPoliciesStatus@Name,\n\tnegate:false,\n\tbroadcast: 'auto')~> StatusNameUniquenessCheckInTechnicalPoliciesStatus\nReadCreateTechnicalPolicies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadCreateTechnicalPolicies filter(not(isNull(EnablePendingActionRemoval))) ~> NonNullEnablePendingActionRemoval\nNonNullEnablePendingActionRemoval split(not(isBoolean(EnablePendingActionRemoval)),\n\tdisjoint: false) ~> EnablePendingActionRemovalTypeCheck@(EnablePendingActionRemovalWrongType)\nReadCreateTechnicalPolicies filter(not(isNull(IsInactive))) ~> NonNullIsInactive\nNonNullIsInactive split(not(isBoolean(IsInactive)),\n\tdisjoint: false) ~> IsInactiveTypeCheck@(IsInactiveWrongType)\nReadCreateTechnicalPolicies filter(not(isNull(Type))) ~> NonNullEnumType\nNonNullEnumType filter(not(in(['ConditionBased', 'Curative', 'Imposed', 'Predetermined', 'Renewal'], Type))) ~> TypeEnumCheck\nReadCreateTechnicalPolicies filter(not(isNull(YearEnd))) ~> NonNullYearEnd\nNonNullYearEnd split(not(isInteger(YearEnd)),\n\tdisjoint: false) ~> YearEndTypeCheck@(YearEndWrongType)\nReadCreateTechnicalPolicies filter(not(isNull(YearStart))) ~> NonNullYearStart\nNonNullYearStart split(not(isInteger(YearStart)),\n\tdisjoint: false) ~> YearStartTypeCheck@(YearStartWrongType)\nCreateTechnicalPoliciesMapBudgetCategories split(isNull(TechnicalPolicy),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapBudgetCategoriesMandatoryCheck@(MissingTechnicalPolicy, MissingIndex, MissingValue)\nCreateTechnicalPoliciesMapBudgetCategories, ReadCreateTechnicalPolicies exists(TechnicalPolicy == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapBudgetCategoriesExistenceCheck\nReadCreateTechnicalPolicies filter(not(isNull(NbRepAction1))) ~> NonNullNbRepAction1\nNonNullNbRepAction1 split(not(isInteger(NbRepAction1)),\n\tdisjoint: false) ~> NbRepAction1TypeCheck@(NbRepAction1WrongType, NbRepAction1CorrectType)\nNbRepAction1TypeCheck@NbRepAction1CorrectType filter(toInteger(NbRepAction1) < 0.0) ~> NbRepAction1RangeCheck\nInternalNameUniquenessCheckFilter sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-140-NotUniqueName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotUniqueNameRows\nStatusNameUniquenessCheckInTechnicalPoliciesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-140-AlreadyExistName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAlreadyExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-141-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nEnablePendingActionRemovalTypeCheck@EnablePendingActionRemovalWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-142-EnablePendingActionRemovalWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEnablePendingActionRemovalWrongTypeRows\nIsInactiveTypeCheck@IsInactiveWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-142-IsInactiveWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsInactiveWrongTypeRows\nTypeEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-143-TypeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTypeInvalidRangeRows\nYearEndTypeCheck@YearEndWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-142-YearEndWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteYearEndWrongTypeRows\nYearStartTypeCheck@YearStartWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-142-YearStartWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteYearStartWrongTypeRows\nMapBudgetCategoriesMandatoryCheck@MissingTechnicalPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-141-MissColumnTechnicalPolicyBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTechnicalPolicyRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-141-MissColumnIndexBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-141-MissColumnValueBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsBudgetCategories\nMapBudgetCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-140-NotExistingTechnicalPolicyBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTechnicalPolicyRowsBudgetCategories\nNbRepAction1TypeCheck@NbRepAction1WrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-142-NbRepAction1WrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNbRepAction1WrongTypeRows\nNbRepAction1RangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-143-NbRepAction1InvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNbRepAction1InvalidRangeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPolicies_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/2_140')]",
				"[concat(variables('factoryId'), '/datasets/2_141')]",
				"[concat(variables('factoryId'), '/datasets/2_142')]",
				"[concat(variables('factoryId'), '/datasets/2_143')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreateTechnicalPolicies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Create"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreateTechnicalPolicies",
								"type": "DatasetReference"
							},
							"name": "ReadCreateTechnicalPolicies"
						},
						{
							"dataset": {
								"referenceName": "CreateTechnicalPolicies_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPoliciesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementCreateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPoliciesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapBudgetCategoriesKeyIndex"
						},
						{
							"name": "BudgetCategoriesCleaning"
						},
						{
							"name": "BudgetCategoriesUnion"
						},
						{
							"name": "BudgetCategoriesSelect"
						},
						{
							"name": "StatusColumnSelectionTechnicalPoliciesStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPoliciesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tCriteriaFormula as string,\n\t\tEnablePendingActionRemoval as string,\n\t\tIsInactive as string,\n\t\tType as string,\n\t\tYearEnd as string,\n\t\tYearStart as string,\n\t\tNbRepAction1 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadCreateTechnicalPolicies\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapBudgetCategories\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesStatusEditor\nReadCreateTechnicalPolicies select(mapColumn(\n\t\t{$id} = Name,\n\t\tAssetClass,\n\t\tCriteriaFormula,\n\t\tEnablePendingActionRemoval,\n\t\tIsInactive,\n\t\tType,\n\t\tYearEnd,\n\t\tYearStart,\n\t\tNbRepAction1\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:TechnicalPolicy;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapBudgetCategories aggregate(groupBy(TechnicalPolicy),\n\tBudgetCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapBudgetCategoriesKeyIndex\nAggregateMapBudgetCategoriesKeyIndex derive(BudgetCategories = replace(replace(replace(BudgetCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> BudgetCategoriesCleaning\nModelDefinition, BudgetCategoriesCleaning join({$id} == TechnicalPolicy,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> BudgetCategoriesUnion\nBudgetCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tCriteriaFormula,\n\t\tEnablePendingActionRemoval,\n\t\tIsInactive,\n\t\tType,\n\t\tYearEnd,\n\t\tYearStart,\n\t\tNbRepAction1,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tBudgetCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BudgetCategoriesSelect\nReadCreateTechnicalPolicies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesStatusEditor\nReadTempStatusTechnicalPoliciesStatusEditor, StatusColumnSelectionTechnicalPoliciesStatusEditor union(byName: true)~> StatusUpdateTechnicalPoliciesStatusEditor\nBudgetCategoriesSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPolicies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTechnicalPoliciesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPolicies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/datasets/CreateTechnicalPolicies_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementCreateEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamiliesActionTasks_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteActionFamiliesActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteActionFamiliesActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesActionTasksStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "12_411",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "12_411",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionTaskRows"
						},
						{
							"dataset": {
								"referenceName": "12_410",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusActionFamilyActionTaskExistenceCheckInActionFamiliesActionTasksStatus"
						}
					],
					"script": "source(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteActionFamiliesActionTasks\nsource(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesActionTasksStatus\nReadDeleteActionFamiliesActionTasks split(isNull(ActionFamily),\n\tisNull(ActionTask),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingActionFamily, MissingActionTask)\nReadDeleteActionFamiliesActionTasks, ActionFamiliesActionTasksStatus exists(ReadDeleteActionFamiliesActionTasks@ActionFamily == ActionFamiliesActionTasksStatus@ActionFamily && ReadDeleteActionFamiliesActionTasks@ActionTask == ActionFamiliesActionTasksStatus@ActionTask,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusActionFamilyActionTaskExistenceCheckInActionFamiliesActionTasksStatus\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-411-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nCheckMandatoryData@MissingActionTask sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-411-MissColumnActionTask.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionTaskRows\nStatusActionFamilyActionTaskExistenceCheckInActionFamiliesActionTasksStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-410-NotExistingActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamiliesActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/12_411')]",
				"[concat(variables('factoryId'), '/datasets/12_410')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamiliesActionTasks_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteActionFamiliesActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteActionFamiliesActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesActionTasksStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementHumanResourcesDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesActionTasksStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesActionTasksStatusEditor"
						}
					],
					"script": "source(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteActionFamiliesActionTasks\nsource(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesActionTasksStatusEditor\nReadDeleteActionFamiliesActionTasks select(mapColumn(\n\t\t{$sourceId} = ActionFamily,\n\t\t{$targetId} = ActionTask\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'contains_ActionTask',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteActionFamiliesActionTasks select(mapColumn(\n\t\tActionFamily,\n\t\tActionTask\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesActionTasksStatusEditor\nReadTempStatusActionFamiliesActionTasksStatusEditor, StatusColumnSelectionActionFamiliesActionTasksStatusEditor exists(ReadTempStatusActionFamiliesActionTasksStatusEditor@ActionFamily == StatusColumnSelectionActionFamiliesActionTasksStatusEditor@ActionFamily && ReadTempStatusActionFamiliesActionTasksStatusEditor@ActionTask == StatusColumnSelectionActionFamiliesActionTasksStatusEditor@ActionTask,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamiliesActionTasksStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionFamiliesActionTasks.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateActionFamiliesActionTasksStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamiliesActionTasks_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamiliesActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamiliesSubActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteActionFamiliesSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteActionFamiliesSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesSubActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_411",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_411",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_410",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusActionFamilySubActionFamilyExistenceCheckInActionFamiliesSubActionFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteActionFamiliesSubActionFamilies\nsource(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesSubActionFamiliesStatus\nReadDeleteActionFamiliesSubActionFamilies split(isNull(ActionFamily),\n\tisNull(SubActionFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingActionFamily, MissingSubActionFamily)\nReadDeleteActionFamiliesSubActionFamilies, ActionFamiliesSubActionFamiliesStatus exists(ReadDeleteActionFamiliesSubActionFamilies@ActionFamily == ActionFamiliesSubActionFamiliesStatus@ActionFamily && ReadDeleteActionFamiliesSubActionFamilies@SubActionFamily == ActionFamiliesSubActionFamiliesStatus@SubActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusActionFamilySubActionFamilyExistenceCheckInActionFamiliesSubActionFamiliesStatus\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-411-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nCheckMandatoryData@MissingSubActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-411-MissColumnSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSubActionFamilyRows\nStatusActionFamilySubActionFamilyExistenceCheckInActionFamiliesSubActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-410-NotExistingActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamiliesSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_411')]",
				"[concat(variables('factoryId'), '/datasets/11_410')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamiliesSubActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteActionFamiliesSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteActionFamiliesSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteActionFamiliesSubActionFamilies\nsource(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor\nReadDeleteActionFamiliesSubActionFamilies select(mapColumn(\n\t\t{$sourceId} = ActionFamily,\n\t\t{$targetId} = SubActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'contains_SubActionFamily',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteActionFamiliesSubActionFamilies select(mapColumn(\n\t\tActionFamily,\n\t\tSubActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor\nReadTempStatusActionFamiliesSubActionFamiliesStatusEditor, StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor exists(ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor@ActionFamily == StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor@ActionFamily && ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor@SubActionFamily == StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor@SubActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamiliesSubActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionFamiliesSubActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateActionFamiliesSubActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamiliesSubActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamiliesSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_310",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_311",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesStatus\nReadDeleteActionFamilies, ActionFamiliesStatus exists(ReadDeleteActionFamilies@Name == ActionFamiliesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInActionFamiliesStatus\nReadDeleteActionFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-310-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-311-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_310')]",
				"[concat(variables('factoryId'), '/datasets/2_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamilySustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesActionTasksStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamilySustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionActionFamilySustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamilySustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesActionTasksStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesActionTasksStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesStatusEditor\nsource(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamilySustainmentActionsActionFamiliesStatusEditor\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nsource(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor\nsource(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesActionTasksStatusEditor\nReadDeleteActionFamilies select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:ActionFamily;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesStatusEditor\nReadTempStatusActionFamiliesStatusEditor, StatusColumnSelectionActionFamiliesStatusEditor exists(ReadTempStatusActionFamiliesStatusEditor@Name == StatusColumnSelectionActionFamiliesStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamiliesStatusEditor\nReadDeleteActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamilySustainmentActionsActionFamiliesStatusEditor\nReadTempStatusActionFamilySustainmentActionsActionFamiliesStatusEditor, StatusColumnSelectionActionFamilySustainmentActionsActionFamiliesStatusEditor exists(Name == ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamilySustainmentActionsActionFamiliesStatusEditor\nReadDeleteActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor\nReadTempStatusActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor, StatusColumnSelectionActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor exists(Name == ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor\nReadDeleteActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nReadTempStatusActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor, StatusColumnSelectionActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor exists(Name == ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nReadDeleteActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor\nReadTempStatusActionFamiliesSubActionFamiliesStatusEditor, StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor exists(Name == ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamiliesSubActionFamiliesStatusEditor\nReadDeleteActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesActionTasksStatusEditor\nReadTempStatusActionFamiliesActionTasksStatusEditor, StatusColumnSelectionActionFamiliesActionTasksStatusEditor exists(Name == ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamiliesActionTasksStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesStatusEditor\nStatusUpdateActionFamilySustainmentActionsActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamily_SustainmentActionsActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamilySustainmentActionsActionFamiliesStatusEditor\nStatusUpdateActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamily_TechnicalPoliciesMainActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamilyTechnicalPoliciesMainActionFamiliesStatusEditor\nStatusUpdateActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamily_TechnicalPoliciesSecondaryActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamilyTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nStatusUpdateActionFamiliesSubActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamiliesSubActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor\nStatusUpdateActionFamiliesActionTasksStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamiliesActionTasks_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionTasks_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ActionTasksStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "12_310",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "12_311",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInActionTasksStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteActionTasks\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionTasksStatus\nReadDeleteActionTasks, ActionTasksStatus exists(ReadDeleteActionTasks@Name == ActionTasksStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInActionTasksStatus\nReadDeleteActionTasks split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInActionTasksStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-310-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-311-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/12_310')]",
				"[concat(variables('factoryId'), '/datasets/12_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteActionTasks_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionTasksStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesActionTasksStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementHumanResourcesDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionTasksStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionActionTasksStatusEditor"
						},
						{
							"name": "StatusUpdateActionTasksStatusEditor"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesActionTasksStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesActionTasksStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteActionTasks\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionTasksStatusEditor\nsource(output(\n\t\tActionFamily as string,\n\t\tActionTask as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesActionTasksStatusEditor\nReadDeleteActionTasks select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:ActionTask;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteActionTasks select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionTasksStatusEditor\nReadTempStatusActionTasksStatusEditor, StatusColumnSelectionActionTasksStatusEditor exists(ReadTempStatusActionTasksStatusEditor@Name == StatusColumnSelectionActionTasksStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionTasksStatusEditor\nReadDeleteActionTasks select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesActionTasksStatusEditor\nReadTempStatusActionFamiliesActionTasksStatusEditor, StatusColumnSelectionActionFamiliesActionTasksStatusEditor exists(Name == ActionTask,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamiliesActionTasksStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionTasks.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateActionTasksStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionTasks_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionTasksStatusEditor\nStatusUpdateActionFamiliesActionTasksStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamiliesActionTasks_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesActionTasksStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteAgingFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "AgingFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_320",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_321",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInAgingFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteAgingFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> AgingFamiliesStatus\nReadDeleteAgingFamilies, AgingFamiliesStatus exists(ReadDeleteAgingFamilies@Name == AgingFamiliesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInAgingFamiliesStatus\nReadDeleteAgingFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-320-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-321-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/1_320')]",
				"[concat(variables('factoryId'), '/datasets/1_321')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteAgingFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusAgingFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateAgingFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteAgingFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusAgingFamiliesStatusEditor\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor\nReadDeleteAgingFamilies select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:AgingFamily;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteAgingFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionAgingFamiliesStatusEditor\nReadTempStatusAgingFamiliesStatusEditor, StatusColumnSelectionAgingFamiliesStatusEditor exists(ReadTempStatusAgingFamiliesStatusEditor@Name == StatusColumnSelectionAgingFamiliesStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateAgingFamiliesStatusEditor\nReadDeleteAgingFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor\nReadTempStatusAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor, StatusColumnSelectionAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor exists(Name == AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor\nReadDeleteAgingFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor\nReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor, StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor exists(Name == AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor\nReadDeleteAgingFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor\nReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor, StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor exists(Name == AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_AgingFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateAgingFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['AgingFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateAgingFamiliesStatusEditor\nStatusUpdateAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['AgingFamily_EquipmentComponentsAgingFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateAgingFamilyEquipmentComponentsAgingFamiliesStatusEditor\nStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamiliesAgingFamiliesApplication_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor\nStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamiliesAgingFamiliesReplacement_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteBudgets_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3-Budgets/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteBudgets",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteBudgets"
						},
						{
							"dataset": {
								"referenceName": "TempInput_BudgetsStatus",
								"type": "DatasetReference"
							},
							"name": "BudgetsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "3_310",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "3_311",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInBudgetsStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteBudgets\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> BudgetsStatus\nReadDeleteBudgets, BudgetsStatus exists(ReadDeleteBudgets@Name == BudgetsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInBudgetsStatus\nReadDeleteBudgets split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInBudgetsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-310-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-311-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteBudgets')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_BudgetsStatus')]",
				"[concat(variables('factoryId'), '/datasets/3_310')]",
				"[concat(variables('factoryId'), '/datasets/3_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteBudgets_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3-Budgets/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteBudgets",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteBudgets"
						},
						{
							"dataset": {
								"referenceName": "TempInput_BudgetsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusBudgetsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BudgetsDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateBudgetsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionBudgetsStatusEditor"
						},
						{
							"name": "StatusUpdateBudgetsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteBudgets\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusBudgetsStatusEditor\nReadDeleteBudgets select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Budget;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteBudgets select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionBudgetsStatusEditor\nReadTempStatusBudgetsStatusEditor, StatusColumnSelectionBudgetsStatusEditor exists(ReadTempStatusBudgetsStatusEditor@Name == StatusColumnSelectionBudgetsStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateBudgetsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Budgets.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateBudgetsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Budgets_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateBudgetsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteBudgets')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_BudgetsStatus')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteCriteria_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteCriteria"
						},
						{
							"dataset": {
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "CriteriaStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_320",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_321",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInCriteriaStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteCriteria\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CriteriaStatus\nReadDeleteCriteria, CriteriaStatus exists(ReadDeleteCriteria@Name == CriteriaStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInCriteriaStatus\nReadDeleteCriteria split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInCriteriaStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-320-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-321-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteCriteria')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_320')]",
				"[concat(variables('factoryId'), '/datasets/2_321')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteCriteria_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteCriteria"
						},
						{
							"dataset": {
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusCriteriaStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusCriterionTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateCriteriaStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateCriterionTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionCriteriaStatusEditor"
						},
						{
							"name": "StatusUpdateCriteriaStatusEditor"
						},
						{
							"name": "StatusColumnSelectionCriterionTechnicalPoliciesCriteriaStatusEditor"
						},
						{
							"name": "StatusUpdateCriterionTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteCriteria\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusCriteriaStatusEditor\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusCriterionTechnicalPoliciesCriteriaStatusEditor\nReadDeleteCriteria select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Criterion;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteCriteria select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionCriteriaStatusEditor\nReadTempStatusCriteriaStatusEditor, StatusColumnSelectionCriteriaStatusEditor exists(ReadTempStatusCriteriaStatusEditor@Name == StatusColumnSelectionCriteriaStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateCriteriaStatusEditor\nReadDeleteCriteria select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionCriterionTechnicalPoliciesCriteriaStatusEditor\nReadTempStatusCriterionTechnicalPoliciesCriteriaStatusEditor, StatusColumnSelectionCriterionTechnicalPoliciesCriteriaStatusEditor exists(Name == Criterion,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateCriterionTechnicalPoliciesCriteriaStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Criteria.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateCriteriaStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Criteria_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateCriteriaStatusEditor\nStatusUpdateCriterionTechnicalPoliciesCriteriaStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Criterion_TechnicalPoliciesCriteria_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateCriterionTechnicalPoliciesCriteriaStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteCriteria')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponentsAgingFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentComponentsAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentComponentsAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsAgingFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_411",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentRows"
						},
						{
							"dataset": {
								"referenceName": "1_411",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "1_410",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusEquipmentComponentAgingFamilyExistenceCheckInEquipmentComponentsAgingFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentComponentsAgingFamilies\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsAgingFamiliesStatus\nReadDeleteEquipmentComponentsAgingFamilies split(isNull(EquipmentComponent),\n\tisNull(AgingFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingEquipmentComponent, MissingAgingFamily)\nReadDeleteEquipmentComponentsAgingFamilies, EquipmentComponentsAgingFamiliesStatus exists(ReadDeleteEquipmentComponentsAgingFamilies@EquipmentComponent == EquipmentComponentsAgingFamiliesStatus@EquipmentComponent && ReadDeleteEquipmentComponentsAgingFamilies@AgingFamily == EquipmentComponentsAgingFamiliesStatus@AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusEquipmentComponentAgingFamilyExistenceCheckInEquipmentComponentsAgingFamiliesStatus\nCheckMandatoryData@MissingEquipmentComponent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-411-MissColumnEquipmentComponent.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentRows\nCheckMandatoryData@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-411-MissColumnAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRows\nStatusEquipmentComponentAgingFamilyExistenceCheckInEquipmentComponentsAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-410-NotExistingEquipmentComponent.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponentsAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/1_411')]",
				"[concat(variables('factoryId'), '/datasets/1_410')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponentsAgingFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentComponentsAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentComponentsAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentsAgingFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentsAgingFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentComponentsAgingFamilies\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor\nReadDeleteEquipmentComponentsAgingFamilies select(mapColumn(\n\t\t{$sourceId} = EquipmentComponent,\n\t\t{$targetId} = AgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'AgingLaw',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteEquipmentComponentsAgingFamilies select(mapColumn(\n\t\tEquipmentComponent,\n\t\tAgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentsAgingFamiliesStatusEditor\nReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor, StatusColumnSelectionEquipmentComponentsAgingFamiliesStatusEditor exists(ReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor@EquipmentComponent == StatusColumnSelectionEquipmentComponentsAgingFamiliesStatusEditor@EquipmentComponent && ReadTempStatusEquipmentComponentsAgingFamiliesStatusEditor@AgingFamily == StatusColumnSelectionEquipmentComponentsAgingFamiliesStatusEditor@AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentComponentsAgingFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentComponentsAgingFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentComponentsAgingFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponentsAgingFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentsAgingFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponentsAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponentsEquipmentComponents_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentComponentsEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentComponentsEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsEquipmentComponentsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_421",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentSourceRows"
						},
						{
							"dataset": {
								"referenceName": "1_421",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentTargetRows"
						},
						{
							"dataset": {
								"referenceName": "1_420",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentSourceRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusEquipmentComponentSourceEquipmentComponentTargetExistenceCheckInEquipmentComponentsEquipmentComponentsStatus"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentComponentsEquipmentComponents\nsource(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsEquipmentComponentsStatus\nReadDeleteEquipmentComponentsEquipmentComponents split(isNull(EquipmentComponentSource),\n\tisNull(EquipmentComponentTarget),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingEquipmentComponentSource, MissingEquipmentComponentTarget)\nReadDeleteEquipmentComponentsEquipmentComponents, EquipmentComponentsEquipmentComponentsStatus exists(ReadDeleteEquipmentComponentsEquipmentComponents@EquipmentComponentSource == EquipmentComponentsEquipmentComponentsStatus@EquipmentComponentSource && ReadDeleteEquipmentComponentsEquipmentComponents@EquipmentComponentTarget == EquipmentComponentsEquipmentComponentsStatus@EquipmentComponentTarget,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusEquipmentComponentSourceEquipmentComponentTargetExistenceCheckInEquipmentComponentsEquipmentComponentsStatus\nCheckMandatoryData@MissingEquipmentComponentSource sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-421-MissColumnEquipmentComponentSource.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentSourceRows\nCheckMandatoryData@MissingEquipmentComponentTarget sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-421-MissColumnEquipmentComponentTarget.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentTargetRows\nStatusEquipmentComponentSourceEquipmentComponentTargetExistenceCheckInEquipmentComponentsEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-420-NotExistingEquipmentComponentSource.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentSourceRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponentsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/1_421')]",
				"[concat(variables('factoryId'), '/datasets/1_420')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponentsEquipmentComponents_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentComponentsEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentComponentsEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentComponentsEquipmentComponents\nsource(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor\nReadDeleteEquipmentComponentsEquipmentComponents select(mapColumn(\n\t\t{$sourceId} = EquipmentComponentSource,\n\t\t{$targetId} = EquipmentComponentTarget\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'AgingInteraction',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteEquipmentComponentsEquipmentComponents select(mapColumn(\n\t\tEquipmentComponentSource,\n\t\tEquipmentComponentTarget\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentsEquipmentComponentsStatusEditor\nReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentComponentsEquipmentComponentsStatusEditor exists(ReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor@EquipmentComponentSource == StatusColumnSelectionEquipmentComponentsEquipmentComponentsStatusEditor@EquipmentComponentSource && ReadTempStatusEquipmentComponentsEquipmentComponentsStatusEditor@EquipmentComponentTarget == StatusColumnSelectionEquipmentComponentsEquipmentComponentsStatusEditor@EquipmentComponentTarget,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentComponentsEquipmentComponents.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponentsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentsEquipmentComponentsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponentsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponents_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_310",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_311",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInEquipmentComponentsStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentComponents\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsStatus\nReadDeleteEquipmentComponents, EquipmentComponentsStatus exists(ReadDeleteEquipmentComponents@Name == EquipmentComponentsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInEquipmentComponentsStatus\nReadDeleteEquipmentComponents split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-310-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-311-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/1_310')]",
				"[concat(variables('factoryId'), '/datasets/1_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentComponents_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusColumnSelectionEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentComponents\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentsStatusEditor\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor\nsource(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor\nsource(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor\nReadDeleteEquipmentComponents select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:EquipmentComponent;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteEquipmentComponents select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentsStatusEditor\nReadTempStatusEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentComponentsStatusEditor exists(ReadTempStatusEquipmentComponentsStatusEditor@Name == StatusColumnSelectionEquipmentComponentsStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentComponentsStatusEditor\nReadDeleteEquipmentComponents select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor\nReadTempStatusEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor, StatusColumnSelectionEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor exists(Name == EquipmentComponent,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor\nReadDeleteEquipmentComponents select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor\nReadTempStatusEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor exists(Name == EquipmentComponentSource,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor\nReadDeleteEquipmentComponents select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor\nReadTempStatusEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor exists(Name == EquipmentComponentTarget,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor\nReadDeleteEquipmentComponents select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor\nReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor exists(Name == EquipmentComponent,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentComponents.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentsStatusEditor\nStatusUpdateEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponent_EquipmentComponentsAgingFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentEquipmentComponentsAgingFamiliesStatusEditor\nStatusUpdateEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponentSource_EquipmentComponentsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentSourceEquipmentComponentsEquipmentComponentsStatusEditor\nStatusUpdateEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentComponentTarget_EquipmentComponentsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentComponentTargetEquipmentComponentsEquipmentComponentsStatusEditor\nStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentGroupsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentGroupsEquipmentComponents_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentGroupsEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentGroupsEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentGroupsEquipmentComponentsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_441",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentGroupRows"
						},
						{
							"dataset": {
								"referenceName": "11_441",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentRows"
						},
						{
							"dataset": {
								"referenceName": "11_440",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentGroupRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusEquipmentGroupEquipmentComponentExistenceCheckInEquipmentGroupsEquipmentComponentsStatus"
						}
					],
					"script": "source(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentGroupsEquipmentComponents\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentGroupsEquipmentComponentsStatus\nReadDeleteEquipmentGroupsEquipmentComponents split(isNull(EquipmentGroup),\n\tisNull(EquipmentComponent),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingEquipmentGroup, MissingEquipmentComponent)\nReadDeleteEquipmentGroupsEquipmentComponents, EquipmentGroupsEquipmentComponentsStatus exists(ReadDeleteEquipmentGroupsEquipmentComponents@EquipmentGroup == EquipmentGroupsEquipmentComponentsStatus@EquipmentGroup && ReadDeleteEquipmentGroupsEquipmentComponents@EquipmentComponent == EquipmentGroupsEquipmentComponentsStatus@EquipmentComponent,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusEquipmentGroupEquipmentComponentExistenceCheckInEquipmentGroupsEquipmentComponentsStatus\nCheckMandatoryData@MissingEquipmentGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-441-MissColumnEquipmentGroup.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentGroupRows\nCheckMandatoryData@MissingEquipmentComponent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-441-MissColumnEquipmentComponent.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentRows\nStatusEquipmentGroupEquipmentComponentExistenceCheckInEquipmentGroupsEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-440-NotExistingEquipmentGroup.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentGroupRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentGroupsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_441')]",
				"[concat(variables('factoryId'), '/datasets/11_440')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentGroupsEquipmentComponents_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentGroupsEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentGroupsEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentGroupsEquipmentComponents\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor\nReadDeleteEquipmentGroupsEquipmentComponents select(mapColumn(\n\t\t{$sourceId} = EquipmentGroup,\n\t\t{$targetId} = EquipmentComponent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'Group_contains_EquipmentComponent',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteEquipmentGroupsEquipmentComponents select(mapColumn(\n\t\tEquipmentGroup,\n\t\tEquipmentComponent\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor\nReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor exists(ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor@EquipmentGroup == StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor@EquipmentGroup && ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor@EquipmentComponent == StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor@EquipmentComponent,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentGroupsEquipmentComponents.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentGroupsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentGroupsEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentGroups_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentGroupsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_320",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_321",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInEquipmentGroupsStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentGroups\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentGroupsStatus\nReadDeleteEquipmentGroups, EquipmentGroupsStatus exists(ReadDeleteEquipmentGroups@Name == EquipmentGroupsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInEquipmentGroupsStatus\nReadDeleteEquipmentGroups split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInEquipmentGroupsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-320-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-321-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_320')]",
				"[concat(variables('factoryId'), '/datasets/11_321')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteEquipmentGroups_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentGroupsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentGroupsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionEquipmentGroupsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentGroupsStatusEditor"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
						},
						{
							"name": "StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor"
						},
						{
							"name": "StatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteEquipmentGroups\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentGroupsStatusEditor\nsource(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tEquipmentComponent as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor\nReadDeleteEquipmentGroups select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:EquipmentGroup;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteEquipmentGroups select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentGroupsStatusEditor\nReadTempStatusEquipmentGroupsStatusEditor, StatusColumnSelectionEquipmentGroupsStatusEditor exists(ReadTempStatusEquipmentGroupsStatusEditor@Name == StatusColumnSelectionEquipmentGroupsStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentGroupsStatusEditor\nReadDeleteEquipmentGroups select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor\nReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor, StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor exists(Name == EquipmentGroup,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSustainmentActionsEquipmentGroupsStatusEditor\nReadDeleteEquipmentGroups select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor\nReadTempStatusEquipmentGroupsEquipmentComponentsStatusEditor, StatusColumnSelectionEquipmentGroupsEquipmentComponentsStatusEditor exists(Name == EquipmentGroup,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentGroups.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateEquipmentGroupsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentGroups_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentGroupsStatusEditor\nStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentActionsEquipmentGroups_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor\nStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['EquipmentGroupsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateEquipmentGroupsEquipmentComponentsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamiliesAgingFamiliesApplication_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesApplication",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSubActionFamiliesAgingFamiliesApplication"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesAgingFamiliesApplicationStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_421",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_421",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_420",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSubActionFamilyRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusSubActionFamilyAgingFamilyExistenceCheckInSubActionFamiliesAgingFamiliesApplicationStatus"
						}
					],
					"script": "source(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSubActionFamiliesAgingFamiliesApplication\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesAgingFamiliesApplicationStatus\nReadDeleteSubActionFamiliesAgingFamiliesApplication split(isNull(SubActionFamily),\n\tisNull(AgingFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingSubActionFamily, MissingAgingFamily)\nReadDeleteSubActionFamiliesAgingFamiliesApplication, SubActionFamiliesAgingFamiliesApplicationStatus exists(ReadDeleteSubActionFamiliesAgingFamiliesApplication@SubActionFamily == SubActionFamiliesAgingFamiliesApplicationStatus@SubActionFamily && ReadDeleteSubActionFamiliesAgingFamiliesApplication@AgingFamily == SubActionFamiliesAgingFamiliesApplicationStatus@AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusSubActionFamilyAgingFamilyExistenceCheckInSubActionFamiliesAgingFamiliesApplicationStatus\nCheckMandatoryData@MissingSubActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-421-MissColumnSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSubActionFamilyRows\nCheckMandatoryData@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-421-MissColumnAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRows\nStatusSubActionFamilyAgingFamilyExistenceCheckInSubActionFamiliesAgingFamiliesApplicationStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-420-NotExistingSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSubActionFamilyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamiliesAgingFamiliesApplication')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_421')]",
				"[concat(variables('factoryId'), '/datasets/11_420')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamiliesAgingFamiliesApplication_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesApplication",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSubActionFamiliesAgingFamiliesApplication"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						}
					],
					"script": "source(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSubActionFamiliesAgingFamiliesApplication\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor\nReadDeleteSubActionFamiliesAgingFamiliesApplication select(mapColumn(\n\t\t{$sourceId} = SubActionFamily,\n\t\t{$targetId} = AgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'apply_to_AgingFamily',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteSubActionFamiliesAgingFamiliesApplication select(mapColumn(\n\t\tSubActionFamily,\n\t\tAgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor\nReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor, StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor exists(ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor@SubActionFamily == StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor@SubActionFamily && ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor@AgingFamily == StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor@AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SubActionFamiliesAgingFamiliesApplication.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamiliesAgingFamiliesApplication_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamiliesAgingFamiliesApplication')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamiliesAgingFamiliesReplacement_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesReplacement",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSubActionFamiliesAgingFamiliesReplacement"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesAgingFamiliesReplacementStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_431",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSubActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_431",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "11_430",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSubActionFamilyRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusSubActionFamilyAgingFamilyExistenceCheckInSubActionFamiliesAgingFamiliesReplacementStatus"
						}
					],
					"script": "source(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSubActionFamiliesAgingFamiliesReplacement\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesAgingFamiliesReplacementStatus\nReadDeleteSubActionFamiliesAgingFamiliesReplacement split(isNull(SubActionFamily),\n\tisNull(AgingFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingSubActionFamily, MissingAgingFamily)\nReadDeleteSubActionFamiliesAgingFamiliesReplacement, SubActionFamiliesAgingFamiliesReplacementStatus exists(ReadDeleteSubActionFamiliesAgingFamiliesReplacement@SubActionFamily == SubActionFamiliesAgingFamiliesReplacementStatus@SubActionFamily && ReadDeleteSubActionFamiliesAgingFamiliesReplacement@AgingFamily == SubActionFamiliesAgingFamiliesReplacementStatus@AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusSubActionFamilyAgingFamilyExistenceCheckInSubActionFamiliesAgingFamiliesReplacementStatus\nCheckMandatoryData@MissingSubActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-431-MissColumnSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSubActionFamilyRows\nCheckMandatoryData@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-431-MissColumnAgingFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRows\nStatusSubActionFamilyAgingFamilyExistenceCheckInSubActionFamiliesAgingFamiliesReplacementStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-430-NotExistingSubActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSubActionFamilyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamiliesAgingFamiliesReplacement')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_431')]",
				"[concat(variables('factoryId'), '/datasets/11_430')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamiliesAgingFamiliesReplacement_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSubActionFamiliesAgingFamiliesReplacement",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSubActionFamiliesAgingFamiliesReplacement"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"script": "source(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSubActionFamiliesAgingFamiliesReplacement\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor\nReadDeleteSubActionFamiliesAgingFamiliesReplacement select(mapColumn(\n\t\t{$sourceId} = SubActionFamily,\n\t\t{$targetId} = AgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'replace_with_RetrofitAgingFamily',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteSubActionFamiliesAgingFamiliesReplacement select(mapColumn(\n\t\tSubActionFamily,\n\t\tAgingFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor\nReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor, StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor exists(ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor@SubActionFamily == StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor@SubActionFamily && ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor@AgingFamily == StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor@AgingFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SuBActionFamiliesAgingFamiliesReplacement.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamiliesAgingFamiliesReplacement_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamiliesAgingFamiliesReplacement')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_310",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_311",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInSubActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSubActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesStatus\nReadDeleteSubActionFamilies, SubActionFamiliesStatus exists(ReadDeleteSubActionFamilies@Name == SubActionFamiliesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInSubActionFamiliesStatus\nReadDeleteSubActionFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInSubActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-310-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-311-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_310')]",
				"[concat(variables('factoryId'), '/datasets/11_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSubActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesSubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesApplicationStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesAgingFamiliesReplacementStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateActionFamiliesSubActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor"
						},
						{
							"name": "StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						},
						{
							"name": "StatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSubActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesStatusEditor\nsource(output(\n\t\tActionFamily as string,\n\t\tSubActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusActionFamiliesSubActionFamiliesStatusEditor\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor\nsource(output(\n\t\tSubActionFamily as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor\nReadDeleteSubActionFamilies select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:SubActionFamily;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteSubActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesStatusEditor\nReadTempStatusSubActionFamiliesStatusEditor, StatusColumnSelectionSubActionFamiliesStatusEditor exists(ReadTempStatusSubActionFamiliesStatusEditor@Name == StatusColumnSelectionSubActionFamiliesStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSubActionFamiliesStatusEditor\nReadDeleteSubActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor\nReadTempStatusActionFamiliesSubActionFamiliesStatusEditor, StatusColumnSelectionActionFamiliesSubActionFamiliesStatusEditor exists(Name == SubActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateActionFamiliesSubActionFamiliesStatusEditor\nReadDeleteSubActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor\nReadTempStatusSubActionFamiliesAgingFamiliesApplicationStatusEditor, StatusColumnSelectionSubActionFamiliesAgingFamiliesApplicationStatusEditor exists(Name == SubActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor\nReadDeleteSubActionFamilies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor\nReadTempStatusSubActionFamiliesAgingFamiliesReplacementStatusEditor, StatusColumnSelectionSubActionFamiliesAgingFamiliesReplacementStatusEditor exists(Name == SubActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SubActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSubActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesStatusEditor\nStatusUpdateActionFamiliesSubActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['ActionFamiliesSubActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateActionFamiliesSubActionFamiliesStatusEditor\nStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamiliesAgingFamiliesApplication_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesApplicationStatusEditor\nStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SubActionFamiliesAgingFamiliesReplacement_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSubActionFamiliesAgingFamiliesReplacementStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesSubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesApplicationStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesAgingFamiliesReplacementStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActionsActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSustainmentActionsActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSustainmentActionsActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_411",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSustainmentActionRows"
						},
						{
							"dataset": {
								"referenceName": "2_411",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_410",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSustainmentActionRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusSustainmentActionActionFamilyExistenceCheckInSustainmentActionsActionFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSustainmentActionsActionFamilies\nsource(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsActionFamiliesStatus\nReadDeleteSustainmentActionsActionFamilies split(isNull(SustainmentAction),\n\tisNull(ActionFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingSustainmentAction, MissingActionFamily)\nReadDeleteSustainmentActionsActionFamilies, SustainmentActionsActionFamiliesStatus exists(ReadDeleteSustainmentActionsActionFamilies@SustainmentAction == SustainmentActionsActionFamiliesStatus@SustainmentAction && ReadDeleteSustainmentActionsActionFamilies@ActionFamily == SustainmentActionsActionFamiliesStatus@ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusSustainmentActionActionFamilyExistenceCheckInSustainmentActionsActionFamiliesStatus\nCheckMandatoryData@MissingSustainmentAction sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-411-MissColumnSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSustainmentActionRows\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-411-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nStatusSustainmentActionActionFamilyExistenceCheckInSustainmentActionsActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-410-NotExistingSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSustainmentActionRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActionsActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_411')]",
				"[concat(variables('factoryId'), '/datasets/2_410')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActionsActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSustainmentActionsActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSustainmentActionsActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionsActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionsActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionsActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSustainmentActionsActionFamilies\nsource(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionsActionFamiliesStatusEditor\nReadDeleteSustainmentActionsActionFamilies select(mapColumn(\n\t\t{$sourceId} = SustainmentAction,\n\t\t{$targetId} = ActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'has_type_ActionFamily',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteSustainmentActionsActionFamilies select(mapColumn(\n\t\tSustainmentAction,\n\t\tActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionsActionFamiliesStatusEditor\nReadTempStatusSustainmentActionsActionFamiliesStatusEditor, StatusColumnSelectionSustainmentActionsActionFamiliesStatusEditor exists(ReadTempStatusSustainmentActionsActionFamiliesStatusEditor@SustainmentAction == StatusColumnSelectionSustainmentActionsActionFamiliesStatusEditor@SustainmentAction && ReadTempStatusSustainmentActionsActionFamiliesStatusEditor@ActionFamily == StatusColumnSelectionSustainmentActionsActionFamiliesStatusEditor@ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSustainmentActionsActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SustainmentActionsActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSustainmentActionsActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentActionsActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionsActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActionsActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActionsEquipmentGroups_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSustainmentActionsEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSustainmentActionsEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsEquipmentGroupsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_451",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSustainmentActionRows"
						},
						{
							"dataset": {
								"referenceName": "11_451",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentGroupRows"
						},
						{
							"dataset": {
								"referenceName": "11_450",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSustainmentActionRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusSustainmentActionEquipmentGroupExistenceCheckInSustainmentActionsEquipmentGroupsStatus"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSustainmentActionsEquipmentGroups\nsource(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsEquipmentGroupsStatus\nReadDeleteSustainmentActionsEquipmentGroups split(isNull(SustainmentAction),\n\tisNull(EquipmentGroup),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingSustainmentAction, MissingEquipmentGroup)\nReadDeleteSustainmentActionsEquipmentGroups, SustainmentActionsEquipmentGroupsStatus exists(ReadDeleteSustainmentActionsEquipmentGroups@SustainmentAction == SustainmentActionsEquipmentGroupsStatus@SustainmentAction && ReadDeleteSustainmentActionsEquipmentGroups@EquipmentGroup == SustainmentActionsEquipmentGroupsStatus@EquipmentGroup,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusSustainmentActionEquipmentGroupExistenceCheckInSustainmentActionsEquipmentGroupsStatus\nCheckMandatoryData@MissingSustainmentAction sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-451-MissColumnSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSustainmentActionRows\nCheckMandatoryData@MissingEquipmentGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-451-MissColumnEquipmentGroup.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentGroupRows\nStatusSustainmentActionEquipmentGroupExistenceCheckInSustainmentActionsEquipmentGroupsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-450-NotExistingSustainmentAction.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSustainmentActionRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActionsEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_451')]",
				"[concat(variables('factoryId'), '/datasets/11_450')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActionsEquipmentGroups_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSustainmentActionsEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSustainmentActionsEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSustainmentActionsEquipmentGroups\nsource(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor\nReadDeleteSustainmentActionsEquipmentGroups select(mapColumn(\n\t\t{$sourceId} = SustainmentAction,\n\t\t{$targetId} = EquipmentGroup\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'is_on_EquipmentGroup',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteSustainmentActionsEquipmentGroups select(mapColumn(\n\t\tSustainmentAction,\n\t\tEquipmentGroup\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor\nReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor, StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor exists(ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor@SustainmentAction == StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor@SustainmentAction && ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor@EquipmentGroup == StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor@EquipmentGroup,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSustainmentActionsEquipmentGroupsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SustainmentActionsEquipmentGroups.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentActionsEquipmentGroups_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActionsEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActions_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSustainmentActions",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSustainmentActions"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_330",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_331",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInSustainmentActionsStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSustainmentActions\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsStatus\nReadDeleteSustainmentActions, SustainmentActionsStatus exists(ReadDeleteSustainmentActions@Name == SustainmentActionsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInSustainmentActionsStatus\nReadDeleteSustainmentActions split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInSustainmentActionsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-330-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-331-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActions')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_330')]",
				"[concat(variables('factoryId'), '/datasets/2_331')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteSustainmentActions_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteSustainmentActions",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteSustainmentActions"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionSustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsEquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionsStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionSustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionsStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionsStatusEditor"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionSustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionSustainmentActionsActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor"
						},
						{
							"name": "StatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteSustainmentActions\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionsStatusEditor\nsource(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionSustainmentActionsActionFamiliesStatusEditor\nsource(output(\n\t\tSustainmentAction as string,\n\t\tEquipmentGroup as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor\nReadDeleteSustainmentActions select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:SustainmentAction;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteSustainmentActions select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionsStatusEditor\nReadTempStatusSustainmentActionsStatusEditor, StatusColumnSelectionSustainmentActionsStatusEditor exists(ReadTempStatusSustainmentActionsStatusEditor@Name == StatusColumnSelectionSustainmentActionsStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSustainmentActionsStatusEditor\nReadDeleteSustainmentActions select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionSustainmentActionsActionFamiliesStatusEditor\nReadTempStatusSustainmentActionSustainmentActionsActionFamiliesStatusEditor, StatusColumnSelectionSustainmentActionSustainmentActionsActionFamiliesStatusEditor exists(Name == SustainmentAction,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSustainmentActionSustainmentActionsActionFamiliesStatusEditor\nReadDeleteSustainmentActions select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor\nReadTempStatusSustainmentActionsEquipmentGroupsStatusEditor, StatusColumnSelectionSustainmentActionsEquipmentGroupsStatusEditor exists(Name == SustainmentAction,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateSustainmentActionsEquipmentGroupsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SustainmentActions.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateSustainmentActionsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentActions_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionsStatusEditor\nStatusUpdateSustainmentActionSustainmentActionsActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentAction_SustainmentActionsActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionSustainmentActionsActionFamiliesStatusEditor\nStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['SustainmentActionsEquipmentGroups_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateSustainmentActionsEquipmentGroupsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteSustainmentActions')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsEquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTeams_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "4-HumanResources/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTeams",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTeams"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TeamsStatus",
								"type": "DatasetReference"
							},
							"name": "TeamsStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "4_310",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "4_311",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInTeamsStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTeams\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TeamsStatus\nReadDeleteTeams, TeamsStatus exists(ReadDeleteTeams@Name == TeamsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInTeamsStatus\nReadDeleteTeams split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInTeamsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-310-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-311-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTeams')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TeamsStatus')]",
				"[concat(variables('factoryId'), '/datasets/4_310')]",
				"[concat(variables('factoryId'), '/datasets/4_311')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTeams_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "4-HumanResources/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTeams",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTeams"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TeamsStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTeamsStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HumanResourcesDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTeamsStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionTeamsStatusEditor"
						},
						{
							"name": "StatusUpdateTeamsStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTeams\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTeamsStatusEditor\nReadDeleteTeams select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Team;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteTeams select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTeamsStatusEditor\nReadTempStatusTeamsStatusEditor, StatusColumnSelectionTeamsStatusEditor exists(ReadTempStatusTeamsStatusEditor@Name == StatusColumnSelectionTeamsStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTeamsStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Teams.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTeamsStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Teams_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTeamsStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTeams')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TeamsStatus')]",
				"[concat(variables('factoryId'), '/datasets/HumanResourcesDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesCriteria_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTechnicalPoliciesCriteria"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesCriteriaStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_441",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_441",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCriterionRows"
						},
						{
							"dataset": {
								"referenceName": "2_440",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTechnicalPolicyRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusTechnicalPolicyCriterionExistenceCheckInTechnicalPoliciesCriteriaStatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPoliciesCriteria\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesCriteriaStatus\nReadDeleteTechnicalPoliciesCriteria split(isNull(TechnicalPolicy),\n\tisNull(Criterion),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingTechnicalPolicy, MissingCriterion)\nReadDeleteTechnicalPoliciesCriteria, TechnicalPoliciesCriteriaStatus exists(ReadDeleteTechnicalPoliciesCriteria@TechnicalPolicy == TechnicalPoliciesCriteriaStatus@TechnicalPolicy && ReadDeleteTechnicalPoliciesCriteria@Criterion == TechnicalPoliciesCriteriaStatus@Criterion,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusTechnicalPolicyCriterionExistenceCheckInTechnicalPoliciesCriteriaStatus\nCheckMandatoryData@MissingTechnicalPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-441-MissColumnTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTechnicalPolicyRows\nCheckMandatoryData@MissingCriterion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-441-MissColumnCriterion.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCriterionRows\nStatusTechnicalPolicyCriterionExistenceCheckInTechnicalPoliciesCriteriaStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-440-NotExistingTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTechnicalPolicyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesCriteria')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_441')]",
				"[concat(variables('factoryId'), '/datasets/2_440')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesCriteria_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTechnicalPoliciesCriteria"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPoliciesCriteria\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesCriteriaStatusEditor\nReadDeleteTechnicalPoliciesCriteria select(mapColumn(\n\t\t{$sourceId} = TechnicalPolicy,\n\t\t{$targetId} = Criterion\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'Policy_contains_Criterion',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteTechnicalPoliciesCriteria select(mapColumn(\n\t\tTechnicalPolicy,\n\t\tCriterion\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor\nReadTempStatusTechnicalPoliciesCriteriaStatusEditor, StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor exists(ReadTempStatusTechnicalPoliciesCriteriaStatusEditor@TechnicalPolicy == StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor@TechnicalPolicy && ReadTempStatusTechnicalPoliciesCriteriaStatusEditor@Criterion == StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor@Criterion,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTechnicalPoliciesCriteriaStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPoliciesCriteria.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTechnicalPoliciesCriteriaStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPoliciesCriteria_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesCriteriaStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesCriteria')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesMainActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesMainActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTechnicalPoliciesMainActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesMainActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_421",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_421",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_420",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTechnicalPolicyRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusTechnicalPolicyActionFamilyExistenceCheckInTechnicalPoliciesMainActionFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPoliciesMainActionFamilies\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesMainActionFamiliesStatus\nReadDeleteTechnicalPoliciesMainActionFamilies split(isNull(TechnicalPolicy),\n\tisNull(ActionFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingTechnicalPolicy, MissingActionFamily)\nReadDeleteTechnicalPoliciesMainActionFamilies, TechnicalPoliciesMainActionFamiliesStatus exists(ReadDeleteTechnicalPoliciesMainActionFamilies@TechnicalPolicy == TechnicalPoliciesMainActionFamiliesStatus@TechnicalPolicy && ReadDeleteTechnicalPoliciesMainActionFamilies@ActionFamily == TechnicalPoliciesMainActionFamiliesStatus@ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusTechnicalPolicyActionFamilyExistenceCheckInTechnicalPoliciesMainActionFamiliesStatus\nCheckMandatoryData@MissingTechnicalPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-421-MissColumnTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTechnicalPolicyRows\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-421-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nStatusTechnicalPolicyActionFamilyExistenceCheckInTechnicalPoliciesMainActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-420-NotExistingTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTechnicalPolicyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesMainActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_421')]",
				"[concat(variables('factoryId'), '/datasets/2_420')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesMainActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesMainActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTechnicalPoliciesMainActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPoliciesMainActionFamilies\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor\nReadDeleteTechnicalPoliciesMainActionFamilies select(mapColumn(\n\t\t{$sourceId} = TechnicalPolicy,\n\t\t{$targetId} = ActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'contains_Action1',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteTechnicalPoliciesMainActionFamilies select(mapColumn(\n\t\tTechnicalPolicy,\n\t\tActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesMainActionFamiliesStatusEditor\nReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor, StatusColumnSelectionTechnicalPoliciesMainActionFamiliesStatusEditor exists(ReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor@TechnicalPolicy == StatusColumnSelectionTechnicalPoliciesMainActionFamiliesStatusEditor@TechnicalPolicy && ReadTempStatusTechnicalPoliciesMainActionFamiliesStatusEditor@ActionFamily == StatusColumnSelectionTechnicalPoliciesMainActionFamiliesStatusEditor@ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPoliciesMainActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPoliciesMainActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesMainActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesMainActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesSecondaryActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesSecondaryActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTechnicalPoliciesSecondaryActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesSecondaryActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_431",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTechnicalPolicyRows"
						},
						{
							"dataset": {
								"referenceName": "2_431",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRows"
						},
						{
							"dataset": {
								"referenceName": "2_430",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTechnicalPolicyRows"
						}
					],
					"transformations": [
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "StatusTechnicalPolicyActionFamilyExistenceCheckInTechnicalPoliciesSecondaryActionFamiliesStatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPoliciesSecondaryActionFamilies\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesSecondaryActionFamiliesStatus\nReadDeleteTechnicalPoliciesSecondaryActionFamilies split(isNull(TechnicalPolicy),\n\tisNull(ActionFamily),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingTechnicalPolicy, MissingActionFamily)\nReadDeleteTechnicalPoliciesSecondaryActionFamilies, TechnicalPoliciesSecondaryActionFamiliesStatus exists(ReadDeleteTechnicalPoliciesSecondaryActionFamilies@TechnicalPolicy == TechnicalPoliciesSecondaryActionFamiliesStatus@TechnicalPolicy && ReadDeleteTechnicalPoliciesSecondaryActionFamilies@ActionFamily == TechnicalPoliciesSecondaryActionFamiliesStatus@ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusTechnicalPolicyActionFamilyExistenceCheckInTechnicalPoliciesSecondaryActionFamiliesStatus\nCheckMandatoryData@MissingTechnicalPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-431-MissColumnTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTechnicalPolicyRows\nCheckMandatoryData@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-431-MissColumnActionFamily.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRows\nStatusTechnicalPolicyActionFamilyExistenceCheckInTechnicalPoliciesSecondaryActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-430-NotExistingTechnicalPolicy.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTechnicalPolicyRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesSecondaryActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_431')]",
				"[concat(variables('factoryId'), '/datasets/2_430')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPoliciesSecondaryActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTechnicalPoliciesSecondaryActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTechnicalPoliciesSecondaryActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementDeleteRelationship_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPoliciesSecondaryActionFamilies\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nReadDeleteTechnicalPoliciesSecondaryActionFamilies select(mapColumn(\n\t\t{$sourceId} = TechnicalPolicy,\n\t\t{$targetId} = ActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'contains_Action2',\n\t\t{$relationshipDelete} = 'true',\n\t\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nReadDeleteTechnicalPoliciesSecondaryActionFamilies select(mapColumn(\n\t\tTechnicalPolicy,\n\t\tActionFamily\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor, StatusColumnSelectionTechnicalPoliciesSecondaryActionFamiliesStatusEditor exists(ReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor@TechnicalPolicy == StatusColumnSelectionTechnicalPoliciesSecondaryActionFamiliesStatusEditor@TechnicalPolicy && ReadTempStatusTechnicalPoliciesSecondaryActionFamiliesStatusEditor@ActionFamily == StatusColumnSelectionTechnicalPoliciesSecondaryActionFamiliesStatusEditor@ActionFamily,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPoliciesSecondaryActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPoliciesSecondaryActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPoliciesSecondaryActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteRelationship_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPolicies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTechnicalPolicies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTechnicalPolicies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_340",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_341",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInTechnicalPoliciesStatus"
						},
						{
							"name": "CheckMandatoryData"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPolicies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesStatus\nReadDeleteTechnicalPolicies, TechnicalPoliciesStatus exists(ReadDeleteTechnicalPolicies@Name == TechnicalPoliciesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInTechnicalPoliciesStatus\nReadDeleteTechnicalPolicies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nExistingNameInTechnicalPoliciesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-340-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-341-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/2_340')]",
				"[concat(variables('factoryId'), '/datasets/2_341')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteTechnicalPolicies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Delete"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DeleteTechnicalPolicies",
								"type": "DatasetReference"
							},
							"name": "ReadDeleteTechnicalPolicies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPoliciesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "ReadTempStatusTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementDeleteEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPoliciesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"dataset": {
								"referenceName": "TempOutput_Status",
								"type": "DatasetReference"
							},
							"name": "WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "StatusColumnSelectionTechnicalPoliciesStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPoliciesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor"
						},
						{
							"name": "StatusColumnSelectionTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor"
						},
						{
							"name": "StatusUpdateTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor"
						}
					],
					"script": "source(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPolicies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesStatusEditor\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor\nReadDeleteTechnicalPolicies select(mapColumn(\n\t\t{$id} = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:TechnicalPolicy;1',\n\t\t{$entityDelete} = 'true') ~> ModelDefinition\nReadDeleteTechnicalPolicies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesStatusEditor\nReadTempStatusTechnicalPoliciesStatusEditor, StatusColumnSelectionTechnicalPoliciesStatusEditor exists(ReadTempStatusTechnicalPoliciesStatusEditor@Name == StatusColumnSelectionTechnicalPoliciesStatusEditor@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTechnicalPoliciesStatusEditor\nReadDeleteTechnicalPolicies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor\nReadTempStatusTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor, StatusColumnSelectionTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor exists(Name == TechnicalPolicy,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor\nReadDeleteTechnicalPolicies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nReadTempStatusTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor, StatusColumnSelectionTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor exists(Name == TechnicalPolicy,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nReadDeleteTechnicalPolicies select(mapColumn(\n\t\tName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor\nReadTempStatusTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor, StatusColumnSelectionTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor exists(Name == TechnicalPolicy,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPolicies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nStatusUpdateTechnicalPoliciesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPolicies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesStatusEditor\nStatusUpdateTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPolicy_TechnicalPoliciesMainActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesMainActionFamiliesStatusEditor\nStatusUpdateTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPolicy_TechnicalPoliciesSecondaryActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesStatusEditor\nStatusUpdateTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPolicy_TechnicalPoliciesCriteria_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPolicyTechnicalPoliciesCriteriaStatusEditor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DeleteTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementDeleteEntity_temp')]",
				"[concat(variables('factoryId'), '/datasets/TempOutput_Status')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateActionFamilies_MapCostsByRatingLevel",
								"type": "DatasetReference"
							},
							"name": "UpdateActionFamiliesMapCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "UpdateActionFamilies_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "UpdateActionFamiliesMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference"
							},
							"name": "WriteCostsAreCapitalChargesWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingRatingLevelRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingUnitPropertyRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRowsCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "2_513",
								"type": "DatasetReference"
							},
							"name": "WriteUnitPropertyCostsByRatingLevelInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference"
							},
							"name": "WriteSupplierCostWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference"
							},
							"name": "WriteDurationWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference"
							},
							"name": "WriteIsLocalActionWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_512",
								"type": "DatasetReference"
							},
							"name": "WriteNeedsOutageWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingActionFamilyRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingActionFamilyRowsBudgetCategories"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullCostsAreCapitalCharges"
						},
						{
							"name": "CostsAreCapitalChargesTypeCheck"
						},
						{
							"name": "MapCostsByRatingLevelMandatoryCheck"
						},
						{
							"name": "MapCostsByRatingLevelExistenceCheck"
						},
						{
							"name": "NonNullEnumUnitPropertyCostsByRatingLevel"
						},
						{
							"name": "UnitPropertyCostsByRatingLevelEnumCheck"
						},
						{
							"name": "MapCostsByRatingLevelSplitKeyValues"
						},
						{
							"name": "NonNullSupplierCost"
						},
						{
							"name": "SupplierCostTypeCheck"
						},
						{
							"name": "NonNullDuration"
						},
						{
							"name": "DurationTypeCheck"
						},
						{
							"name": "NonNullIsLocalAction"
						},
						{
							"name": "IsLocalActionTypeCheck"
						},
						{
							"name": "NonNullNeedsOutage"
						},
						{
							"name": "NeedsOutageTypeCheck"
						},
						{
							"name": "MapBudgetCategoriesMandatoryCheck"
						},
						{
							"name": "MapBudgetCategoriesExistenceCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tCostsAreCapitalCharges as string,\n\t\tIsLocalAction as string,\n\t\tNeedsOutage as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamiliesStatus\nsource(output(\n\t\tActionFamily as string,\n\t\tRatingLevel as string,\n\t\tUnitProperty as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateActionFamiliesMapCostsByRatingLevel\nsource(output(\n\t\tActionFamily as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateActionFamiliesMapBudgetCategories\nReadUpdateActionFamilies, ActionFamiliesStatus exists(ReadUpdateActionFamilies@Name == ActionFamiliesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInActionFamiliesStatus\nReadUpdateActionFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateActionFamilies filter(not(isNull(CostsAreCapitalCharges))) ~> NonNullCostsAreCapitalCharges\nNonNullCostsAreCapitalCharges split(not(isBoolean(CostsAreCapitalCharges)),\n\tdisjoint: false) ~> CostsAreCapitalChargesTypeCheck@(CostsAreCapitalChargesWrongType)\nUpdateActionFamiliesMapCostsByRatingLevel split(isNull(ActionFamily),\n\tisNull(RatingLevel),\n\tisNull(UnitProperty),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCostsByRatingLevelMandatoryCheck@(MissingActionFamily, MissingRatingLevel, MissingUnitProperty, MissingValue)\nUpdateActionFamiliesMapCostsByRatingLevel, ActionFamiliesStatus exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCostsByRatingLevelExistenceCheck\nUpdateActionFamiliesMapCostsByRatingLevel filter(not(isNull(UnitProperty))) ~> NonNullEnumUnitPropertyCostsByRatingLevel\nNonNullEnumUnitPropertyCostsByRatingLevel filter(not(in(['SupplierCost', 'Duration'], UnitProperty))) ~> UnitPropertyCostsByRatingLevelEnumCheck\nUpdateActionFamiliesMapCostsByRatingLevel split(UnitProperty == 'SupplierCost',\n\tUnitProperty == 'Duration',\n\tdisjoint: false) ~> MapCostsByRatingLevelSplitKeyValues@(UnitPropertySupplierCost, UnitPropertyDuration)\nMapCostsByRatingLevelSplitKeyValues@UnitPropertySupplierCost filter(not(isNull(Value))) ~> NonNullSupplierCost\nNonNullSupplierCost split(not(isFloat(Value)),\n\tdisjoint: false) ~> SupplierCostTypeCheck@(SupplierCostWrongType)\nMapCostsByRatingLevelSplitKeyValues@UnitPropertyDuration filter(not(isNull(Value))) ~> NonNullDuration\nNonNullDuration split(not(isFloat(Value)),\n\tdisjoint: false) ~> DurationTypeCheck@(DurationWrongType)\nReadUpdateActionFamilies filter(not(isNull(IsLocalAction))) ~> NonNullIsLocalAction\nNonNullIsLocalAction split(not(isBoolean(IsLocalAction)),\n\tdisjoint: false) ~> IsLocalActionTypeCheck@(IsLocalActionWrongType)\nReadUpdateActionFamilies filter(not(isNull(NeedsOutage))) ~> NonNullNeedsOutage\nNonNullNeedsOutage split(not(isBoolean(NeedsOutage)),\n\tdisjoint: false) ~> NeedsOutageTypeCheck@(NeedsOutageWrongType)\nUpdateActionFamiliesMapBudgetCategories split(isNull(ActionFamily),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapBudgetCategoriesMandatoryCheck@(MissingActionFamily, MissingIndex, MissingValue)\nUpdateActionFamiliesMapBudgetCategories, ActionFamiliesStatus exists(ActionFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapBudgetCategoriesExistenceCheck\nExistingNameInActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-510-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-511-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nCostsAreCapitalChargesTypeCheck@CostsAreCapitalChargesWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-512-CostsAreCapitalChargesWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCostsAreCapitalChargesWrongTypeRows\nMapCostsByRatingLevelMandatoryCheck@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-511-MissColumnActionFamilyCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRowsCostsByRatingLevel\nMapCostsByRatingLevelMandatoryCheck@MissingRatingLevel sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-511-MissColumnRatingLevelCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingRatingLevelRowsCostsByRatingLevel\nMapCostsByRatingLevelMandatoryCheck@MissingUnitProperty sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-511-MissColumnUnitPropertyCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingUnitPropertyRowsCostsByRatingLevel\nMapCostsByRatingLevelMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-511-MissColumnValueCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCostsByRatingLevel\nMapCostsByRatingLevelExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-510-NotExistingActionFamilyCostsByRatingLevel.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRowsCostsByRatingLevel\nUnitPropertyCostsByRatingLevelEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-513-UnitPropertyCostsByRatingLevelInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteUnitPropertyCostsByRatingLevelInvalidRangeRows\nSupplierCostTypeCheck@SupplierCostWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-512-SupplierCostWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteSupplierCostWrongTypeRows\nDurationTypeCheck@DurationWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-512-DurationWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteDurationWrongTypeRows\nIsLocalActionTypeCheck@IsLocalActionWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-512-IsLocalActionWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsLocalActionWrongTypeRows\nNeedsOutageTypeCheck@NeedsOutageWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-512-NeedsOutageWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNeedsOutageWrongTypeRows\nMapBudgetCategoriesMandatoryCheck@MissingActionFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-511-MissColumnActionFamilyBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingActionFamilyRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-511-MissColumnIndexBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-511-MissColumnValueBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsBudgetCategories\nMapBudgetCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-510-NotExistingActionFamilyBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingActionFamilyRowsBudgetCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateActionFamilies_MapCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/datasets/UpdateActionFamilies_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/2_510')]",
				"[concat(variables('factoryId'), '/datasets/2_511')]",
				"[concat(variables('factoryId'), '/datasets/2_512')]",
				"[concat(variables('factoryId'), '/datasets/2_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "UpdateActionFamilies_MapCostsByRatingLevel",
								"type": "DatasetReference"
							},
							"name": "ReadMapCostsByRatingLevel"
						},
						{
							"dataset": {
								"referenceName": "UpdateActionFamilies_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "MapCostsByRatingLevelKeyUnitPropertySplitByType"
						},
						{
							"name": "AggregateMapCostsByRatingLevelKeyUnitPropertySplitByfloat"
						},
						{
							"name": "MapCostsByRatingLevelKeyUnitPropertyUnionAllTypes"
						},
						{
							"name": "AggregateMapCostsByRatingLevelKeyUnitPropertyAllTypes"
						},
						{
							"name": "DeriveMapCostsByRatingLevelKeyUnitPropertyAllTypes"
						},
						{
							"name": "AggregateMapCostsByRatingLevelKeyRatingLevel"
						},
						{
							"name": "CostsByRatingLevelCleaning"
						},
						{
							"name": "CostsByRatingLevelUnion"
						},
						{
							"name": "CostsByRatingLevelSelect"
						},
						{
							"name": "AggregateMapBudgetCategoriesKeyIndex"
						},
						{
							"name": "BudgetCategoriesCleaning"
						},
						{
							"name": "BudgetCategoriesUnion"
						},
						{
							"name": "BudgetCategoriesSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tCostsAreCapitalCharges as string,\n\t\tIsLocalAction as string,\n\t\tNeedsOutage as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateActionFamilies\nsource(output(\n\t\tActionFamily as string,\n\t\tRatingLevel as string,\n\t\tUnitProperty as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCostsByRatingLevel\nsource(output(\n\t\tActionFamily as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapBudgetCategories\nReadUpdateActionFamilies select(mapColumn(\n\t\t{$id} = Name,\n\t\tAssetClass,\n\t\tCostsAreCapitalCharges,\n\t\tIsLocalAction,\n\t\tNeedsOutage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:ActionFamily;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapCostsByRatingLevel split(in(['SupplierCost','Duration'], UnitProperty),\n\tdisjoint: false) ~> MapCostsByRatingLevelKeyUnitPropertySplitByType@(MapCostsByRatingLevelKeyUnitPropertySplitByfloat)\nMapCostsByRatingLevelKeyUnitPropertySplitByType@MapCostsByRatingLevelKeyUnitPropertySplitByfloat aggregate(groupBy(ActionFamily,\n\t\tRatingLevel),\n\tCostsByRatingLevel = dropRight(dropLeft(toString(keyValues(collect(toString(UnitProperty)), collect(toFloat(Value)))) ,1), 1)) ~> AggregateMapCostsByRatingLevelKeyUnitPropertySplitByfloat\nAggregateMapCostsByRatingLevelKeyUnitPropertySplitByfloat union(byName: true)~> MapCostsByRatingLevelKeyUnitPropertyUnionAllTypes\nMapCostsByRatingLevelKeyUnitPropertyUnionAllTypes aggregate(groupBy(ActionFamily,\n\t\tRatingLevel),\n\tCostsByRatingLevel = collect(CostsByRatingLevel)) ~> AggregateMapCostsByRatingLevelKeyUnitPropertyAllTypes\nAggregateMapCostsByRatingLevelKeyUnitPropertyAllTypes derive(CostsByRatingLevel = '{' + concatWS(',', CostsByRatingLevel[1]) + '}') ~> DeriveMapCostsByRatingLevelKeyUnitPropertyAllTypes\nDeriveMapCostsByRatingLevelKeyUnitPropertyAllTypes aggregate(groupBy(ActionFamily),\n\tCostsByRatingLevel = toString(keyValues(collect(toString(RatingLevel)), collect(toString(CostsByRatingLevel))))) ~> AggregateMapCostsByRatingLevelKeyRatingLevel\nAggregateMapCostsByRatingLevelKeyRatingLevel derive(CostsByRatingLevel = replace(replace(replace(CostsByRatingLevel, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CostsByRatingLevelCleaning\nModelDefinition, CostsByRatingLevelCleaning join({$id} == ActionFamily,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CostsByRatingLevelUnion\nCostsByRatingLevelUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tCostsAreCapitalCharges,\n\t\tIsLocalAction,\n\t\tNeedsOutage,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCostsByRatingLevel\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CostsByRatingLevelSelect\nReadMapBudgetCategories aggregate(groupBy(ActionFamily),\n\tBudgetCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapBudgetCategoriesKeyIndex\nAggregateMapBudgetCategoriesKeyIndex derive(BudgetCategories = replace(replace(replace(BudgetCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> BudgetCategoriesCleaning\nCostsByRatingLevelSelect, BudgetCategoriesCleaning join({$id} == ActionFamily,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> BudgetCategoriesUnion\nBudgetCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tCostsAreCapitalCharges,\n\t\tIsLocalAction,\n\t\tNeedsOutage,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCostsByRatingLevel,\n\t\tBudgetCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BudgetCategoriesSelect\nBudgetCategoriesSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/UpdateActionFamilies_MapCostsByRatingLevel')]",
				"[concat(variables('factoryId'), '/datasets/UpdateActionFamilies_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionTasks_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateActionTasks"
						},
						{
							"dataset": {
								"referenceName": "TempInput_ActionTasksStatus",
								"type": "DatasetReference"
							},
							"name": "ActionTasksStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "12_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "12_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "12_512",
								"type": "DatasetReference"
							},
							"name": "WriteActionDurationPercentageWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "12_513",
								"type": "DatasetReference"
							},
							"name": "WriteActionDurationPercentageInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "12_512",
								"type": "DatasetReference"
							},
							"name": "WriteWorkforceFTEWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "12_513",
								"type": "DatasetReference"
							},
							"name": "WriteWorkforceFTEInvalidRangeRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInActionTasksStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullActionDurationPercentage"
						},
						{
							"name": "ActionDurationPercentageTypeCheck"
						},
						{
							"name": "ActionDurationPercentageRangeCheck"
						},
						{
							"name": "NonNullWorkforceFTE"
						},
						{
							"name": "WorkforceFTETypeCheck"
						},
						{
							"name": "WorkforceFTERangeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tSkill as string,\n\t\tActionDurationPercentage as string,\n\t\tWorkforceFTE as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateActionTasks\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionTasksStatus\nReadUpdateActionTasks, ActionTasksStatus exists(ReadUpdateActionTasks@Name == ActionTasksStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInActionTasksStatus\nReadUpdateActionTasks split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateActionTasks filter(not(isNull(ActionDurationPercentage))) ~> NonNullActionDurationPercentage\nNonNullActionDurationPercentage split(not(isInteger(ActionDurationPercentage)),\n\tdisjoint: false) ~> ActionDurationPercentageTypeCheck@(ActionDurationPercentageWrongType, ActionDurationPercentageCorrectType)\nActionDurationPercentageTypeCheck@ActionDurationPercentageCorrectType filter(or(toInteger(ActionDurationPercentage) < 0.0, toInteger(ActionDurationPercentage) > 100.0)) ~> ActionDurationPercentageRangeCheck\nReadUpdateActionTasks filter(not(isNull(WorkforceFTE))) ~> NonNullWorkforceFTE\nNonNullWorkforceFTE split(not(isFloat(WorkforceFTE)),\n\tdisjoint: false) ~> WorkforceFTETypeCheck@(WorkforceFTEWrongType, WorkforceFTECorrectType)\nWorkforceFTETypeCheck@WorkforceFTECorrectType filter(toFloat(WorkforceFTE) < 0.0) ~> WorkforceFTERangeCheck\nExistingNameInActionTasksStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-510-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-511-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nActionDurationPercentageTypeCheck@ActionDurationPercentageWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-512-ActionDurationPercentageWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActionDurationPercentageWrongTypeRows\nActionDurationPercentageRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-513-ActionDurationPercentageInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteActionDurationPercentageInvalidRangeRows\nWorkforceFTETypeCheck@WorkforceFTEWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-512-WorkforceFTEWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteWorkforceFTEWrongTypeRows\nWorkforceFTERangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['12-513-WorkforceFTEInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteWorkforceFTEInvalidRangeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_ActionTasksStatus')]",
				"[concat(variables('factoryId'), '/datasets/12_510')]",
				"[concat(variables('factoryId'), '/datasets/12_511')]",
				"[concat(variables('factoryId'), '/datasets/12_512')]",
				"[concat(variables('factoryId'), '/datasets/12_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateActionTasks_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "12-ActivitiesManagementHumanResources/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateActionTasks",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateActionTasks"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementHumanResourcesUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tSkill as string,\n\t\tActionDurationPercentage as string,\n\t\tWorkforceFTE as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateActionTasks\nReadUpdateActionTasks select(mapColumn(\n\t\t{$id} = Name,\n\t\tSkill,\n\t\tActionDurationPercentage,\n\t\tWorkforceFTE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:ActionTask;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_ActionTasks.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateActionTasks')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementHumanResourcesUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "AgingFamiliesStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateAgingFamilies_MapFamilyPairHillParameters",
								"type": "DatasetReference"
							},
							"name": "UpdateAgingFamiliesMapFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "UpdateAgingFamilies_MapMapReferenceCostOfFailure",
								"type": "DatasetReference"
							},
							"name": "UpdateAgingFamiliesMapMapReferenceCostOfFailure"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_520",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_523",
								"type": "DatasetReference"
							},
							"name": "WriteAgingMethodologyInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteMinimalAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteMaximalAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteFailureRateAtMinimalAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteFailureRateAtMaximalAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteExternalFailureRatePerYearWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_523",
								"type": "DatasetReference"
							},
							"name": "WriteExternalFailureRatePerYearInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteIsQuantityDiscreteWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteGFlagWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteAgingFailureDelayWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgentAgingFamilyRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingHillParametersRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_520",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingAgingFamilyRowsFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "1_523",
								"type": "DatasetReference"
							},
							"name": "WriteHillParametersFamilyPairHillParametersInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteAmplitudeHillWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteOffsetHillWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteSlopeHillWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteIsFailureTransmittedWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteIsCouplingActiveWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteIsAgingAfterDeathWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteMaintenanceIfOutOfOrderWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteShapeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteScaleWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteExpectedLifeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteFinancialCostOfFailureWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteEnvironmentalCostOfFailureWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteNetworkCostOfFailureWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingAgingFamilyRowsMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingHealthIndexRowsMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "1_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "1_520",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingAgingFamilyRowsMapReferenceCostOfFailure"
						},
						{
							"dataset": {
								"referenceName": "1_522",
								"type": "DatasetReference"
							},
							"name": "WriteMapReferenceCostOfFailureValueWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInAgingFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnumAgingMethodology"
						},
						{
							"name": "AgingMethodologyEnumCheck"
						},
						{
							"name": "NonNullMinimalAge"
						},
						{
							"name": "MinimalAgeTypeCheck"
						},
						{
							"name": "NonNullMaximalAge"
						},
						{
							"name": "MaximalAgeTypeCheck"
						},
						{
							"name": "NonNullFailureRateAtMinimalAge"
						},
						{
							"name": "FailureRateAtMinimalAgeTypeCheck"
						},
						{
							"name": "NonNullFailureRateAtMaximalAge"
						},
						{
							"name": "FailureRateAtMaximalAgeTypeCheck"
						},
						{
							"name": "NonNullExternalFailureRatePerYear"
						},
						{
							"name": "ExternalFailureRatePerYearTypeCheck"
						},
						{
							"name": "ExternalFailureRatePerYearRangeCheck"
						},
						{
							"name": "NonNullIsQuantityDiscrete"
						},
						{
							"name": "IsQuantityDiscreteTypeCheck"
						},
						{
							"name": "NonNullGFlag"
						},
						{
							"name": "GFlagTypeCheck"
						},
						{
							"name": "NonNullAgingFailureDelay"
						},
						{
							"name": "AgingFailureDelayTypeCheck"
						},
						{
							"name": "MapFamilyPairHillParametersMandatoryCheck"
						},
						{
							"name": "MapFamilyPairHillParametersExistenceCheck"
						},
						{
							"name": "NonNullEnumHillParametersFamilyPairHillParameters"
						},
						{
							"name": "HillParametersFamilyPairHillParametersEnumCheck"
						},
						{
							"name": "MapFamilyPairHillParametersSplitKeyValues"
						},
						{
							"name": "NonNullAmplitudeHill"
						},
						{
							"name": "AmplitudeHillTypeCheck"
						},
						{
							"name": "NonNullOffsetHill"
						},
						{
							"name": "OffsetHillTypeCheck"
						},
						{
							"name": "NonNullSlopeHill"
						},
						{
							"name": "SlopeHillTypeCheck"
						},
						{
							"name": "NonNullIsFailureTransmitted"
						},
						{
							"name": "IsFailureTransmittedTypeCheck"
						},
						{
							"name": "NonNullIsCouplingActive"
						},
						{
							"name": "IsCouplingActiveTypeCheck"
						},
						{
							"name": "NonNullIsAgingAfterDeath"
						},
						{
							"name": "IsAgingAfterDeathTypeCheck"
						},
						{
							"name": "NonNullMaintenanceIfOutOfOrder"
						},
						{
							"name": "MaintenanceIfOutOfOrderTypeCheck"
						},
						{
							"name": "NonNullShape"
						},
						{
							"name": "ShapeTypeCheck"
						},
						{
							"name": "NonNullScale"
						},
						{
							"name": "ScaleTypeCheck"
						},
						{
							"name": "NonNullExpectedLife"
						},
						{
							"name": "ExpectedLifeTypeCheck"
						},
						{
							"name": "NonNullFinancialCostOfFailure"
						},
						{
							"name": "FinancialCostOfFailureTypeCheck"
						},
						{
							"name": "NonNullEnvironmentalCostOfFailure"
						},
						{
							"name": "EnvironmentalCostOfFailureTypeCheck"
						},
						{
							"name": "NonNullNetworkCostOfFailure"
						},
						{
							"name": "NetworkCostOfFailureTypeCheck"
						},
						{
							"name": "MapMapReferenceCostOfFailureMandatoryCheck"
						},
						{
							"name": "MapMapReferenceCostOfFailureExistenceCheck"
						},
						{
							"name": "NonNullMapReferenceCostOfFailureValue"
						},
						{
							"name": "MapReferenceCostOfFailureValueTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAgingMethodology as string,\n\t\tMinimalAge as string,\n\t\tMaximalAge as string,\n\t\tFailureRateAtMinimalAge as string,\n\t\tFailureRateAtMaximalAge as string,\n\t\tExternalFailureRatePerYear as string,\n\t\tIsQuantityDiscrete as string,\n\t\tGFlag as string,\n\t\tAgingFailureDelay as string,\n\t\tIsAgingAfterDeath as string,\n\t\tMaintenanceIfOutOfOrder as string,\n\t\tShape as string,\n\t\tScale as string,\n\t\tExpectedLife as string,\n\t\tFinancialCostOfFailure as string,\n\t\tEnvironmentalCostOfFailure as string,\n\t\tNetworkCostOfFailure as string,\n\t\tExtraNL as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateAgingFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> AgingFamiliesStatus\nsource(output(\n\t\tAgingFamily as string,\n\t\tAgentAgingFamily as string,\n\t\tHillParameters as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateAgingFamiliesMapFamilyPairHillParameters\nsource(output(\n\t\tAgingFamily as string,\n\t\tHealthIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateAgingFamiliesMapMapReferenceCostOfFailure\nReadUpdateAgingFamilies, AgingFamiliesStatus exists(ReadUpdateAgingFamilies@Name == AgingFamiliesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInAgingFamiliesStatus\nReadUpdateAgingFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateAgingFamilies filter(not(isNull(AgingMethodology))) ~> NonNullEnumAgingMethodology\nNonNullEnumAgingMethodology filter(not(in(['Weibull', 'Gompertz', 'HealthScore'], AgingMethodology))) ~> AgingMethodologyEnumCheck\nReadUpdateAgingFamilies filter(not(isNull(MinimalAge))) ~> NonNullMinimalAge\nNonNullMinimalAge split(not(isInteger(MinimalAge)),\n\tdisjoint: false) ~> MinimalAgeTypeCheck@(MinimalAgeWrongType)\nReadUpdateAgingFamilies filter(not(isNull(MaximalAge))) ~> NonNullMaximalAge\nNonNullMaximalAge split(not(isInteger(MaximalAge)),\n\tdisjoint: false) ~> MaximalAgeTypeCheck@(MaximalAgeWrongType)\nReadUpdateAgingFamilies filter(not(isNull(FailureRateAtMinimalAge))) ~> NonNullFailureRateAtMinimalAge\nNonNullFailureRateAtMinimalAge split(not(isFloat(FailureRateAtMinimalAge)),\n\tdisjoint: false) ~> FailureRateAtMinimalAgeTypeCheck@(FailureRateAtMinimalAgeWrongType)\nReadUpdateAgingFamilies filter(not(isNull(FailureRateAtMaximalAge))) ~> NonNullFailureRateAtMaximalAge\nNonNullFailureRateAtMaximalAge split(not(isFloat(FailureRateAtMaximalAge)),\n\tdisjoint: false) ~> FailureRateAtMaximalAgeTypeCheck@(FailureRateAtMaximalAgeWrongType)\nReadUpdateAgingFamilies filter(not(isNull(ExternalFailureRatePerYear))) ~> NonNullExternalFailureRatePerYear\nNonNullExternalFailureRatePerYear split(not(isFloat(ExternalFailureRatePerYear)),\n\tdisjoint: false) ~> ExternalFailureRatePerYearTypeCheck@(ExternalFailureRatePerYearWrongType, ExternalFailureRatePerYearCorrectType)\nExternalFailureRatePerYearTypeCheck@ExternalFailureRatePerYearCorrectType filter(or(toFloat(ExternalFailureRatePerYear) < 0.0, toFloat(ExternalFailureRatePerYear) > 1.0)) ~> ExternalFailureRatePerYearRangeCheck\nReadUpdateAgingFamilies filter(not(isNull(IsQuantityDiscrete))) ~> NonNullIsQuantityDiscrete\nNonNullIsQuantityDiscrete split(not(isBoolean(IsQuantityDiscrete)),\n\tdisjoint: false) ~> IsQuantityDiscreteTypeCheck@(IsQuantityDiscreteWrongType)\nReadUpdateAgingFamilies filter(not(isNull(GFlag))) ~> NonNullGFlag\nNonNullGFlag split(not(isBoolean(GFlag)),\n\tdisjoint: false) ~> GFlagTypeCheck@(GFlagWrongType)\nReadUpdateAgingFamilies filter(not(isNull(AgingFailureDelay))) ~> NonNullAgingFailureDelay\nNonNullAgingFailureDelay split(not(isFloat(AgingFailureDelay)),\n\tdisjoint: false) ~> AgingFailureDelayTypeCheck@(AgingFailureDelayWrongType)\nUpdateAgingFamiliesMapFamilyPairHillParameters split(isNull(AgingFamily),\n\tisNull(AgentAgingFamily),\n\tisNull(HillParameters),\n\tisNull(Value),\n\tdisjoint: false) ~> MapFamilyPairHillParametersMandatoryCheck@(MissingAgingFamily, MissingAgentAgingFamily, MissingHillParameters, MissingValue)\nUpdateAgingFamiliesMapFamilyPairHillParameters, AgingFamiliesStatus exists(AgingFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapFamilyPairHillParametersExistenceCheck\nUpdateAgingFamiliesMapFamilyPairHillParameters filter(not(isNull(HillParameters))) ~> NonNullEnumHillParametersFamilyPairHillParameters\nNonNullEnumHillParametersFamilyPairHillParameters filter(not(in(['AmplitudeHill', 'OffsetHill', 'SlopeHill', 'IsFailureTransmitted', 'IsCouplingActive'], HillParameters))) ~> HillParametersFamilyPairHillParametersEnumCheck\nUpdateAgingFamiliesMapFamilyPairHillParameters split(HillParameters == 'AmplitudeHill',\n\tHillParameters == 'OffsetHill',\n\tHillParameters == 'SlopeHill',\n\tHillParameters == 'IsFailureTransmitted',\n\tHillParameters == 'IsCouplingActive',\n\tdisjoint: false) ~> MapFamilyPairHillParametersSplitKeyValues@(HillParametersAmplitudeHill, HillParametersOffsetHill, HillParametersSlopeHill, HillParametersIsFailureTransmitted, HillParametersIsCouplingActive)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersAmplitudeHill filter(not(isNull(Value))) ~> NonNullAmplitudeHill\nNonNullAmplitudeHill split(not(isFloat(Value)),\n\tdisjoint: false) ~> AmplitudeHillTypeCheck@(AmplitudeHillWrongType)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersOffsetHill filter(not(isNull(Value))) ~> NonNullOffsetHill\nNonNullOffsetHill split(not(isFloat(Value)),\n\tdisjoint: false) ~> OffsetHillTypeCheck@(OffsetHillWrongType)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersSlopeHill filter(not(isNull(Value))) ~> NonNullSlopeHill\nNonNullSlopeHill split(not(isInteger(Value)),\n\tdisjoint: false) ~> SlopeHillTypeCheck@(SlopeHillWrongType)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersIsFailureTransmitted filter(not(isNull(Value))) ~> NonNullIsFailureTransmitted\nNonNullIsFailureTransmitted split(not(isBoolean(Value)),\n\tdisjoint: false) ~> IsFailureTransmittedTypeCheck@(IsFailureTransmittedWrongType)\nMapFamilyPairHillParametersSplitKeyValues@HillParametersIsCouplingActive filter(not(isNull(Value))) ~> NonNullIsCouplingActive\nNonNullIsCouplingActive split(not(isBoolean(Value)),\n\tdisjoint: false) ~> IsCouplingActiveTypeCheck@(IsCouplingActiveWrongType)\nReadUpdateAgingFamilies filter(not(isNull(IsAgingAfterDeath))) ~> NonNullIsAgingAfterDeath\nNonNullIsAgingAfterDeath split(not(isBoolean(IsAgingAfterDeath)),\n\tdisjoint: false) ~> IsAgingAfterDeathTypeCheck@(IsAgingAfterDeathWrongType)\nReadUpdateAgingFamilies filter(not(isNull(MaintenanceIfOutOfOrder))) ~> NonNullMaintenanceIfOutOfOrder\nNonNullMaintenanceIfOutOfOrder split(not(isBoolean(MaintenanceIfOutOfOrder)),\n\tdisjoint: false) ~> MaintenanceIfOutOfOrderTypeCheck@(MaintenanceIfOutOfOrderWrongType)\nReadUpdateAgingFamilies filter(not(isNull(Shape))) ~> NonNullShape\nNonNullShape split(not(isFloat(Shape)),\n\tdisjoint: false) ~> ShapeTypeCheck@(ShapeWrongType)\nReadUpdateAgingFamilies filter(not(isNull(Scale))) ~> NonNullScale\nNonNullScale split(not(isFloat(Scale)),\n\tdisjoint: false) ~> ScaleTypeCheck@(ScaleWrongType)\nReadUpdateAgingFamilies filter(not(isNull(ExpectedLife))) ~> NonNullExpectedLife\nNonNullExpectedLife split(not(isInteger(ExpectedLife)),\n\tdisjoint: false) ~> ExpectedLifeTypeCheck@(ExpectedLifeWrongType)\nReadUpdateAgingFamilies filter(not(isNull(FinancialCostOfFailure))) ~> NonNullFinancialCostOfFailure\nNonNullFinancialCostOfFailure split(not(isFloat(FinancialCostOfFailure)),\n\tdisjoint: false) ~> FinancialCostOfFailureTypeCheck@(FinancialCostOfFailureWrongType)\nReadUpdateAgingFamilies filter(not(isNull(EnvironmentalCostOfFailure))) ~> NonNullEnvironmentalCostOfFailure\nNonNullEnvironmentalCostOfFailure split(not(isFloat(EnvironmentalCostOfFailure)),\n\tdisjoint: false) ~> EnvironmentalCostOfFailureTypeCheck@(EnvironmentalCostOfFailureWrongType)\nReadUpdateAgingFamilies filter(not(isNull(NetworkCostOfFailure))) ~> NonNullNetworkCostOfFailure\nNonNullNetworkCostOfFailure split(not(isFloat(NetworkCostOfFailure)),\n\tdisjoint: false) ~> NetworkCostOfFailureTypeCheck@(NetworkCostOfFailureWrongType)\nUpdateAgingFamiliesMapMapReferenceCostOfFailure split(isNull(AgingFamily),\n\tisNull(HealthIndex),\n\tisNull(Value),\n\tdisjoint: false) ~> MapMapReferenceCostOfFailureMandatoryCheck@(MissingAgingFamily, MissingHealthIndex, MissingValue)\nUpdateAgingFamiliesMapMapReferenceCostOfFailure, AgingFamiliesStatus exists(AgingFamily == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapMapReferenceCostOfFailureExistenceCheck\nUpdateAgingFamiliesMapMapReferenceCostOfFailure filter(not(isNull(Value))) ~> NonNullMapReferenceCostOfFailureValue\nNonNullMapReferenceCostOfFailureValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> MapReferenceCostOfFailureValueTypeCheck@(MapReferenceCostOfFailureValueWrongType)\nExistingNameInAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-520-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-521-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nAgingMethodologyEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-523-AgingMethodologyInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAgingMethodologyInvalidRangeRows\nMinimalAgeTypeCheck@MinimalAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-MinimalAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMinimalAgeWrongTypeRows\nMaximalAgeTypeCheck@MaximalAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-MaximalAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMaximalAgeWrongTypeRows\nFailureRateAtMinimalAgeTypeCheck@FailureRateAtMinimalAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-FailureRateAtMinimalAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteFailureRateAtMinimalAgeWrongTypeRows\nFailureRateAtMaximalAgeTypeCheck@FailureRateAtMaximalAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-FailureRateAtMaximalAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteFailureRateAtMaximalAgeWrongTypeRows\nExternalFailureRatePerYearTypeCheck@ExternalFailureRatePerYearWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-ExternalFailureRatePerYearWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteExternalFailureRatePerYearWrongTypeRows\nExternalFailureRatePerYearRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-523-ExternalFailureRatePerYearInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteExternalFailureRatePerYearInvalidRangeRows\nIsQuantityDiscreteTypeCheck@IsQuantityDiscreteWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-IsQuantityDiscreteWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsQuantityDiscreteWrongTypeRows\nGFlagTypeCheck@GFlagWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-GFlagWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteGFlagWrongTypeRows\nAgingFailureDelayTypeCheck@AgingFailureDelayWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-AgingFailureDelayWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAgingFailureDelayWrongTypeRows\nMapFamilyPairHillParametersMandatoryCheck@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-521-MissColumnAgingFamilyFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRowsFamilyPairHillParameters\nMapFamilyPairHillParametersMandatoryCheck@MissingAgentAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-521-MissColumnAgentAgingFamilyFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgentAgingFamilyRowsFamilyPairHillParameters\nMapFamilyPairHillParametersMandatoryCheck@MissingHillParameters sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-521-MissColumnHillParametersFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingHillParametersRowsFamilyPairHillParameters\nMapFamilyPairHillParametersMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-521-MissColumnValueFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsFamilyPairHillParameters\nMapFamilyPairHillParametersExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-520-NotExistingAgingFamilyFamilyPairHillParameters.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingAgingFamilyRowsFamilyPairHillParameters\nHillParametersFamilyPairHillParametersEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-523-HillParametersFamilyPairHillParametersInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteHillParametersFamilyPairHillParametersInvalidRangeRows\nAmplitudeHillTypeCheck@AmplitudeHillWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-AmplitudeHillWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAmplitudeHillWrongTypeRows\nOffsetHillTypeCheck@OffsetHillWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-OffsetHillWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteOffsetHillWrongTypeRows\nSlopeHillTypeCheck@SlopeHillWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-SlopeHillWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteSlopeHillWrongTypeRows\nIsFailureTransmittedTypeCheck@IsFailureTransmittedWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-IsFailureTransmittedWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsFailureTransmittedWrongTypeRows\nIsCouplingActiveTypeCheck@IsCouplingActiveWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-IsCouplingActiveWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsCouplingActiveWrongTypeRows\nIsAgingAfterDeathTypeCheck@IsAgingAfterDeathWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-IsAgingAfterDeathWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsAgingAfterDeathWrongTypeRows\nMaintenanceIfOutOfOrderTypeCheck@MaintenanceIfOutOfOrderWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-MaintenanceIfOutOfOrderWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMaintenanceIfOutOfOrderWrongTypeRows\nShapeTypeCheck@ShapeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-ShapeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteShapeWrongTypeRows\nScaleTypeCheck@ScaleWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-ScaleWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteScaleWrongTypeRows\nExpectedLifeTypeCheck@ExpectedLifeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-ExpectedLifeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteExpectedLifeWrongTypeRows\nFinancialCostOfFailureTypeCheck@FinancialCostOfFailureWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-FinancialCostOfFailureWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteFinancialCostOfFailureWrongTypeRows\nEnvironmentalCostOfFailureTypeCheck@EnvironmentalCostOfFailureWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-EnvironmentalCostOfFailureWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEnvironmentalCostOfFailureWrongTypeRows\nNetworkCostOfFailureTypeCheck@NetworkCostOfFailureWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-NetworkCostOfFailureWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNetworkCostOfFailureWrongTypeRows\nMapMapReferenceCostOfFailureMandatoryCheck@MissingAgingFamily sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-521-MissColumnAgingFamilyMapReferenceCostOfFailure.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingAgingFamilyRowsMapReferenceCostOfFailure\nMapMapReferenceCostOfFailureMandatoryCheck@MissingHealthIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-521-MissColumnHealthIndexMapReferenceCostOfFailure.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingHealthIndexRowsMapReferenceCostOfFailure\nMapMapReferenceCostOfFailureMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-521-MissColumnValueMapReferenceCostOfFailure.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsMapReferenceCostOfFailure\nMapMapReferenceCostOfFailureExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-520-NotExistingAgingFamilyMapReferenceCostOfFailure.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingAgingFamilyRowsMapReferenceCostOfFailure\nMapReferenceCostOfFailureValueTypeCheck@MapReferenceCostOfFailureValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-522-MapReferenceCostOfFailureValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMapReferenceCostOfFailureValueWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamilies_MapFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamilies_MapMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/datasets/1_520')]",
				"[concat(variables('factoryId'), '/datasets/1_521')]",
				"[concat(variables('factoryId'), '/datasets/1_523')]",
				"[concat(variables('factoryId'), '/datasets/1_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateAgingFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateAgingFamilies"
						},
						{
							"dataset": {
								"referenceName": "UpdateAgingFamilies_MapFamilyPairHillParameters",
								"type": "DatasetReference"
							},
							"name": "ReadMapFamilyPairHillParameters"
						},
						{
							"dataset": {
								"referenceName": "UpdateAgingFamilies_MapMapReferenceCostOfFailure",
								"type": "DatasetReference"
							},
							"name": "ReadMapMapReferenceCostOfFailure"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "MapFamilyPairHillParametersKeyHillParametersSplitByType"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyHillParametersSplitByfloat"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyHillParametersSplitByinteger"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyHillParametersSplitByboolean"
						},
						{
							"name": "MapFamilyPairHillParametersKeyHillParametersUnionAllTypes"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyHillParametersAllTypes"
						},
						{
							"name": "DeriveMapFamilyPairHillParametersKeyHillParametersAllTypes"
						},
						{
							"name": "AggregateMapFamilyPairHillParametersKeyAgentAgingFamily"
						},
						{
							"name": "FamilyPairHillParametersCleaning"
						},
						{
							"name": "FamilyPairHillParametersUnion"
						},
						{
							"name": "FamilyPairHillParametersSelect"
						},
						{
							"name": "AggregateMapMapReferenceCostOfFailureKeyHealthIndex"
						},
						{
							"name": "MapReferenceCostOfFailureCleaning"
						},
						{
							"name": "MapReferenceCostOfFailureUnion"
						},
						{
							"name": "MapReferenceCostOfFailureSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAgingMethodology as string,\n\t\tMinimalAge as string,\n\t\tMaximalAge as string,\n\t\tFailureRateAtMinimalAge as string,\n\t\tFailureRateAtMaximalAge as string,\n\t\tExternalFailureRatePerYear as string,\n\t\tIsQuantityDiscrete as string,\n\t\tGFlag as string,\n\t\tAgingFailureDelay as string,\n\t\tIsAgingAfterDeath as string,\n\t\tMaintenanceIfOutOfOrder as string,\n\t\tShape as string,\n\t\tScale as string,\n\t\tExpectedLife as string,\n\t\tFinancialCostOfFailure as string,\n\t\tEnvironmentalCostOfFailure as string,\n\t\tNetworkCostOfFailure as string,\n\t\tExtraNL as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateAgingFamilies\nsource(output(\n\t\tAgingFamily as string,\n\t\tAgentAgingFamily as string,\n\t\tHillParameters as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapFamilyPairHillParameters\nsource(output(\n\t\tAgingFamily as string,\n\t\tHealthIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapMapReferenceCostOfFailure\nReadUpdateAgingFamilies select(mapColumn(\n\t\t{$id} = Name,\n\t\tAgingMethodology,\n\t\t{EquipmentAgingLawParameters.MinimalAge} = MinimalAge,\n\t\t{EquipmentAgingLawParameters.MaximalAge} = MaximalAge,\n\t\t{EquipmentAgingLawParameters.FailureRateAtMinimalAge} = FailureRateAtMinimalAge,\n\t\t{EquipmentAgingLawParameters.FailureRateAtMaximalAge} = FailureRateAtMaximalAge,\n\t\tExternalFailureRatePerYear,\n\t\tIsQuantityDiscrete,\n\t\tGFlag,\n\t\tAgingFailureDelay,\n\t\tIsAgingAfterDeath,\n\t\tMaintenanceIfOutOfOrder,\n\t\t{EquipmentAgingLawParameters.Shape} = Shape,\n\t\t{EquipmentAgingLawParameters.Scale} = Scale,\n\t\tExpectedLife,\n\t\tFinancialCostOfFailure,\n\t\tEnvironmentalCostOfFailure,\n\t\tNetworkCostOfFailure,\n\t\tExtraNL\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:AgingFamily;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapFamilyPairHillParameters split(in(['AmplitudeHill','OffsetHill'], HillParameters),\n\tin(['SlopeHill'], HillParameters),\n\tin(['IsFailureTransmitted','IsCouplingActive'], HillParameters),\n\tdisjoint: false) ~> MapFamilyPairHillParametersKeyHillParametersSplitByType@(MapFamilyPairHillParametersKeyHillParametersSplitByfloat, MapFamilyPairHillParametersKeyHillParametersSplitByinteger, MapFamilyPairHillParametersKeyHillParametersSplitByboolean)\nMapFamilyPairHillParametersKeyHillParametersSplitByType@MapFamilyPairHillParametersKeyHillParametersSplitByfloat aggregate(groupBy(AgingFamily,\n\t\tAgentAgingFamily),\n\tFamilyPairHillParameters = dropRight(dropLeft(toString(keyValues(collect(toString(HillParameters)), collect(toFloat(Value)))) ,1), 1)) ~> AggregateMapFamilyPairHillParametersKeyHillParametersSplitByfloat\nMapFamilyPairHillParametersKeyHillParametersSplitByType@MapFamilyPairHillParametersKeyHillParametersSplitByinteger aggregate(groupBy(AgingFamily,\n\t\tAgentAgingFamily),\n\tFamilyPairHillParameters = dropRight(dropLeft(toString(keyValues(collect(toString(HillParameters)), collect(toInteger(Value)))) ,1), 1)) ~> AggregateMapFamilyPairHillParametersKeyHillParametersSplitByinteger\nMapFamilyPairHillParametersKeyHillParametersSplitByType@MapFamilyPairHillParametersKeyHillParametersSplitByboolean aggregate(groupBy(AgingFamily,\n\t\tAgentAgingFamily),\n\tFamilyPairHillParameters = dropRight(dropLeft(toString(keyValues(collect(toString(HillParameters)), collect(toBoolean(Value)))) ,1), 1)) ~> AggregateMapFamilyPairHillParametersKeyHillParametersSplitByboolean\nAggregateMapFamilyPairHillParametersKeyHillParametersSplitByfloat, AggregateMapFamilyPairHillParametersKeyHillParametersSplitByinteger, AggregateMapFamilyPairHillParametersKeyHillParametersSplitByboolean union(byName: true)~> MapFamilyPairHillParametersKeyHillParametersUnionAllTypes\nMapFamilyPairHillParametersKeyHillParametersUnionAllTypes aggregate(groupBy(AgingFamily,\n\t\tAgentAgingFamily),\n\tFamilyPairHillParameters = collect(FamilyPairHillParameters)) ~> AggregateMapFamilyPairHillParametersKeyHillParametersAllTypes\nAggregateMapFamilyPairHillParametersKeyHillParametersAllTypes derive(FamilyPairHillParameters = '{' + concatWS(',', FamilyPairHillParameters[1], FamilyPairHillParameters[2], FamilyPairHillParameters[3]) + '}') ~> DeriveMapFamilyPairHillParametersKeyHillParametersAllTypes\nDeriveMapFamilyPairHillParametersKeyHillParametersAllTypes aggregate(groupBy(AgingFamily),\n\tFamilyPairHillParameters = toString(keyValues(collect(toString(AgentAgingFamily)), collect(toString(FamilyPairHillParameters))))) ~> AggregateMapFamilyPairHillParametersKeyAgentAgingFamily\nAggregateMapFamilyPairHillParametersKeyAgentAgingFamily derive(FamilyPairHillParameters = replace(replace(replace(FamilyPairHillParameters, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> FamilyPairHillParametersCleaning\nModelDefinition, FamilyPairHillParametersCleaning join({$id} == AgingFamily,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> FamilyPairHillParametersUnion\nFamilyPairHillParametersUnion select(mapColumn(\n\t\t{$id},\n\t\tAgingMethodology,\n\t\t{EquipmentAgingLawParameters.MinimalAge},\n\t\t{EquipmentAgingLawParameters.MaximalAge},\n\t\t{EquipmentAgingLawParameters.FailureRateAtMinimalAge},\n\t\t{EquipmentAgingLawParameters.FailureRateAtMaximalAge},\n\t\tExternalFailureRatePerYear,\n\t\tIsQuantityDiscrete,\n\t\tGFlag,\n\t\tAgingFailureDelay,\n\t\tIsAgingAfterDeath,\n\t\tMaintenanceIfOutOfOrder,\n\t\t{EquipmentAgingLawParameters.Shape},\n\t\t{EquipmentAgingLawParameters.Scale},\n\t\tExpectedLife,\n\t\tFinancialCostOfFailure,\n\t\tEnvironmentalCostOfFailure,\n\t\tNetworkCostOfFailure,\n\t\tExtraNL,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tFamilyPairHillParameters\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FamilyPairHillParametersSelect\nReadMapMapReferenceCostOfFailure aggregate(groupBy(AgingFamily),\n\tMapReferenceCostOfFailure = toString(keyValues(collect(toString(HealthIndex)), collect(toFloat(Value))))) ~> AggregateMapMapReferenceCostOfFailureKeyHealthIndex\nAggregateMapMapReferenceCostOfFailureKeyHealthIndex derive(MapReferenceCostOfFailure = replace(replace(replace(MapReferenceCostOfFailure, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> MapReferenceCostOfFailureCleaning\nFamilyPairHillParametersSelect, MapReferenceCostOfFailureCleaning join({$id} == AgingFamily,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> MapReferenceCostOfFailureUnion\nMapReferenceCostOfFailureUnion select(mapColumn(\n\t\t{$id},\n\t\tAgingMethodology,\n\t\t{EquipmentAgingLawParameters.MinimalAge},\n\t\t{EquipmentAgingLawParameters.MaximalAge},\n\t\t{EquipmentAgingLawParameters.FailureRateAtMinimalAge},\n\t\t{EquipmentAgingLawParameters.FailureRateAtMaximalAge},\n\t\tExternalFailureRatePerYear,\n\t\tIsQuantityDiscrete,\n\t\tGFlag,\n\t\tAgingFailureDelay,\n\t\tIsAgingAfterDeath,\n\t\tMaintenanceIfOutOfOrder,\n\t\t{EquipmentAgingLawParameters.Shape},\n\t\t{EquipmentAgingLawParameters.Scale},\n\t\tExpectedLife,\n\t\tFinancialCostOfFailure,\n\t\tEnvironmentalCostOfFailure,\n\t\tNetworkCostOfFailure,\n\t\tExtraNL,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tFamilyPairHillParameters,\n\t\tMapReferenceCostOfFailure\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MapReferenceCostOfFailureSelect\nMapReferenceCostOfFailureSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_AgingFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamilies')]",
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamilies_MapFamilyPairHillParameters')]",
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamilies_MapMapReferenceCostOfFailure')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamily_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "5-Finance/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateAgingFamily",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateAgingFamily"
						},
						{
							"dataset": {
								"referenceName": "TempInput_AgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "AgingFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "5_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "5_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "5_512",
								"type": "DatasetReference"
							},
							"name": "WriteRawInvestmentWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "5_512",
								"type": "DatasetReference"
							},
							"name": "WriteLifeSpanWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInAgingFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullRawInvestment"
						},
						{
							"name": "RawInvestmentTypeCheck"
						},
						{
							"name": "NonNullLifeSpan"
						},
						{
							"name": "LifeSpanTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tRawInvestment as string,\n\t\tLifeSpan as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateAgingFamily\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> AgingFamiliesStatus\nReadUpdateAgingFamily, AgingFamiliesStatus exists(ReadUpdateAgingFamily@Name == AgingFamiliesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInAgingFamiliesStatus\nReadUpdateAgingFamily split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateAgingFamily filter(not(isNull(RawInvestment))) ~> NonNullRawInvestment\nNonNullRawInvestment split(not(isFloat(RawInvestment)),\n\tdisjoint: false) ~> RawInvestmentTypeCheck@(RawInvestmentWrongType)\nReadUpdateAgingFamily filter(not(isNull(LifeSpan))) ~> NonNullLifeSpan\nNonNullLifeSpan split(not(isInteger(LifeSpan)),\n\tdisjoint: false) ~> LifeSpanTypeCheck@(LifeSpanWrongType)\nExistingNameInAgingFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['5-510-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['5-511-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nRawInvestmentTypeCheck@RawInvestmentWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['5-512-RawInvestmentWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteRawInvestmentWrongTypeRows\nLifeSpanTypeCheck@LifeSpanWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['5-512-LifeSpanWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteLifeSpanWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamily')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_AgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/5_510')]",
				"[concat(variables('factoryId'), '/datasets/5_511')]",
				"[concat(variables('factoryId'), '/datasets/5_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateAgingFamily_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "5-Finance/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateAgingFamily",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateAgingFamily"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FinanceUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tRawInvestment as string,\n\t\tLifeSpan as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateAgingFamily\nReadUpdateAgingFamily select(mapColumn(\n\t\t{$id} = Name,\n\t\tRawInvestment,\n\t\tLifeSpan\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:AgingFamily;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_AgingFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateAgingFamily')]",
				"[concat(variables('factoryId'), '/datasets/FinanceUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateBudgets_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3-Budgets/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateBudgets",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateBudgets"
						},
						{
							"dataset": {
								"referenceName": "TempInput_BudgetsStatus",
								"type": "DatasetReference"
							},
							"name": "BudgetsStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateBudgets_MapCatKeyLabels",
								"type": "DatasetReference"
							},
							"name": "UpdateBudgetsMapCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "UpdateBudgets_MapAvailableQuantityByYear",
								"type": "DatasetReference"
							},
							"name": "UpdateBudgetsMapAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "UpdateBudgets_MapMinimalQuantityLevelByYear",
								"type": "DatasetReference"
							},
							"name": "UpdateBudgetsMapMinimalQuantityLevelByYear"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "3_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "3_513",
								"type": "DatasetReference"
							},
							"name": "WriteCostTypeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference"
							},
							"name": "WriteConstrainedWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingBudgetRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "3_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingBudgetRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingBudgetRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingYearRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "3_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingBudgetRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference"
							},
							"name": "WriteAvailableQuantityByYearValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingBudgetRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingYearRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "3_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "3_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingBudgetRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference"
							},
							"name": "WriteMinimalQuantityLevelByYearValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference"
							},
							"name": "WriteCostRateWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "3_512",
								"type": "DatasetReference"
							},
							"name": "WriteRankWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInBudgetsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnumCostType"
						},
						{
							"name": "CostTypeEnumCheck"
						},
						{
							"name": "NonNullConstrained"
						},
						{
							"name": "ConstrainedTypeCheck"
						},
						{
							"name": "MapCatKeyLabelsMandatoryCheck"
						},
						{
							"name": "MapCatKeyLabelsExistenceCheck"
						},
						{
							"name": "MapAvailableQuantityByYearMandatoryCheck"
						},
						{
							"name": "MapAvailableQuantityByYearExistenceCheck"
						},
						{
							"name": "NonNullAvailableQuantityByYearValue"
						},
						{
							"name": "AvailableQuantityByYearValueTypeCheck"
						},
						{
							"name": "MapMinimalQuantityLevelByYearMandatoryCheck"
						},
						{
							"name": "MapMinimalQuantityLevelByYearExistenceCheck"
						},
						{
							"name": "NonNullMinimalQuantityLevelByYearValue"
						},
						{
							"name": "MinimalQuantityLevelByYearValueTypeCheck"
						},
						{
							"name": "NonNullCostRate"
						},
						{
							"name": "CostRateTypeCheck"
						},
						{
							"name": "NonNullRank"
						},
						{
							"name": "RankTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tCostType as string,\n\t\tConstrained as string,\n\t\tCostRate as string,\n\t\tRank as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateBudgets\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> BudgetsStatus\nsource(output(\n\t\tBudget as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateBudgetsMapCatKeyLabels\nsource(output(\n\t\tBudget as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateBudgetsMapAvailableQuantityByYear\nsource(output(\n\t\tBudget as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateBudgetsMapMinimalQuantityLevelByYear\nReadUpdateBudgets, BudgetsStatus exists(ReadUpdateBudgets@Name == BudgetsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInBudgetsStatus\nReadUpdateBudgets split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateBudgets filter(not(isNull(CostType))) ~> NonNullEnumCostType\nNonNullEnumCostType filter(not(in(['Suppliers', 'Workforce'], CostType))) ~> CostTypeEnumCheck\nReadUpdateBudgets filter(not(isNull(Constrained))) ~> NonNullConstrained\nNonNullConstrained split(not(isBoolean(Constrained)),\n\tdisjoint: false) ~> ConstrainedTypeCheck@(ConstrainedWrongType)\nUpdateBudgetsMapCatKeyLabels split(isNull(Budget),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCatKeyLabelsMandatoryCheck@(MissingBudget, MissingIndex, MissingValue)\nUpdateBudgetsMapCatKeyLabels, BudgetsStatus exists(Budget == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCatKeyLabelsExistenceCheck\nUpdateBudgetsMapAvailableQuantityByYear split(isNull(Budget),\n\tisNull(Year),\n\tisNull(Value),\n\tdisjoint: false) ~> MapAvailableQuantityByYearMandatoryCheck@(MissingBudget, MissingYear, MissingValue)\nUpdateBudgetsMapAvailableQuantityByYear, BudgetsStatus exists(Budget == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapAvailableQuantityByYearExistenceCheck\nUpdateBudgetsMapAvailableQuantityByYear filter(not(isNull(Value))) ~> NonNullAvailableQuantityByYearValue\nNonNullAvailableQuantityByYearValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> AvailableQuantityByYearValueTypeCheck@(AvailableQuantityByYearValueWrongType)\nUpdateBudgetsMapMinimalQuantityLevelByYear split(isNull(Budget),\n\tisNull(Year),\n\tisNull(Value),\n\tdisjoint: false) ~> MapMinimalQuantityLevelByYearMandatoryCheck@(MissingBudget, MissingYear, MissingValue)\nUpdateBudgetsMapMinimalQuantityLevelByYear, BudgetsStatus exists(Budget == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapMinimalQuantityLevelByYearExistenceCheck\nUpdateBudgetsMapMinimalQuantityLevelByYear filter(not(isNull(Value))) ~> NonNullMinimalQuantityLevelByYearValue\nNonNullMinimalQuantityLevelByYearValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> MinimalQuantityLevelByYearValueTypeCheck@(MinimalQuantityLevelByYearValueWrongType)\nReadUpdateBudgets filter(not(isNull(CostRate))) ~> NonNullCostRate\nNonNullCostRate split(not(isFloat(CostRate)),\n\tdisjoint: false) ~> CostRateTypeCheck@(CostRateWrongType)\nReadUpdateBudgets filter(not(isNull(Rank))) ~> NonNullRank\nNonNullRank split(not(isInteger(Rank)),\n\tdisjoint: false) ~> RankTypeCheck@(RankWrongType)\nExistingNameInBudgetsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-510-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nCostTypeEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-513-CostTypeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCostTypeInvalidRangeRows\nConstrainedTypeCheck@ConstrainedWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-512-ConstrainedWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteConstrainedWrongTypeRows\nMapCatKeyLabelsMandatoryCheck@MissingBudget sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnBudgetCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingBudgetRowsCatKeyLabels\nMapCatKeyLabelsMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnIndexCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsCatKeyLabels\nMapCatKeyLabelsMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnValueCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCatKeyLabels\nMapCatKeyLabelsExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-510-NotExistingBudgetCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingBudgetRowsCatKeyLabels\nMapAvailableQuantityByYearMandatoryCheck@MissingBudget sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnBudgetAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingBudgetRowsAvailableQuantityByYear\nMapAvailableQuantityByYearMandatoryCheck@MissingYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnYearAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingYearRowsAvailableQuantityByYear\nMapAvailableQuantityByYearMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnValueAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsAvailableQuantityByYear\nMapAvailableQuantityByYearExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-510-NotExistingBudgetAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingBudgetRowsAvailableQuantityByYear\nAvailableQuantityByYearValueTypeCheck@AvailableQuantityByYearValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-512-AvailableQuantityByYearValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAvailableQuantityByYearValueWrongTypeRows\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingBudget sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnBudgetMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingBudgetRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnYearMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingYearRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-511-MissColumnValueMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-510-NotExistingBudgetMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingBudgetRowsMinimalQuantityLevelByYear\nMinimalQuantityLevelByYearValueTypeCheck@MinimalQuantityLevelByYearValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-512-MinimalQuantityLevelByYearValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMinimalQuantityLevelByYearValueWrongTypeRows\nCostRateTypeCheck@CostRateWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-512-CostRateWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCostRateWrongTypeRows\nRankTypeCheck@RankWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3-512-RankWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteRankWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_BudgetsStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets_MapCatKeyLabels')]",
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets_MapAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets_MapMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/datasets/3_510')]",
				"[concat(variables('factoryId'), '/datasets/3_511')]",
				"[concat(variables('factoryId'), '/datasets/3_513')]",
				"[concat(variables('factoryId'), '/datasets/3_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateBudgets_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "3-Budgets/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateBudgets",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateBudgets"
						},
						{
							"dataset": {
								"referenceName": "UpdateBudgets_MapCatKeyLabels",
								"type": "DatasetReference"
							},
							"name": "ReadMapCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "UpdateBudgets_MapAvailableQuantityByYear",
								"type": "DatasetReference"
							},
							"name": "ReadMapAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "UpdateBudgets_MapMinimalQuantityLevelByYear",
								"type": "DatasetReference"
							},
							"name": "ReadMapMinimalQuantityLevelByYear"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "BudgetsUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapCatKeyLabelsKeyIndex"
						},
						{
							"name": "CatKeyLabelsCleaning"
						},
						{
							"name": "CatKeyLabelsUnion"
						},
						{
							"name": "CatKeyLabelsSelect"
						},
						{
							"name": "AggregateMapAvailableQuantityByYearKeyYear"
						},
						{
							"name": "AvailableQuantityByYearCleaning"
						},
						{
							"name": "AvailableQuantityByYearUnion"
						},
						{
							"name": "AvailableQuantityByYearSelect"
						},
						{
							"name": "AggregateMapMinimalQuantityLevelByYearKeyYear"
						},
						{
							"name": "MinimalQuantityLevelByYearCleaning"
						},
						{
							"name": "MinimalQuantityLevelByYearUnion"
						},
						{
							"name": "MinimalQuantityLevelByYearSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tCostType as string,\n\t\tConstrained as string,\n\t\tCostRate as string,\n\t\tRank as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateBudgets\nsource(output(\n\t\tBudget as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCatKeyLabels\nsource(output(\n\t\tBudget as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapAvailableQuantityByYear\nsource(output(\n\t\tBudget as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapMinimalQuantityLevelByYear\nReadUpdateBudgets select(mapColumn(\n\t\t{$id} = Name,\n\t\tCostType,\n\t\tConstrained,\n\t\tCostRate,\n\t\tRank\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Budget;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapCatKeyLabels aggregate(groupBy(Budget),\n\tCatKeyLabels = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapCatKeyLabelsKeyIndex\nAggregateMapCatKeyLabelsKeyIndex derive(CatKeyLabels = replace(replace(replace(CatKeyLabels, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CatKeyLabelsCleaning\nModelDefinition, CatKeyLabelsCleaning join({$id} == Budget,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CatKeyLabelsUnion\nCatKeyLabelsUnion select(mapColumn(\n\t\t{$id},\n\t\tCostType,\n\t\tConstrained,\n\t\tCostRate,\n\t\tRank,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CatKeyLabelsSelect\nReadMapAvailableQuantityByYear aggregate(groupBy(Budget),\n\tAvailableQuantityByYear = toString(keyValues(collect(toString(Year)), collect(toFloat(Value))))) ~> AggregateMapAvailableQuantityByYearKeyYear\nAggregateMapAvailableQuantityByYearKeyYear derive(AvailableQuantityByYear = replace(replace(replace(AvailableQuantityByYear, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> AvailableQuantityByYearCleaning\nCatKeyLabelsSelect, AvailableQuantityByYearCleaning join({$id} == Budget,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> AvailableQuantityByYearUnion\nAvailableQuantityByYearUnion select(mapColumn(\n\t\t{$id},\n\t\tCostType,\n\t\tConstrained,\n\t\tCostRate,\n\t\tRank,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels,\n\t\tAvailableQuantityByYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AvailableQuantityByYearSelect\nReadMapMinimalQuantityLevelByYear aggregate(groupBy(Budget),\n\tMinimalQuantityLevelByYear = toString(keyValues(collect(toString(Year)), collect(toFloat(Value))))) ~> AggregateMapMinimalQuantityLevelByYearKeyYear\nAggregateMapMinimalQuantityLevelByYearKeyYear derive(MinimalQuantityLevelByYear = replace(replace(replace(MinimalQuantityLevelByYear, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> MinimalQuantityLevelByYearCleaning\nAvailableQuantityByYearSelect, MinimalQuantityLevelByYearCleaning join({$id} == Budget,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> MinimalQuantityLevelByYearUnion\nMinimalQuantityLevelByYearUnion select(mapColumn(\n\t\t{$id},\n\t\tCostType,\n\t\tConstrained,\n\t\tCostRate,\n\t\tRank,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels,\n\t\tAvailableQuantityByYear,\n\t\tMinimalQuantityLevelByYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MinimalQuantityLevelByYearSelect\nMinimalQuantityLevelByYearSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Budgets.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets')]",
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets_MapCatKeyLabels')]",
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets_MapAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/datasets/UpdateBudgets_MapMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/datasets/BudgetsUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateCriteria_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateCriteria"
						},
						{
							"dataset": {
								"referenceName": "TempInput_CriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "CriteriaStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateCriteria_MapValueAsString",
								"type": "DatasetReference"
							},
							"name": "UpdateCriteriaMapValueAsString"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_520",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_523",
								"type": "DatasetReference"
							},
							"name": "WriteOperatorInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "2_522",
								"type": "DatasetReference"
							},
							"name": "WriteThresholdWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_522",
								"type": "DatasetReference"
							},
							"name": "WriteValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCriterionRowsValueAsString"
						},
						{
							"dataset": {
								"referenceName": "2_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsValueAsString"
						},
						{
							"dataset": {
								"referenceName": "2_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsValueAsString"
						},
						{
							"dataset": {
								"referenceName": "2_520",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingCriterionRowsValueAsString"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInCriteriaStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnumOperator"
						},
						{
							"name": "OperatorEnumCheck"
						},
						{
							"name": "NonNullThreshold"
						},
						{
							"name": "ThresholdTypeCheck"
						},
						{
							"name": "NonNullValue"
						},
						{
							"name": "ValueTypeCheck"
						},
						{
							"name": "MapValueAsStringMandatoryCheck"
						},
						{
							"name": "MapValueAsStringExistenceCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tEquipmentComponentAttribute as string,\n\t\tOperator as string,\n\t\tThreshold as string,\n\t\tReferenceAttribute as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateCriteria\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CriteriaStatus\nsource(output(\n\t\tCriterion as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateCriteriaMapValueAsString\nReadUpdateCriteria, CriteriaStatus exists(ReadUpdateCriteria@Name == CriteriaStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInCriteriaStatus\nReadUpdateCriteria split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateCriteria filter(not(isNull(Operator))) ~> NonNullEnumOperator\nNonNullEnumOperator filter(not(in(['None', 'LT', 'GT', 'LEQ', 'GEQ'], Operator))) ~> OperatorEnumCheck\nReadUpdateCriteria filter(not(isNull(Threshold))) ~> NonNullThreshold\nNonNullThreshold split(not(isFloat(Threshold)),\n\tdisjoint: false) ~> ThresholdTypeCheck@(ThresholdWrongType)\nReadUpdateCriteria filter(not(isNull(Value))) ~> NonNullValue\nNonNullValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> ValueTypeCheck@(ValueWrongType)\nUpdateCriteriaMapValueAsString split(isNull(Criterion),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapValueAsStringMandatoryCheck@(MissingCriterion, MissingIndex, MissingValue)\nUpdateCriteriaMapValueAsString, CriteriaStatus exists(Criterion == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapValueAsStringExistenceCheck\nExistingNameInCriteriaStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-520-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-521-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nOperatorEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-523-OperatorInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteOperatorInvalidRangeRows\nThresholdTypeCheck@ThresholdWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-522-ThresholdWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteThresholdWrongTypeRows\nValueTypeCheck@ValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-522-ValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteValueWrongTypeRows\nMapValueAsStringMandatoryCheck@MissingCriterion sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-521-MissColumnCriterionValueAsString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCriterionRowsValueAsString\nMapValueAsStringMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-521-MissColumnIndexValueAsString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsValueAsString\nMapValueAsStringMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-521-MissColumnValueValueAsString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsValueAsString\nMapValueAsStringExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-520-NotExistingCriterionValueAsString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingCriterionRowsValueAsString"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateCriteria')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_CriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateCriteria_MapValueAsString')]",
				"[concat(variables('factoryId'), '/datasets/2_520')]",
				"[concat(variables('factoryId'), '/datasets/2_521')]",
				"[concat(variables('factoryId'), '/datasets/2_523')]",
				"[concat(variables('factoryId'), '/datasets/2_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateCriteria_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateCriteria",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateCriteria"
						},
						{
							"dataset": {
								"referenceName": "UpdateCriteria_MapValueAsString",
								"type": "DatasetReference"
							},
							"name": "ReadMapValueAsString"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapValueAsStringKeyIndex"
						},
						{
							"name": "ValueAsStringCleaning"
						},
						{
							"name": "ValueAsStringUnion"
						},
						{
							"name": "ValueAsStringSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tEquipmentComponentAttribute as string,\n\t\tOperator as string,\n\t\tThreshold as string,\n\t\tReferenceAttribute as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateCriteria\nsource(output(\n\t\tCriterion as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapValueAsString\nReadUpdateCriteria select(mapColumn(\n\t\t{$id} = Name,\n\t\tEquipmentComponentAttribute,\n\t\tOperator,\n\t\tThreshold,\n\t\tReferenceAttribute,\n\t\tValue\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Criterion;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapValueAsString aggregate(groupBy(Criterion),\n\tValueAsString = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapValueAsStringKeyIndex\nAggregateMapValueAsStringKeyIndex derive(ValueAsString = replace(replace(replace(ValueAsString, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> ValueAsStringCleaning\nModelDefinition, ValueAsStringCleaning join({$id} == Criterion,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> ValueAsStringUnion\nValueAsStringUnion select(mapColumn(\n\t\t{$id},\n\t\tEquipmentComponentAttribute,\n\t\tOperator,\n\t\tThreshold,\n\t\tReferenceAttribute,\n\t\tValue,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tValueAsString\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ValueAsStringSelect\nValueAsStringSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Criteria.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateCriteria')]",
				"[concat(variables('factoryId'), '/datasets/UpdateCriteria_MapValueAsString')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponentsAgingFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Status"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "MainStatus"
						},
						{
							"dataset": {
								"referenceName": "EquipmentComponentEquipmentComponentsAgingFamiliesstatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentEquipmentComponentsAgingFamiliesstatus"
						},
						{
							"dataset": {
								"referenceName": "AgingFamilyEquipmentComponentsAgingFamiliesstatus",
								"type": "DatasetReference"
							},
							"name": "AgingFamilyEquipmentComponentsAgingFamiliesstatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsAgingFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "WriteEquipmentComponentsAgingFamiliesStatus"
						}
					],
					"transformations": [
						{
							"name": "FilterEquipmentComponentEquipmentComponentsAgingFamiliesstatus"
						},
						{
							"name": "FilterAgingFamilyEquipmentComponentsAgingFamiliesstatus"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> MainStatus\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentEquipmentComponentsAgingFamiliesstatus\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> AgingFamilyEquipmentComponentsAgingFamiliesstatus\nMainStatus, EquipmentComponentEquipmentComponentsAgingFamiliesstatus exists(MainStatus@EquipmentComponent == EquipmentComponentEquipmentComponentsAgingFamiliesstatus@EquipmentComponent && MainStatus@AgingFamily == EquipmentComponentEquipmentComponentsAgingFamiliesstatus@AgingFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterEquipmentComponentEquipmentComponentsAgingFamiliesstatus\nFilterEquipmentComponentEquipmentComponentsAgingFamiliesstatus, AgingFamilyEquipmentComponentsAgingFamiliesstatus exists(MainStatus@EquipmentComponent == AgingFamilyEquipmentComponentsAgingFamiliesstatus@EquipmentComponent && MainStatus@AgingFamily == AgingFamilyEquipmentComponentsAgingFamiliesstatus@AgingFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterAgingFamilyEquipmentComponentsAgingFamiliesstatus\nFilterAgingFamilyEquipmentComponentsAgingFamiliesstatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEquipmentComponent as string,\n\t\tAgingFamily as string\n\t),\n\tpartitionFileNames:['EquipmentComponentsAgingFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEquipmentComponentsAgingFamiliesStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsAgingFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentEquipmentComponentsAgingFamiliesstatus')]",
				"[concat(variables('factoryId'), '/datasets/AgingFamilyEquipmentComponentsAgingFamiliesstatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponentsEquipmentComponentsStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Status"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "MainStatus"
						},
						{
							"dataset": {
								"referenceName": "EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus"
						},
						{
							"dataset": {
								"referenceName": "EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsEquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "WriteEquipmentComponentsEquipmentComponentsStatus"
						}
					],
					"transformations": [
						{
							"name": "FilterEquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus"
						},
						{
							"name": "FilterEquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus"
						}
					],
					"script": "source(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> MainStatus\nsource(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus\nsource(output(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus\nMainStatus, EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus exists(MainStatus@EquipmentComponentSource == EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus@EquipmentComponentSource && MainStatus@EquipmentComponentTarget == EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus@EquipmentComponentTarget,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterEquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus\nFilterEquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus, EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus exists(MainStatus@EquipmentComponentSource == EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus@EquipmentComponentSource && MainStatus@EquipmentComponentTarget == EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus@EquipmentComponentTarget,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterEquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus\nFilterEquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tEquipmentComponentSource as string,\n\t\tEquipmentComponentTarget as string\n\t),\n\tpartitionFileNames:['EquipmentComponentsEquipmentComponents_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEquipmentComponentsEquipmentComponentsStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsEquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentSourceEquipmentComponentsEquipmentComponentsstatus')]",
				"[concat(variables('factoryId'), '/datasets/EquipmentComponentTargetEquipmentComponentsEquipmentComponentsstatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponents_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentComponentsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentComponentsStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateEquipmentComponents_MapCustomDataString",
								"type": "DatasetReference"
							},
							"name": "UpdateEquipmentComponentsMapCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "UpdateEquipmentComponents_MapCustomDataNumber",
								"type": "DatasetReference"
							},
							"name": "UpdateEquipmentComponentsMapCustomDataNumber"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "1_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteInstallationYearWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteEnvironmentAgingRateWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteQuantityWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteHealthScoreWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_513",
								"type": "DatasetReference"
							},
							"name": "WriteHealthScoreInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteFinancialConsequencesFactorWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteEnvironmentalConsequencesFactorWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteNetworkConsequencesFactorWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteKnownApparentAgeWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_513",
								"type": "DatasetReference"
							},
							"name": "WriteKnownApparentAgeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteCriticalityLevelFailureWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteCriticalityLevelNetworkConstraintWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentRowsCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCustomDataRowsCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "1_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentRowsCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentComponentRowsCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingCustomDataRowsCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "1_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "1_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentComponentRowsCustomDataNumber"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteCustomDataNumberValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "1_512",
								"type": "DatasetReference"
							},
							"name": "WriteSAIDI15minWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInEquipmentComponentsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullInstallationYear"
						},
						{
							"name": "InstallationYearTypeCheck"
						},
						{
							"name": "NonNullEnvironmentAgingRate"
						},
						{
							"name": "EnvironmentAgingRateTypeCheck"
						},
						{
							"name": "NonNullQuantity"
						},
						{
							"name": "QuantityTypeCheck"
						},
						{
							"name": "NonNullHealthScore"
						},
						{
							"name": "HealthScoreTypeCheck"
						},
						{
							"name": "HealthScoreRangeCheck"
						},
						{
							"name": "NonNullFinancialConsequencesFactor"
						},
						{
							"name": "FinancialConsequencesFactorTypeCheck"
						},
						{
							"name": "NonNullEnvironmentalConsequencesFactor"
						},
						{
							"name": "EnvironmentalConsequencesFactorTypeCheck"
						},
						{
							"name": "NonNullNetworkConsequencesFactor"
						},
						{
							"name": "NetworkConsequencesFactorTypeCheck"
						},
						{
							"name": "NonNullKnownApparentAge"
						},
						{
							"name": "KnownApparentAgeTypeCheck"
						},
						{
							"name": "KnownApparentAgeRangeCheck"
						},
						{
							"name": "NonNullCriticalityLevelFailure"
						},
						{
							"name": "CriticalityLevelFailureTypeCheck"
						},
						{
							"name": "NonNullCriticalityLevelNetworkConstraint"
						},
						{
							"name": "CriticalityLevelNetworkConstraintTypeCheck"
						},
						{
							"name": "MapCustomDataStringMandatoryCheck"
						},
						{
							"name": "MapCustomDataStringExistenceCheck"
						},
						{
							"name": "MapCustomDataNumberMandatoryCheck"
						},
						{
							"name": "MapCustomDataNumberExistenceCheck"
						},
						{
							"name": "NonNullCustomDataNumberValue"
						},
						{
							"name": "CustomDataNumberValueTypeCheck"
						},
						{
							"name": "NonNullSAIDI15min"
						},
						{
							"name": "SAIDI15minTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tInstallationYear as string,\n\t\tEnvironmentAgingRate as string,\n\t\tQuantity as string,\n\t\tHealthScore as string,\n\t\tFinancialConsequencesFactor as string,\n\t\tEnvironmentalConsequencesFactor as string,\n\t\tNetworkConsequencesFactor as string,\n\t\tExtraArea as string,\n\t\tDateOfLastSpecificAction as string,\n\t\tDateOfLastStateRecording as string,\n\t\tKnownApparentAge as string,\n\t\tCriticalityLevelFailure as string,\n\t\tCriticalityLevelNetworkConstraint as string,\n\t\tExtraAreaLevel2 as string,\n\t\tSAIDI15min as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateEquipmentComponents\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentComponentsStatus\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tCustomData as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateEquipmentComponentsMapCustomDataString\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tCustomData as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateEquipmentComponentsMapCustomDataNumber\nReadUpdateEquipmentComponents, EquipmentComponentsStatus exists(ReadUpdateEquipmentComponents@Name == EquipmentComponentsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInEquipmentComponentsStatus\nReadUpdateEquipmentComponents split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateEquipmentComponents filter(not(isNull(InstallationYear))) ~> NonNullInstallationYear\nNonNullInstallationYear split(not(isInteger(InstallationYear)),\n\tdisjoint: false) ~> InstallationYearTypeCheck@(InstallationYearWrongType)\nReadUpdateEquipmentComponents filter(not(isNull(EnvironmentAgingRate))) ~> NonNullEnvironmentAgingRate\nNonNullEnvironmentAgingRate split(not(isFloat(EnvironmentAgingRate)),\n\tdisjoint: false) ~> EnvironmentAgingRateTypeCheck@(EnvironmentAgingRateWrongType)\nReadUpdateEquipmentComponents filter(not(isNull(Quantity))) ~> NonNullQuantity\nNonNullQuantity split(not(isFloat(Quantity)),\n\tdisjoint: false) ~> QuantityTypeCheck@(QuantityWrongType)\nReadUpdateEquipmentComponents filter(not(isNull(HealthScore))) ~> NonNullHealthScore\nNonNullHealthScore split(not(isFloat(HealthScore)),\n\tdisjoint: false) ~> HealthScoreTypeCheck@(HealthScoreWrongType, HealthScoreCorrectType)\nHealthScoreTypeCheck@HealthScoreCorrectType filter(toFloat(HealthScore) < 0.0) ~> HealthScoreRangeCheck\nReadUpdateEquipmentComponents filter(not(isNull(FinancialConsequencesFactor))) ~> NonNullFinancialConsequencesFactor\nNonNullFinancialConsequencesFactor split(not(isFloat(FinancialConsequencesFactor)),\n\tdisjoint: false) ~> FinancialConsequencesFactorTypeCheck@(FinancialConsequencesFactorWrongType)\nReadUpdateEquipmentComponents filter(not(isNull(EnvironmentalConsequencesFactor))) ~> NonNullEnvironmentalConsequencesFactor\nNonNullEnvironmentalConsequencesFactor split(not(isFloat(EnvironmentalConsequencesFactor)),\n\tdisjoint: false) ~> EnvironmentalConsequencesFactorTypeCheck@(EnvironmentalConsequencesFactorWrongType)\nReadUpdateEquipmentComponents filter(not(isNull(NetworkConsequencesFactor))) ~> NonNullNetworkConsequencesFactor\nNonNullNetworkConsequencesFactor split(not(isFloat(NetworkConsequencesFactor)),\n\tdisjoint: false) ~> NetworkConsequencesFactorTypeCheck@(NetworkConsequencesFactorWrongType)\nReadUpdateEquipmentComponents filter(not(isNull(KnownApparentAge))) ~> NonNullKnownApparentAge\nNonNullKnownApparentAge split(not(isFloat(KnownApparentAge)),\n\tdisjoint: false) ~> KnownApparentAgeTypeCheck@(KnownApparentAgeWrongType, KnownApparentAgeCorrectType)\nKnownApparentAgeTypeCheck@KnownApparentAgeCorrectType filter(toFloat(KnownApparentAge) < 0.0) ~> KnownApparentAgeRangeCheck\nReadUpdateEquipmentComponents filter(not(isNull(CriticalityLevelFailure))) ~> NonNullCriticalityLevelFailure\nNonNullCriticalityLevelFailure split(not(isFloat(CriticalityLevelFailure)),\n\tdisjoint: false) ~> CriticalityLevelFailureTypeCheck@(CriticalityLevelFailureWrongType)\nReadUpdateEquipmentComponents filter(not(isNull(CriticalityLevelNetworkConstraint))) ~> NonNullCriticalityLevelNetworkConstraint\nNonNullCriticalityLevelNetworkConstraint split(not(isFloat(CriticalityLevelNetworkConstraint)),\n\tdisjoint: false) ~> CriticalityLevelNetworkConstraintTypeCheck@(CriticalityLevelNetworkConstraintWrongType)\nUpdateEquipmentComponentsMapCustomDataString split(isNull(EquipmentComponent),\n\tisNull(CustomData),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCustomDataStringMandatoryCheck@(MissingEquipmentComponent, MissingCustomData, MissingValue)\nUpdateEquipmentComponentsMapCustomDataString, EquipmentComponentsStatus exists(EquipmentComponent == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCustomDataStringExistenceCheck\nUpdateEquipmentComponentsMapCustomDataNumber split(isNull(EquipmentComponent),\n\tisNull(CustomData),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCustomDataNumberMandatoryCheck@(MissingEquipmentComponent, MissingCustomData, MissingValue)\nUpdateEquipmentComponentsMapCustomDataNumber, EquipmentComponentsStatus exists(EquipmentComponent == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCustomDataNumberExistenceCheck\nUpdateEquipmentComponentsMapCustomDataNumber filter(not(isNull(Value))) ~> NonNullCustomDataNumberValue\nNonNullCustomDataNumberValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> CustomDataNumberValueTypeCheck@(CustomDataNumberValueWrongType)\nReadUpdateEquipmentComponents filter(not(isNull(SAIDI15min))) ~> NonNullSAIDI15min\nNonNullSAIDI15min split(not(isFloat(SAIDI15min)),\n\tdisjoint: false) ~> SAIDI15minTypeCheck@(SAIDI15minWrongType)\nExistingNameInEquipmentComponentsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-510-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-511-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nInstallationYearTypeCheck@InstallationYearWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-InstallationYearWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteInstallationYearWrongTypeRows\nEnvironmentAgingRateTypeCheck@EnvironmentAgingRateWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-EnvironmentAgingRateWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEnvironmentAgingRateWrongTypeRows\nQuantityTypeCheck@QuantityWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-QuantityWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteQuantityWrongTypeRows\nHealthScoreTypeCheck@HealthScoreWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-HealthScoreWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteHealthScoreWrongTypeRows\nHealthScoreRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-513-HealthScoreInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteHealthScoreInvalidRangeRows\nFinancialConsequencesFactorTypeCheck@FinancialConsequencesFactorWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-FinancialConsequencesFactorWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteFinancialConsequencesFactorWrongTypeRows\nEnvironmentalConsequencesFactorTypeCheck@EnvironmentalConsequencesFactorWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-EnvironmentalConsequencesFactorWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEnvironmentalConsequencesFactorWrongTypeRows\nNetworkConsequencesFactorTypeCheck@NetworkConsequencesFactorWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-NetworkConsequencesFactorWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNetworkConsequencesFactorWrongTypeRows\nKnownApparentAgeTypeCheck@KnownApparentAgeWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-KnownApparentAgeWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteKnownApparentAgeWrongTypeRows\nKnownApparentAgeRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-513-KnownApparentAgeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteKnownApparentAgeInvalidRangeRows\nCriticalityLevelFailureTypeCheck@CriticalityLevelFailureWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-CriticalityLevelFailureWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCriticalityLevelFailureWrongTypeRows\nCriticalityLevelNetworkConstraintTypeCheck@CriticalityLevelNetworkConstraintWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-CriticalityLevelNetworkConstraintWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCriticalityLevelNetworkConstraintWrongTypeRows\nMapCustomDataStringMandatoryCheck@MissingEquipmentComponent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-511-MissColumnEquipmentComponentCustomDataString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentRowsCustomDataString\nMapCustomDataStringMandatoryCheck@MissingCustomData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-511-MissColumnCustomDataCustomDataString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCustomDataRowsCustomDataString\nMapCustomDataStringMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-511-MissColumnValueCustomDataString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCustomDataString\nMapCustomDataStringExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-510-NotExistingEquipmentComponentCustomDataString.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentRowsCustomDataString\nMapCustomDataNumberMandatoryCheck@MissingEquipmentComponent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-511-MissColumnEquipmentComponentCustomDataNumber.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentComponentRowsCustomDataNumber\nMapCustomDataNumberMandatoryCheck@MissingCustomData sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-511-MissColumnCustomDataCustomDataNumber.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingCustomDataRowsCustomDataNumber\nMapCustomDataNumberMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-511-MissColumnValueCustomDataNumber.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCustomDataNumber\nMapCustomDataNumberExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-510-NotExistingEquipmentComponentCustomDataNumber.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentComponentRowsCustomDataNumber\nCustomDataNumberValueTypeCheck@CustomDataNumberValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-CustomDataNumberValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCustomDataNumberValueWrongTypeRows\nSAIDI15minTypeCheck@SAIDI15minWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1-512-SAIDI15minWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteSAIDI15minWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentComponentsStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentComponents_MapCustomDataString')]",
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentComponents_MapCustomDataNumber')]",
				"[concat(variables('factoryId'), '/datasets/1_510')]",
				"[concat(variables('factoryId'), '/datasets/1_511')]",
				"[concat(variables('factoryId'), '/datasets/1_512')]",
				"[concat(variables('factoryId'), '/datasets/1_513')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentComponents_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "1-AssetPortfolio/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateEquipmentComponents",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateEquipmentComponents"
						},
						{
							"dataset": {
								"referenceName": "UpdateEquipmentComponents_MapCustomDataString",
								"type": "DatasetReference"
							},
							"name": "ReadMapCustomDataString"
						},
						{
							"dataset": {
								"referenceName": "UpdateEquipmentComponents_MapCustomDataNumber",
								"type": "DatasetReference"
							},
							"name": "ReadMapCustomDataNumber"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapCustomDataStringKeyCustomData"
						},
						{
							"name": "CustomDataStringCleaning"
						},
						{
							"name": "CustomDataStringUnion"
						},
						{
							"name": "CustomDataStringSelect"
						},
						{
							"name": "AggregateMapCustomDataNumberKeyCustomData"
						},
						{
							"name": "CustomDataNumberCleaning"
						},
						{
							"name": "CustomDataNumberUnion"
						},
						{
							"name": "CustomDataNumberSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tInstallationYear as string,\n\t\tEnvironmentAgingRate as string,\n\t\tQuantity as string,\n\t\tHealthScore as string,\n\t\tFinancialConsequencesFactor as string,\n\t\tEnvironmentalConsequencesFactor as string,\n\t\tNetworkConsequencesFactor as string,\n\t\tExtraArea as string,\n\t\tDateOfLastSpecificAction as string,\n\t\tDateOfLastStateRecording as string,\n\t\tKnownApparentAge as string,\n\t\tCriticalityLevelFailure as string,\n\t\tCriticalityLevelNetworkConstraint as string,\n\t\tExtraAreaLevel2 as string,\n\t\tSAIDI15min as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateEquipmentComponents\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tCustomData as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCustomDataString\nsource(output(\n\t\tEquipmentComponent as string,\n\t\tCustomData as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCustomDataNumber\nReadUpdateEquipmentComponents select(mapColumn(\n\t\t{$id} = Name,\n\t\tInstallationYear,\n\t\tEnvironmentAgingRate,\n\t\tQuantity,\n\t\tHealthScore,\n\t\tFinancialConsequencesFactor,\n\t\tEnvironmentalConsequencesFactor,\n\t\tNetworkConsequencesFactor,\n\t\tExtraArea,\n\t\tDateOfLastSpecificAction,\n\t\tDateOfLastStateRecording,\n\t\tKnownApparentAge,\n\t\tCriticalityLevelFailure,\n\t\tCriticalityLevelNetworkConstraint,\n\t\tExtraAreaLevel2,\n\t\tSAIDI15min\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:EquipmentComponent;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapCustomDataString aggregate(groupBy(EquipmentComponent),\n\tCustomDataString = toString(keyValues(collect(toString(CustomData)), collect(toString(Value))))) ~> AggregateMapCustomDataStringKeyCustomData\nAggregateMapCustomDataStringKeyCustomData derive(CustomDataString = replace(replace(replace(CustomDataString, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CustomDataStringCleaning\nModelDefinition, CustomDataStringCleaning join({$id} == EquipmentComponent,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CustomDataStringUnion\nCustomDataStringUnion select(mapColumn(\n\t\t{$id},\n\t\tInstallationYear,\n\t\tEnvironmentAgingRate,\n\t\tQuantity,\n\t\tHealthScore,\n\t\tFinancialConsequencesFactor,\n\t\tEnvironmentalConsequencesFactor,\n\t\tNetworkConsequencesFactor,\n\t\tExtraArea,\n\t\tDateOfLastSpecificAction,\n\t\tDateOfLastStateRecording,\n\t\tKnownApparentAge,\n\t\tCriticalityLevelFailure,\n\t\tCriticalityLevelNetworkConstraint,\n\t\tExtraAreaLevel2,\n\t\tSAIDI15min,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCustomData_String = CustomDataString\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomDataStringSelect\nReadMapCustomDataNumber aggregate(groupBy(EquipmentComponent),\n\tCustomDataNumber = toString(keyValues(collect(toString(CustomData)), collect(toFloat(Value))))) ~> AggregateMapCustomDataNumberKeyCustomData\nAggregateMapCustomDataNumberKeyCustomData derive(CustomDataNumber = replace(replace(replace(CustomDataNumber, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CustomDataNumberCleaning\nCustomDataStringSelect, CustomDataNumberCleaning join({$id} == EquipmentComponent,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CustomDataNumberUnion\nCustomDataNumberUnion select(mapColumn(\n\t\t{$id},\n\t\tInstallationYear,\n\t\tEnvironmentAgingRate,\n\t\tQuantity,\n\t\tHealthScore,\n\t\tFinancialConsequencesFactor,\n\t\tEnvironmentalConsequencesFactor,\n\t\tNetworkConsequencesFactor,\n\t\tExtraArea,\n\t\tDateOfLastSpecificAction,\n\t\tDateOfLastStateRecording,\n\t\tKnownApparentAge,\n\t\tCriticalityLevelFailure,\n\t\tCriticalityLevelNetworkConstraint,\n\t\tExtraAreaLevel2,\n\t\tSAIDI15min,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCustomData_String,\n\t\tCustomData_Number = CustomDataNumber\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CustomDataNumberSelect\nCustomDataNumberSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentComponents.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentComponents')]",
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentComponents_MapCustomDataString')]",
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentComponents_MapCustomDataNumber')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentGroups_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "TempInput_EquipmentGroupsStatus",
								"type": "DatasetReference"
							},
							"name": "EquipmentGroupsStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateEquipmentGroups_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "UpdateEquipmentGroupsMapBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "UpdateEquipmentGroups_MapHRCategories",
								"type": "DatasetReference"
							},
							"name": "UpdateEquipmentGroupsMapHRCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_520",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_522",
								"type": "DatasetReference"
							},
							"name": "WriteQuantityWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentGroupRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "11_520",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentGroupRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingEquipmentGroupRowsHRCategories"
						},
						{
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsHRCategories"
						},
						{
							"dataset": {
								"referenceName": "11_521",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsHRCategories"
						},
						{
							"dataset": {
								"referenceName": "11_520",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingEquipmentGroupRowsHRCategories"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInEquipmentGroupsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullQuantity"
						},
						{
							"name": "QuantityTypeCheck"
						},
						{
							"name": "MapBudgetCategoriesMandatoryCheck"
						},
						{
							"name": "MapBudgetCategoriesExistenceCheck"
						},
						{
							"name": "MapHRCategoriesMandatoryCheck"
						},
						{
							"name": "MapHRCategoriesExistenceCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tQuantity as string,\n\t\tRatingLevel as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateEquipmentGroups\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> EquipmentGroupsStatus\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateEquipmentGroupsMapBudgetCategories\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateEquipmentGroupsMapHRCategories\nReadUpdateEquipmentGroups, EquipmentGroupsStatus exists(ReadUpdateEquipmentGroups@Name == EquipmentGroupsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInEquipmentGroupsStatus\nReadUpdateEquipmentGroups split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateEquipmentGroups filter(not(isNull(Quantity))) ~> NonNullQuantity\nNonNullQuantity split(not(isFloat(Quantity)),\n\tdisjoint: false) ~> QuantityTypeCheck@(QuantityWrongType)\nUpdateEquipmentGroupsMapBudgetCategories split(isNull(EquipmentGroup),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapBudgetCategoriesMandatoryCheck@(MissingEquipmentGroup, MissingIndex, MissingValue)\nUpdateEquipmentGroupsMapBudgetCategories, EquipmentGroupsStatus exists(EquipmentGroup == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapBudgetCategoriesExistenceCheck\nUpdateEquipmentGroupsMapHRCategories split(isNull(EquipmentGroup),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapHRCategoriesMandatoryCheck@(MissingEquipmentGroup, MissingIndex, MissingValue)\nUpdateEquipmentGroupsMapHRCategories, EquipmentGroupsStatus exists(EquipmentGroup == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapHRCategoriesExistenceCheck\nExistingNameInEquipmentGroupsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-520-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-521-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nQuantityTypeCheck@QuantityWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-522-QuantityWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteQuantityWrongTypeRows\nMapBudgetCategoriesMandatoryCheck@MissingEquipmentGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-521-MissColumnEquipmentGroupBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentGroupRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-521-MissColumnIndexBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-521-MissColumnValueBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsBudgetCategories\nMapBudgetCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-520-NotExistingEquipmentGroupBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentGroupRowsBudgetCategories\nMapHRCategoriesMandatoryCheck@MissingEquipmentGroup sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-521-MissColumnEquipmentGroupHRCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingEquipmentGroupRowsHRCategories\nMapHRCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-521-MissColumnIndexHRCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsHRCategories\nMapHRCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-521-MissColumnValueHRCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsHRCategories\nMapHRCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-520-NotExistingEquipmentGroupHRCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingEquipmentGroupRowsHRCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_EquipmentGroupsStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentGroups_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentGroups_MapHRCategories')]",
				"[concat(variables('factoryId'), '/datasets/11_520')]",
				"[concat(variables('factoryId'), '/datasets/11_521')]",
				"[concat(variables('factoryId'), '/datasets/11_522')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateEquipmentGroups_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateEquipmentGroups",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateEquipmentGroups"
						},
						{
							"dataset": {
								"referenceName": "UpdateEquipmentGroups_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "UpdateEquipmentGroups_MapHRCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapHRCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapBudgetCategoriesKeyIndex"
						},
						{
							"name": "BudgetCategoriesCleaning"
						},
						{
							"name": "BudgetCategoriesUnion"
						},
						{
							"name": "BudgetCategoriesSelect"
						},
						{
							"name": "AggregateMapHRCategoriesKeyIndex"
						},
						{
							"name": "HRCategoriesCleaning"
						},
						{
							"name": "HRCategoriesUnion"
						},
						{
							"name": "HRCategoriesSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tQuantity as string,\n\t\tRatingLevel as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateEquipmentGroups\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapBudgetCategories\nsource(output(\n\t\tEquipmentGroup as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapHRCategories\nReadUpdateEquipmentGroups select(mapColumn(\n\t\t{$id} = Name,\n\t\tAssetClass,\n\t\tQuantity,\n\t\tRatingLevel\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:EquipmentGroup;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapBudgetCategories aggregate(groupBy(EquipmentGroup),\n\tBudgetCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapBudgetCategoriesKeyIndex\nAggregateMapBudgetCategoriesKeyIndex derive(BudgetCategories = replace(replace(replace(BudgetCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> BudgetCategoriesCleaning\nModelDefinition, BudgetCategoriesCleaning join({$id} == EquipmentGroup,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> BudgetCategoriesUnion\nBudgetCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tQuantity,\n\t\tRatingLevel,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tBudgetCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BudgetCategoriesSelect\nReadMapHRCategories aggregate(groupBy(EquipmentGroup),\n\tHRCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapHRCategoriesKeyIndex\nAggregateMapHRCategoriesKeyIndex derive(HRCategories = replace(replace(replace(HRCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> HRCategoriesCleaning\nBudgetCategoriesSelect, HRCategoriesCleaning join({$id} == EquipmentGroup,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> HRCategoriesUnion\nHRCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tQuantity,\n\t\tRatingLevel,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tBudgetCategories,\n\t\tHRCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> HRCategoriesSelect\nHRCategoriesSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_EquipmentGroups.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentGroups')]",
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentGroups_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/UpdateEquipmentGroups_MapHRCategories')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSubActionFamilies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateSubActionFamilies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SubActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "SubActionFamiliesStatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "11_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "11_513",
								"type": "DatasetReference"
							},
							"name": "WriteTypeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "11_513",
								"type": "DatasetReference"
							},
							"name": "WriteImpactModeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "11_512",
								"type": "DatasetReference"
							},
							"name": "WriteImpactOnEquipmentWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "11_513",
								"type": "DatasetReference"
							},
							"name": "WriteImpactOnEquipmentInvalidRangeRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInSubActionFamiliesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnumType"
						},
						{
							"name": "TypeEnumCheck"
						},
						{
							"name": "NonNullEnumImpactMode"
						},
						{
							"name": "ImpactModeEnumCheck"
						},
						{
							"name": "NonNullImpactOnEquipment"
						},
						{
							"name": "ImpactOnEquipmentTypeCheck"
						},
						{
							"name": "ImpactOnEquipmentRangeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tType as string,\n\t\tImpactMode as string,\n\t\tImpactOnEquipment as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateSubActionFamilies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SubActionFamiliesStatus\nReadUpdateSubActionFamilies, SubActionFamiliesStatus exists(ReadUpdateSubActionFamilies@Name == SubActionFamiliesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInSubActionFamiliesStatus\nReadUpdateSubActionFamilies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateSubActionFamilies filter(not(isNull(Type))) ~> NonNullEnumType\nNonNullEnumType filter(not(in(['NoAction', 'Repairs', 'Replacement', 'Inspection', 'Activation', 'Deactivation', 'RepairsWithoutInspection'], Type))) ~> TypeEnumCheck\nReadUpdateSubActionFamilies filter(not(isNull(ImpactMode))) ~> NonNullEnumImpactMode\nNonNullEnumImpactMode filter(not(in(['ApparentAgeBased'], ImpactMode))) ~> ImpactModeEnumCheck\nReadUpdateSubActionFamilies filter(not(isNull(ImpactOnEquipment))) ~> NonNullImpactOnEquipment\nNonNullImpactOnEquipment split(not(isFloat(ImpactOnEquipment)),\n\tdisjoint: false) ~> ImpactOnEquipmentTypeCheck@(ImpactOnEquipmentWrongType, ImpactOnEquipmentCorrectType)\nImpactOnEquipmentTypeCheck@ImpactOnEquipmentCorrectType filter(or(toFloat(ImpactOnEquipment) < 0.0, toFloat(ImpactOnEquipment) > 1.0)) ~> ImpactOnEquipmentRangeCheck\nExistingNameInSubActionFamiliesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-510-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-511-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nTypeEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-513-TypeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTypeInvalidRangeRows\nImpactModeEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-513-ImpactModeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteImpactModeInvalidRangeRows\nImpactOnEquipmentTypeCheck@ImpactOnEquipmentWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-512-ImpactOnEquipmentWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteImpactOnEquipmentWrongTypeRows\nImpactOnEquipmentRangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['11-513-ImpactOnEquipmentInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteImpactOnEquipmentInvalidRangeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SubActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/11_510')]",
				"[concat(variables('factoryId'), '/datasets/11_511')]",
				"[concat(variables('factoryId'), '/datasets/11_513')]",
				"[concat(variables('factoryId'), '/datasets/11_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSubActionFamilies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "11-AssetPortfolioActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateSubActionFamilies",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateSubActionFamilies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AssetPortfolioActivitiesManagementUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tType as string,\n\t\tImpactMode as string,\n\t\tImpactOnEquipment as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateSubActionFamilies\nReadUpdateSubActionFamilies select(mapColumn(\n\t\t{$id} = Name,\n\t\tType,\n\t\tImpactMode,\n\t\tImpactOnEquipment\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:SubActionFamily;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SubActionFamilies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateSubActionFamilies')]",
				"[concat(variables('factoryId'), '/datasets/AssetPortfolioActivitiesManagementUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSustainmentActionsActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Status"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "MainStatus"
						},
						{
							"dataset": {
								"referenceName": "ActionFamilySustainmentActionsActionFamiliesstatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamilySustainmentActionsActionFamiliesstatus"
						},
						{
							"dataset": {
								"referenceName": "SustainmentActionSustainmentActionsActionFamiliesstatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionSustainmentActionsActionFamiliesstatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "WriteSustainmentActionsActionFamiliesStatus"
						}
					],
					"transformations": [
						{
							"name": "FilterActionFamilySustainmentActionsActionFamiliesstatus"
						},
						{
							"name": "FilterSustainmentActionSustainmentActionsActionFamiliesstatus"
						}
					],
					"script": "source(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> MainStatus\nsource(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamilySustainmentActionsActionFamiliesstatus\nsource(output(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionSustainmentActionsActionFamiliesstatus\nMainStatus, ActionFamilySustainmentActionsActionFamiliesstatus exists(MainStatus@SustainmentAction == ActionFamilySustainmentActionsActionFamiliesstatus@SustainmentAction && MainStatus@ActionFamily == ActionFamilySustainmentActionsActionFamiliesstatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterActionFamilySustainmentActionsActionFamiliesstatus\nFilterActionFamilySustainmentActionsActionFamiliesstatus, SustainmentActionSustainmentActionsActionFamiliesstatus exists(MainStatus@SustainmentAction == SustainmentActionSustainmentActionsActionFamiliesstatus@SustainmentAction && MainStatus@ActionFamily == SustainmentActionSustainmentActionsActionFamiliesstatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterSustainmentActionSustainmentActionsActionFamiliesstatus\nFilterSustainmentActionSustainmentActionsActionFamiliesstatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSustainmentAction as string,\n\t\tActionFamily as string\n\t),\n\tpartitionFileNames:['SustainmentActionsActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteSustainmentActionsActionFamiliesStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamilySustainmentActionsActionFamiliesstatus')]",
				"[concat(variables('factoryId'), '/datasets/SustainmentActionSustainmentActionsActionFamiliesstatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSustainmentActions_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateSustainmentActions",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateSustainmentActions"
						},
						{
							"dataset": {
								"referenceName": "TempInput_SustainmentActionsStatus",
								"type": "DatasetReference"
							},
							"name": "SustainmentActionsStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateSustainmentActions_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "UpdateSustainmentActionsMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_530",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_531",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_531",
								"type": "DatasetReference"
							},
							"name": "WriteMissingSustainmentActionRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_531",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_531",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_530",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingSustainmentActionRowsBudgetCategories"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInSustainmentActionsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "MapBudgetCategoriesMandatoryCheck"
						},
						{
							"name": "MapBudgetCategoriesExistenceCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tActivityPlanName as string,\n\t\tPlannedDate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateSustainmentActions\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> SustainmentActionsStatus\nsource(output(\n\t\tSustainmentAction as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateSustainmentActionsMapBudgetCategories\nReadUpdateSustainmentActions, SustainmentActionsStatus exists(ReadUpdateSustainmentActions@Name == SustainmentActionsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInSustainmentActionsStatus\nReadUpdateSustainmentActions split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nUpdateSustainmentActionsMapBudgetCategories split(isNull(SustainmentAction),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapBudgetCategoriesMandatoryCheck@(MissingSustainmentAction, MissingIndex, MissingValue)\nUpdateSustainmentActionsMapBudgetCategories, SustainmentActionsStatus exists(SustainmentAction == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapBudgetCategoriesExistenceCheck\nExistingNameInSustainmentActionsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-530-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-531-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nMapBudgetCategoriesMandatoryCheck@MissingSustainmentAction sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-531-MissColumnSustainmentActionBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingSustainmentActionRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-531-MissColumnIndexBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-531-MissColumnValueBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsBudgetCategories\nMapBudgetCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-530-NotExistingSustainmentActionBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingSustainmentActionRowsBudgetCategories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateSustainmentActions')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_SustainmentActionsStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateSustainmentActions_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/2_530')]",
				"[concat(variables('factoryId'), '/datasets/2_531')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateSustainmentActions_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateSustainmentActions",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateSustainmentActions"
						},
						{
							"dataset": {
								"referenceName": "UpdateSustainmentActions_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapBudgetCategoriesKeyIndex"
						},
						{
							"name": "BudgetCategoriesCleaning"
						},
						{
							"name": "BudgetCategoriesUnion"
						},
						{
							"name": "BudgetCategoriesSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tActivityPlanName as string,\n\t\tPlannedDate as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateSustainmentActions\nsource(output(\n\t\tSustainmentAction as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapBudgetCategories\nReadUpdateSustainmentActions select(mapColumn(\n\t\t{$id} = Name,\n\t\tActivityPlanName,\n\t\tPlannedDate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:SustainmentAction;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapBudgetCategories aggregate(groupBy(SustainmentAction),\n\tBudgetCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapBudgetCategoriesKeyIndex\nAggregateMapBudgetCategoriesKeyIndex derive(BudgetCategories = replace(replace(replace(BudgetCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> BudgetCategoriesCleaning\nModelDefinition, BudgetCategoriesCleaning join({$id} == SustainmentAction,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> BudgetCategoriesUnion\nBudgetCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tActivityPlanName,\n\t\tPlannedDate,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tBudgetCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BudgetCategoriesSelect\nBudgetCategoriesSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_SustainmentActions.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateSustainmentActions')]",
				"[concat(variables('factoryId'), '/datasets/UpdateSustainmentActions_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTeams_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "4-HumanResources/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateTeams",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateTeams"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TeamsStatus",
								"type": "DatasetReference"
							},
							"name": "TeamsStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateTeams_MapCatKeyLabels",
								"type": "DatasetReference"
							},
							"name": "UpdateTeamsMapCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "UpdateTeams_MapAvailableQuantityByYear",
								"type": "DatasetReference"
							},
							"name": "UpdateTeamsMapAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "UpdateTeams_MapMinimalQuantityLevelByYear",
								"type": "DatasetReference"
							},
							"name": "UpdateTeamsMapMinimalQuantityLevelByYear"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "4_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "4_512",
								"type": "DatasetReference"
							},
							"name": "WriteConstrainedWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTeamRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "4_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTeamRowsCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTeamRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingYearRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "4_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTeamRowsAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "4_512",
								"type": "DatasetReference"
							},
							"name": "WriteAvailableQuantityByYearValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTeamRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingYearRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "4_511",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "4_510",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTeamRowsMinimalQuantityLevelByYear"
						},
						{
							"dataset": {
								"referenceName": "4_512",
								"type": "DatasetReference"
							},
							"name": "WriteMinimalQuantityLevelByYearValueWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "4_512",
								"type": "DatasetReference"
							},
							"name": "WriteCostRateWrongTypeRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInTeamsStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullConstrained"
						},
						{
							"name": "ConstrainedTypeCheck"
						},
						{
							"name": "MapCatKeyLabelsMandatoryCheck"
						},
						{
							"name": "MapCatKeyLabelsExistenceCheck"
						},
						{
							"name": "MapAvailableQuantityByYearMandatoryCheck"
						},
						{
							"name": "MapAvailableQuantityByYearExistenceCheck"
						},
						{
							"name": "NonNullAvailableQuantityByYearValue"
						},
						{
							"name": "AvailableQuantityByYearValueTypeCheck"
						},
						{
							"name": "MapMinimalQuantityLevelByYearMandatoryCheck"
						},
						{
							"name": "MapMinimalQuantityLevelByYearExistenceCheck"
						},
						{
							"name": "NonNullMinimalQuantityLevelByYearValue"
						},
						{
							"name": "MinimalQuantityLevelByYearValueTypeCheck"
						},
						{
							"name": "NonNullCostRate"
						},
						{
							"name": "CostRateTypeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tConstrained as string,\n\t\tCostRate as string,\n\t\tExtraArea as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateTeams\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TeamsStatus\nsource(output(\n\t\tTeam as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateTeamsMapCatKeyLabels\nsource(output(\n\t\tTeam as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateTeamsMapAvailableQuantityByYear\nsource(output(\n\t\tTeam as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateTeamsMapMinimalQuantityLevelByYear\nReadUpdateTeams, TeamsStatus exists(ReadUpdateTeams@Name == TeamsStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInTeamsStatus\nReadUpdateTeams split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateTeams filter(not(isNull(Constrained))) ~> NonNullConstrained\nNonNullConstrained split(not(isBoolean(Constrained)),\n\tdisjoint: false) ~> ConstrainedTypeCheck@(ConstrainedWrongType)\nUpdateTeamsMapCatKeyLabels split(isNull(Team),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapCatKeyLabelsMandatoryCheck@(MissingTeam, MissingIndex, MissingValue)\nUpdateTeamsMapCatKeyLabels, TeamsStatus exists(Team == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapCatKeyLabelsExistenceCheck\nUpdateTeamsMapAvailableQuantityByYear split(isNull(Team),\n\tisNull(Year),\n\tisNull(Value),\n\tdisjoint: false) ~> MapAvailableQuantityByYearMandatoryCheck@(MissingTeam, MissingYear, MissingValue)\nUpdateTeamsMapAvailableQuantityByYear, TeamsStatus exists(Team == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapAvailableQuantityByYearExistenceCheck\nUpdateTeamsMapAvailableQuantityByYear filter(not(isNull(Value))) ~> NonNullAvailableQuantityByYearValue\nNonNullAvailableQuantityByYearValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> AvailableQuantityByYearValueTypeCheck@(AvailableQuantityByYearValueWrongType)\nUpdateTeamsMapMinimalQuantityLevelByYear split(isNull(Team),\n\tisNull(Year),\n\tisNull(Value),\n\tdisjoint: false) ~> MapMinimalQuantityLevelByYearMandatoryCheck@(MissingTeam, MissingYear, MissingValue)\nUpdateTeamsMapMinimalQuantityLevelByYear, TeamsStatus exists(Team == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapMinimalQuantityLevelByYearExistenceCheck\nUpdateTeamsMapMinimalQuantityLevelByYear filter(not(isNull(Value))) ~> NonNullMinimalQuantityLevelByYearValue\nNonNullMinimalQuantityLevelByYearValue split(not(isFloat(Value)),\n\tdisjoint: false) ~> MinimalQuantityLevelByYearValueTypeCheck@(MinimalQuantityLevelByYearValueWrongType)\nReadUpdateTeams filter(not(isNull(CostRate))) ~> NonNullCostRate\nNonNullCostRate split(not(isFloat(CostRate)),\n\tdisjoint: false) ~> CostRateTypeCheck@(CostRateWrongType)\nExistingNameInTeamsStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-510-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nConstrainedTypeCheck@ConstrainedWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-512-ConstrainedWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteConstrainedWrongTypeRows\nMapCatKeyLabelsMandatoryCheck@MissingTeam sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnTeamCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTeamRowsCatKeyLabels\nMapCatKeyLabelsMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnIndexCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsCatKeyLabels\nMapCatKeyLabelsMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnValueCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsCatKeyLabels\nMapCatKeyLabelsExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-510-NotExistingTeamCatKeyLabels.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTeamRowsCatKeyLabels\nMapAvailableQuantityByYearMandatoryCheck@MissingTeam sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnTeamAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTeamRowsAvailableQuantityByYear\nMapAvailableQuantityByYearMandatoryCheck@MissingYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnYearAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingYearRowsAvailableQuantityByYear\nMapAvailableQuantityByYearMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnValueAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsAvailableQuantityByYear\nMapAvailableQuantityByYearExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-510-NotExistingTeamAvailableQuantityByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTeamRowsAvailableQuantityByYear\nAvailableQuantityByYearValueTypeCheck@AvailableQuantityByYearValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-512-AvailableQuantityByYearValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteAvailableQuantityByYearValueWrongTypeRows\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingTeam sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnTeamMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTeamRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnYearMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingYearRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-511-MissColumnValueMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsMinimalQuantityLevelByYear\nMapMinimalQuantityLevelByYearExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-510-NotExistingTeamMinimalQuantityLevelByYear.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTeamRowsMinimalQuantityLevelByYear\nMinimalQuantityLevelByYearValueTypeCheck@MinimalQuantityLevelByYearValueWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-512-MinimalQuantityLevelByYearValueWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMinimalQuantityLevelByYearValueWrongTypeRows\nCostRateTypeCheck@CostRateWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['4-512-CostRateWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteCostRateWrongTypeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateTeams')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TeamsStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateTeams_MapCatKeyLabels')]",
				"[concat(variables('factoryId'), '/datasets/UpdateTeams_MapAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/datasets/UpdateTeams_MapMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/datasets/4_510')]",
				"[concat(variables('factoryId'), '/datasets/4_511')]",
				"[concat(variables('factoryId'), '/datasets/4_512')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTeams_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "4-HumanResources/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateTeams",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateTeams"
						},
						{
							"dataset": {
								"referenceName": "UpdateTeams_MapCatKeyLabels",
								"type": "DatasetReference"
							},
							"name": "ReadMapCatKeyLabels"
						},
						{
							"dataset": {
								"referenceName": "UpdateTeams_MapAvailableQuantityByYear",
								"type": "DatasetReference"
							},
							"name": "ReadMapAvailableQuantityByYear"
						},
						{
							"dataset": {
								"referenceName": "UpdateTeams_MapMinimalQuantityLevelByYear",
								"type": "DatasetReference"
							},
							"name": "ReadMapMinimalQuantityLevelByYear"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "HumanResourcesUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapCatKeyLabelsKeyIndex"
						},
						{
							"name": "CatKeyLabelsCleaning"
						},
						{
							"name": "CatKeyLabelsUnion"
						},
						{
							"name": "CatKeyLabelsSelect"
						},
						{
							"name": "AggregateMapAvailableQuantityByYearKeyYear"
						},
						{
							"name": "AvailableQuantityByYearCleaning"
						},
						{
							"name": "AvailableQuantityByYearUnion"
						},
						{
							"name": "AvailableQuantityByYearSelect"
						},
						{
							"name": "AggregateMapMinimalQuantityLevelByYearKeyYear"
						},
						{
							"name": "MinimalQuantityLevelByYearCleaning"
						},
						{
							"name": "MinimalQuantityLevelByYearUnion"
						},
						{
							"name": "MinimalQuantityLevelByYearSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tConstrained as string,\n\t\tCostRate as string,\n\t\tExtraArea as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateTeams\nsource(output(\n\t\tTeam as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapCatKeyLabels\nsource(output(\n\t\tTeam as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapAvailableQuantityByYear\nsource(output(\n\t\tTeam as string,\n\t\tYear as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapMinimalQuantityLevelByYear\nReadUpdateTeams select(mapColumn(\n\t\t{$id} = Name,\n\t\tConstrained,\n\t\tCostRate,\n\t\tExtraArea\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:Team;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapCatKeyLabels aggregate(groupBy(Team),\n\tCatKeyLabels = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapCatKeyLabelsKeyIndex\nAggregateMapCatKeyLabelsKeyIndex derive(CatKeyLabels = replace(replace(replace(CatKeyLabels, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> CatKeyLabelsCleaning\nModelDefinition, CatKeyLabelsCleaning join({$id} == Team,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> CatKeyLabelsUnion\nCatKeyLabelsUnion select(mapColumn(\n\t\t{$id},\n\t\tConstrained,\n\t\tCostRate,\n\t\tExtraArea,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CatKeyLabelsSelect\nReadMapAvailableQuantityByYear aggregate(groupBy(Team),\n\tAvailableQuantityByYear = toString(keyValues(collect(toString(Year)), collect(toFloat(Value))))) ~> AggregateMapAvailableQuantityByYearKeyYear\nAggregateMapAvailableQuantityByYearKeyYear derive(AvailableQuantityByYear = replace(replace(replace(AvailableQuantityByYear, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> AvailableQuantityByYearCleaning\nCatKeyLabelsSelect, AvailableQuantityByYearCleaning join({$id} == Team,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> AvailableQuantityByYearUnion\nAvailableQuantityByYearUnion select(mapColumn(\n\t\t{$id},\n\t\tConstrained,\n\t\tCostRate,\n\t\tExtraArea,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels,\n\t\tAvailableQuantityByYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AvailableQuantityByYearSelect\nReadMapMinimalQuantityLevelByYear aggregate(groupBy(Team),\n\tMinimalQuantityLevelByYear = toString(keyValues(collect(toString(Year)), collect(toFloat(Value))))) ~> AggregateMapMinimalQuantityLevelByYearKeyYear\nAggregateMapMinimalQuantityLevelByYearKeyYear derive(MinimalQuantityLevelByYear = replace(replace(replace(MinimalQuantityLevelByYear, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> MinimalQuantityLevelByYearCleaning\nAvailableQuantityByYearSelect, MinimalQuantityLevelByYearCleaning join({$id} == Team,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> MinimalQuantityLevelByYearUnion\nMinimalQuantityLevelByYearUnion select(mapColumn(\n\t\t{$id},\n\t\tConstrained,\n\t\tCostRate,\n\t\tExtraArea,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tCatKeyLabels,\n\t\tAvailableQuantityByYear,\n\t\tMinimalQuantityLevelByYear\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MinimalQuantityLevelByYearSelect\nMinimalQuantityLevelByYearSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_Teams.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateTeams')]",
				"[concat(variables('factoryId'), '/datasets/UpdateTeams_MapCatKeyLabels')]",
				"[concat(variables('factoryId'), '/datasets/UpdateTeams_MapAvailableQuantityByYear')]",
				"[concat(variables('factoryId'), '/datasets/UpdateTeams_MapMinimalQuantityLevelByYear')]",
				"[concat(variables('factoryId'), '/datasets/HumanResourcesUpdateEntity_temp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPoliciesCriteriaStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Status"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "MainStatus"
						},
						{
							"dataset": {
								"referenceName": "CriterionTechnicalPoliciesCriteriastatus",
								"type": "DatasetReference"
							},
							"name": "CriterionTechnicalPoliciesCriteriastatus"
						},
						{
							"dataset": {
								"referenceName": "TechnicalPolicyTechnicalPoliciesCriteriastatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPolicyTechnicalPoliciesCriteriastatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
								"type": "DatasetReference"
							},
							"name": "WriteTechnicalPoliciesCriteriaStatus"
						}
					],
					"transformations": [
						{
							"name": "FilterCriterionTechnicalPoliciesCriteriastatus"
						},
						{
							"name": "FilterTechnicalPolicyTechnicalPoliciesCriteriastatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> MainStatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> CriterionTechnicalPoliciesCriteriastatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPolicyTechnicalPoliciesCriteriastatus\nMainStatus, CriterionTechnicalPoliciesCriteriastatus exists(MainStatus@TechnicalPolicy == CriterionTechnicalPoliciesCriteriastatus@TechnicalPolicy && MainStatus@Criterion == CriterionTechnicalPoliciesCriteriastatus@Criterion,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterCriterionTechnicalPoliciesCriteriastatus\nFilterCriterionTechnicalPoliciesCriteriastatus, TechnicalPolicyTechnicalPoliciesCriteriastatus exists(MainStatus@TechnicalPolicy == TechnicalPolicyTechnicalPoliciesCriteriastatus@TechnicalPolicy && MainStatus@Criterion == TechnicalPolicyTechnicalPoliciesCriteriastatus@Criterion,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterTechnicalPolicyTechnicalPoliciesCriteriastatus\nFilterTechnicalPolicyTechnicalPoliciesCriteriastatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tpartitionFileNames:['TechnicalPoliciesCriteria_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTechnicalPoliciesCriteriaStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesCriteriaStatus')]",
				"[concat(variables('factoryId'), '/datasets/CriterionTechnicalPoliciesCriteriastatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPolicyTechnicalPoliciesCriteriastatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPoliciesMainActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Status"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "MainStatus"
						},
						{
							"dataset": {
								"referenceName": "ActionFamilyTechnicalPoliciesMainActionFamiliesstatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamilyTechnicalPoliciesMainActionFamiliesstatus"
						},
						{
							"dataset": {
								"referenceName": "TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesMainActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "WriteTechnicalPoliciesMainActionFamiliesStatus"
						}
					],
					"transformations": [
						{
							"name": "FilterActionFamilyTechnicalPoliciesMainActionFamiliesstatus"
						},
						{
							"name": "FilterTechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> MainStatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamilyTechnicalPoliciesMainActionFamiliesstatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus\nMainStatus, ActionFamilyTechnicalPoliciesMainActionFamiliesstatus exists(MainStatus@TechnicalPolicy == ActionFamilyTechnicalPoliciesMainActionFamiliesstatus@TechnicalPolicy && MainStatus@ActionFamily == ActionFamilyTechnicalPoliciesMainActionFamiliesstatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterActionFamilyTechnicalPoliciesMainActionFamiliesstatus\nFilterActionFamilyTechnicalPoliciesMainActionFamiliesstatus, TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus exists(MainStatus@TechnicalPolicy == TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus@TechnicalPolicy && MainStatus@ActionFamily == TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterTechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus\nFilterTechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tpartitionFileNames:['TechnicalPoliciesMainActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTechnicalPoliciesMainActionFamiliesStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesMainActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamilyTechnicalPoliciesMainActionFamiliesstatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPolicyTechnicalPoliciesMainActionFamiliesstatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPoliciesSecondaryActionFamiliesStatus')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Status"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "MainStatus"
						},
						{
							"dataset": {
								"referenceName": "ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus",
								"type": "DatasetReference"
							},
							"name": "ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus"
						},
						{
							"dataset": {
								"referenceName": "TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus",
								"type": "DatasetReference"
							},
							"name": "WriteTechnicalPoliciesSecondaryActionFamiliesStatus"
						}
					],
					"transformations": [
						{
							"name": "FilterActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus"
						},
						{
							"name": "FilterTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus"
						}
					],
					"script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> MainStatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus\nMainStatus, ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus exists(MainStatus@TechnicalPolicy == ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus@TechnicalPolicy && MainStatus@ActionFamily == ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus\nFilterActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus, TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus exists(MainStatus@TechnicalPolicy == TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus@TechnicalPolicy && MainStatus@ActionFamily == TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus@ActionFamily,\n\tnegate:false,\n\tbroadcast: 'auto')~> FilterTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus\nFilterTechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTechnicalPolicy as string,\n\t\tActionFamily as string\n\t),\n\tpartitionFileNames:['TechnicalPoliciesSecondaryActionFamilies_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTechnicalPoliciesSecondaryActionFamiliesStatus"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesSecondaryActionFamiliesStatus')]",
				"[concat(variables('factoryId'), '/datasets/ActionFamilyTechnicalPoliciesSecondaryActionFamiliesstatus')]",
				"[concat(variables('factoryId'), '/datasets/TechnicalPolicyTechnicalPoliciesSecondaryActionFamiliesstatus')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPolicies_CheckData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateTechnicalPolicies",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateTechnicalPolicies"
						},
						{
							"dataset": {
								"referenceName": "TempInput_TechnicalPoliciesStatus",
								"type": "DatasetReference"
							},
							"name": "TechnicalPoliciesStatus"
						},
						{
							"dataset": {
								"referenceName": "UpdateTechnicalPolicies_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "UpdateTechnicalPoliciesMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "2_540",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_541",
								"type": "DatasetReference"
							},
							"name": "WriteMissingNameRows"
						},
						{
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference"
							},
							"name": "WriteEnablePendingActionRemovalWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference"
							},
							"name": "WriteIsInactiveWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_543",
								"type": "DatasetReference"
							},
							"name": "WriteTypeInvalidRangeRows"
						},
						{
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference"
							},
							"name": "WriteYearEndWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference"
							},
							"name": "WriteYearStartWrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_541",
								"type": "DatasetReference"
							},
							"name": "WriteMissingTechnicalPolicyRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_541",
								"type": "DatasetReference"
							},
							"name": "WriteMissingIndexRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_541",
								"type": "DatasetReference"
							},
							"name": "WriteMissingValueRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_540",
								"type": "DatasetReference"
							},
							"name": "WriteNotExistingTechnicalPolicyRowsBudgetCategories"
						},
						{
							"dataset": {
								"referenceName": "2_542",
								"type": "DatasetReference"
							},
							"name": "WriteNbRepAction1WrongTypeRows"
						},
						{
							"dataset": {
								"referenceName": "2_543",
								"type": "DatasetReference"
							},
							"name": "WriteNbRepAction1InvalidRangeRows"
						}
					],
					"transformations": [
						{
							"name": "ExistingNameInTechnicalPoliciesStatus"
						},
						{
							"name": "CheckMandatoryData"
						},
						{
							"name": "NonNullEnablePendingActionRemoval"
						},
						{
							"name": "EnablePendingActionRemovalTypeCheck"
						},
						{
							"name": "NonNullIsInactive"
						},
						{
							"name": "IsInactiveTypeCheck"
						},
						{
							"name": "NonNullEnumType"
						},
						{
							"name": "TypeEnumCheck"
						},
						{
							"name": "NonNullYearEnd"
						},
						{
							"name": "YearEndTypeCheck"
						},
						{
							"name": "NonNullYearStart"
						},
						{
							"name": "YearStartTypeCheck"
						},
						{
							"name": "MapBudgetCategoriesMandatoryCheck"
						},
						{
							"name": "MapBudgetCategoriesExistenceCheck"
						},
						{
							"name": "NonNullNbRepAction1"
						},
						{
							"name": "NbRepAction1TypeCheck"
						},
						{
							"name": "NbRepAction1RangeCheck"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tCriteriaFormula as string,\n\t\tEnablePendingActionRemoval as string,\n\t\tIsInactive as string,\n\t\tType as string,\n\t\tYearEnd as string,\n\t\tYearStart as string,\n\t\tNbRepAction1 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateTechnicalPolicies\nsource(output(\n\t\tName as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> TechnicalPoliciesStatus\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> UpdateTechnicalPoliciesMapBudgetCategories\nReadUpdateTechnicalPolicies, TechnicalPoliciesStatus exists(ReadUpdateTechnicalPolicies@Name == TechnicalPoliciesStatus@Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> ExistingNameInTechnicalPoliciesStatus\nReadUpdateTechnicalPolicies split(isNull(Name),\n\tdisjoint: false) ~> CheckMandatoryData@(MissingName)\nReadUpdateTechnicalPolicies filter(not(isNull(EnablePendingActionRemoval))) ~> NonNullEnablePendingActionRemoval\nNonNullEnablePendingActionRemoval split(not(isBoolean(EnablePendingActionRemoval)),\n\tdisjoint: false) ~> EnablePendingActionRemovalTypeCheck@(EnablePendingActionRemovalWrongType)\nReadUpdateTechnicalPolicies filter(not(isNull(IsInactive))) ~> NonNullIsInactive\nNonNullIsInactive split(not(isBoolean(IsInactive)),\n\tdisjoint: false) ~> IsInactiveTypeCheck@(IsInactiveWrongType)\nReadUpdateTechnicalPolicies filter(not(isNull(Type))) ~> NonNullEnumType\nNonNullEnumType filter(not(in(['ConditionBased', 'Curative', 'Imposed', 'Predetermined', 'Renewal'], Type))) ~> TypeEnumCheck\nReadUpdateTechnicalPolicies filter(not(isNull(YearEnd))) ~> NonNullYearEnd\nNonNullYearEnd split(not(isInteger(YearEnd)),\n\tdisjoint: false) ~> YearEndTypeCheck@(YearEndWrongType)\nReadUpdateTechnicalPolicies filter(not(isNull(YearStart))) ~> NonNullYearStart\nNonNullYearStart split(not(isInteger(YearStart)),\n\tdisjoint: false) ~> YearStartTypeCheck@(YearStartWrongType)\nUpdateTechnicalPoliciesMapBudgetCategories split(isNull(TechnicalPolicy),\n\tisNull(Index),\n\tisNull(Value),\n\tdisjoint: false) ~> MapBudgetCategoriesMandatoryCheck@(MissingTechnicalPolicy, MissingIndex, MissingValue)\nUpdateTechnicalPoliciesMapBudgetCategories, TechnicalPoliciesStatus exists(TechnicalPolicy == Name,\n\tnegate:true,\n\tbroadcast: 'auto')~> MapBudgetCategoriesExistenceCheck\nReadUpdateTechnicalPolicies filter(not(isNull(NbRepAction1))) ~> NonNullNbRepAction1\nNonNullNbRepAction1 split(not(isInteger(NbRepAction1)),\n\tdisjoint: false) ~> NbRepAction1TypeCheck@(NbRepAction1WrongType, NbRepAction1CorrectType)\nNbRepAction1TypeCheck@NbRepAction1CorrectType filter(toInteger(NbRepAction1) < 0.0) ~> NbRepAction1RangeCheck\nExistingNameInTechnicalPoliciesStatus sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-540-NotExistingName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingNameRows\nCheckMandatoryData@MissingName sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-541-MissColumnName.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingNameRows\nEnablePendingActionRemovalTypeCheck@EnablePendingActionRemovalWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-542-EnablePendingActionRemovalWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteEnablePendingActionRemovalWrongTypeRows\nIsInactiveTypeCheck@IsInactiveWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-542-IsInactiveWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteIsInactiveWrongTypeRows\nTypeEnumCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-543-TypeInvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTypeInvalidRangeRows\nYearEndTypeCheck@YearEndWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-542-YearEndWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteYearEndWrongTypeRows\nYearStartTypeCheck@YearStartWrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-542-YearStartWrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteYearStartWrongTypeRows\nMapBudgetCategoriesMandatoryCheck@MissingTechnicalPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-541-MissColumnTechnicalPolicyBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingTechnicalPolicyRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingIndex sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-541-MissColumnIndexBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingIndexRowsBudgetCategories\nMapBudgetCategoriesMandatoryCheck@MissingValue sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-541-MissColumnValueBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteMissingValueRowsBudgetCategories\nMapBudgetCategoriesExistenceCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-540-NotExistingTechnicalPolicyBudgetCategories.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNotExistingTechnicalPolicyRowsBudgetCategories\nNbRepAction1TypeCheck@NbRepAction1WrongType sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-542-NbRepAction1WrongType.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNbRepAction1WrongTypeRows\nNbRepAction1RangeCheck sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['2-543-NbRepAction1InvalidRange.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteNbRepAction1InvalidRangeRows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/datasets/TempInput_TechnicalPoliciesStatus')]",
				"[concat(variables('factoryId'), '/datasets/UpdateTechnicalPolicies_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/2_540')]",
				"[concat(variables('factoryId'), '/datasets/2_541')]",
				"[concat(variables('factoryId'), '/datasets/2_542')]",
				"[concat(variables('factoryId'), '/datasets/2_543')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateTechnicalPolicies_TransformData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "2-ActivitiesManagement/Update"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UpdateTechnicalPolicies",
								"type": "DatasetReference"
							},
							"name": "ReadUpdateTechnicalPolicies"
						},
						{
							"dataset": {
								"referenceName": "UpdateTechnicalPolicies_MapBudgetCategories",
								"type": "DatasetReference"
							},
							"name": "ReadMapBudgetCategories"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ActivitiesManagementUpdateEntity_temp",
								"type": "DatasetReference"
							},
							"name": "WriteToTempRepo"
						}
					],
					"transformations": [
						{
							"name": "IdSelection"
						},
						{
							"name": "ModelDefinition"
						},
						{
							"name": "AggregateMapBudgetCategoriesKeyIndex"
						},
						{
							"name": "BudgetCategoriesCleaning"
						},
						{
							"name": "BudgetCategoriesUnion"
						},
						{
							"name": "BudgetCategoriesSelect"
						}
					],
					"script": "source(output(\n\t\tName as string,\n\t\tAssetClass as string,\n\t\tCriteriaFormula as string,\n\t\tEnablePendingActionRemoval as string,\n\t\tIsInactive as string,\n\t\tType as string,\n\t\tYearEnd as string,\n\t\tYearStart as string,\n\t\tNbRepAction1 as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadUpdateTechnicalPolicies\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tIndex as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadMapBudgetCategories\nReadUpdateTechnicalPolicies select(mapColumn(\n\t\t{$id} = Name,\n\t\tAssetClass,\n\t\tCriteriaFormula,\n\t\tEnablePendingActionRemoval,\n\t\tIsInactive,\n\t\tType,\n\t\tYearEnd,\n\t\tYearStart,\n\t\tNbRepAction1\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$metadata.$model} = 'dtmi:TechnicalPolicy;1',\n\t\t{$entityDelete} = 'false') ~> ModelDefinition\nReadMapBudgetCategories aggregate(groupBy(TechnicalPolicy),\n\tBudgetCategories = toString(keyValues(collect(toString(Index)), collect(toString(Value))))) ~> AggregateMapBudgetCategoriesKeyIndex\nAggregateMapBudgetCategoriesKeyIndex derive(BudgetCategories = replace(replace(replace(BudgetCategories, '\"{', '{'), '}\"', '}'), '\\\\', '')) ~> BudgetCategoriesCleaning\nModelDefinition, BudgetCategoriesCleaning join({$id} == TechnicalPolicy,\n\tjoinType:'left',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> BudgetCategoriesUnion\nBudgetCategoriesUnion select(mapColumn(\n\t\t{$id},\n\t\tAssetClass,\n\t\tCriteriaFormula,\n\t\tEnablePendingActionRemoval,\n\t\tIsInactive,\n\t\tType,\n\t\tYearEnd,\n\t\tYearStart,\n\t\tNbRepAction1,\n\t\t{$metadata.$model},\n\t\t{$entityDelete},\n\t\tBudgetCategories\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> BudgetCategoriesSelect\nBudgetCategoriesSelect sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPolicies.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UpdateTechnicalPolicies')]",
				"[concat(variables('factoryId'), '/datasets/UpdateTechnicalPolicies_MapBudgetCategories')]",
				"[concat(variables('factoryId'), '/datasets/ActivitiesManagementUpdateEntity_temp')]"
			]
		}
	]
}