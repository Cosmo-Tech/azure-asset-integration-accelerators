{
    "name": "DeleteTechnicalPoliciesCriteria_TransformData",
    "properties": {
        "description": "",
        "folder": {
            "name": "2-ActivitiesManagement/Delete"
        },
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "DeleteTechnicalPoliciesCriteria",
                        "type": "DatasetReference"
                    },
                    "name": "ReadDeleteTechnicalPoliciesCriteria"
                },
                {
                    "dataset": {
                        "referenceName": "TempInput_TechnicalPoliciesCriteriaStatus",
                        "type": "DatasetReference"
                    },
                    "name": "ReadTempStatusTechnicalPoliciesCriteriaStatusEditor"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "DeleteTechnicalPoliciesCriteria_temp",
                        "type": "DatasetReference"
                    },
                    "name": "WriteToTempRepo"
                },
                {
                    "dataset": {
                        "referenceName": "TempOutput_TechnicalPoliciesCriteriaStatus",
                        "type": "DatasetReference"
                    },
                    "name": "WriteTempStatusStatusUpdateTechnicalPoliciesCriteriaStatusEditor"
                }
            ],
            "transformations": [
                {
                    "name": "IdSelection"
                },
                {
                    "name": "ModelDefinition"
                },
                {
                    "name": "StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor"
                },
                {
                    "name": "StatusUpdateTechnicalPoliciesCriteriaStatusEditor"
                }
            ],
            "script": "source(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadDeleteTechnicalPoliciesCriteria\nReadDeleteTechnicalPoliciesCriteria select(mapColumn(\n\t\t{$sourceId} = TechnicalPolicy,\n\t\t{$targetId} = Criterion),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> IdSelection\nIdSelection derive({$relationshipName} = 'Policy_contains_Criterion',\n\t{$relationshipDelete} = 'true',\n\t{$relationshipId} = {$sourceId} + 'to' + {$targetId}) ~> ModelDefinition\nModelDefinition sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['tmp_TechnicalPoliciesCriteria.v1.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteToTempRepo\nsource(output(\n\t\tTechnicalPolicy as string,\n\t\tCriterion as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: true) ~> ReadTempStatusTechnicalPoliciesCriteriaStatusEditor\nReadDeleteTechnicalPoliciesCriteria select(mapColumn(\n\t\tTechnicalPolicy,\n\t\tCriterion),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor\nReadTempStatusTechnicalPoliciesCriteriaStatusEditor, StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor exists(ReadTempStatusTechnicalPoliciesCriteriaStatusEditor@TechnicalPolicy == StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor@TechnicalPolicy && ReadTempStatusTechnicalPoliciesCriteriaStatusEditor@Criterion == StatusColumnSelectionTechnicalPoliciesCriteriaStatusEditor@Criterion,\n\tnegate:true,\n\tbroadcast: 'auto')~> StatusUpdateTechnicalPoliciesCriteriaStatusEditor\nStatusUpdateTechnicalPoliciesCriteriaStatusEditor sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['TechnicalPoliciesCriteria_status.csv'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> WriteTempStatusStatusUpdateTechnicalPoliciesCriteriaStatusEditor"
        }
    }
}